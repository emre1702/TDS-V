# This is a basic workflow to help you get started with Actions

name: DeployToServer

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_csharp:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build -c Debug --no-restore --nologo

    - name: Test
      run: dotnet test --no-build --verbosity normal

  versioning: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get next version
        id: versioning
        uses: paulhatch/semantic-version@v3.2.1
        with:
          # The prefix to use to identify tags
          branch: "master"
          # The prefix to use to identify tags
          tag_prefix: "v" 
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change
          # ^\[((NEW)|(NEU))\]
          major_pattern: "[NEW]"
          # Same as above except indicating a minor change
          # ^\[((CHANGE)|(BUG))\]  
          minor_pattern: "[CHANGE]"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}.${increment}"
          # Indicate whether short tags like 'v1' should be supported. If false only full
          # tags like 'v1.0.0' will be recognized.
          short_tags: true
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false   
          
      - name: Create tag
        uses: EndBug/latest-tag@latest
        with:
          # You can change the name of the tag with this input.
          # Default: 'latest'
          tag-name: ${{ steps.versioning.outputs.version_tag }}
   
