<?xml version="1.0"?>
<doc>
    <assembly>
        <name>rage-sharp</name>
    </assembly>
    <members>
        <member name="M:RAGE.Chat.Output(System.String)">
            <summary>
            Outputs a message into the chat.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:RAGE.Chat.Show(System.Boolean)">
            <summary>
            Changes chat visibility state.
            </summary>
            <param name="toggle"></param>
        </member>
        <member name="M:RAGE.Chat.Activate(System.Boolean)">
            <summary>
            Changes chat input state.
            </summary>
            <param name="toggle"></param>
        </member>
        <member name="P:RAGE.Chat.SafeMode">
            <summary>
            Enables HTML filter to prevent chat XSS.
            </summary>
        </member>
        <member name="P:RAGE.Chat.Colors">
            <summary>
            Enables the possibility to send chat messages like !{255, 255, 255, 100} (supports all the possible CSS "color" values).
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.AddTextComponentSubstringName">
            <summary>
            see <see cref="M:RAGE.Game.Ui.AddTextComponentSubstringBlipName(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.DoesExist">
            <summary>
            see <see cref="M:RAGE.Game.Ui.DoesBlipExist(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.EndTextCommandSetName">
            <summary>
            see <see cref="M:RAGE.Game.Ui.EndTextCommandSetBlipName(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.GetAlpha">
            <summary>
            see <see cref="M:RAGE.Game.Ui.GetBlipAlpha(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.GetColour">
            <summary>
            see <see cref="M:RAGE.Game.Ui.GetBlipColour(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.GetHudColour">
            <summary>
            see <see cref="M:RAGE.Game.Ui.GetBlipHudColour(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.GetInfoIdCoord">
            <summary>
            see <see cref="M:RAGE.Game.Ui.GetBlipInfoIdCoord(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.GetCoords">
            <summary>
            see <see cref="M:RAGE.Game.Ui.GetBlipCoords(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.GetInfoIdDisplay">
            <summary>
            see <see cref="M:RAGE.Game.Ui.GetBlipInfoIdDisplay(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.GetInfoIdEntityIndex">
            <summary>
            see <see cref="M:RAGE.Game.Ui.GetBlipInfoIdEntityIndex(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.GetInfoIdType">
            <summary>
            see <see cref="M:RAGE.Game.Ui.GetBlipInfoIdType(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.GetSprite">
            <summary>
            see <see cref="M:RAGE.Game.Ui.GetBlipSprite(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.HideNumberOn">
            <summary>
            see <see cref="M:RAGE.Game.Ui.HideNumberOnBlip(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.IsFlashing">
            <summary>
            see <see cref="M:RAGE.Game.Ui.IsBlipFlashing(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.IsOnMinimap">
            <summary>
            see <see cref="M:RAGE.Game.Ui.IsBlipOnMinimap(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.IsShortRange">
            <summary>
            see <see cref="M:RAGE.Game.Ui.IsBlipShortRange(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.IsMissionCreator">
            <summary>
            see <see cref="M:RAGE.Game.Ui.IsMissionCreatorBlip(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.Pulse">
            <summary>
            see <see cref="M:RAGE.Game.Ui.PulseBlip(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetAlpha(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipAlpha(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetAsFriendly(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipAsFriendly(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetShrink(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipShrink(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetAsMissionCreatorBlip(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipAsMissionCreatorBlip(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetAsShortRange(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipAsShortRange(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetBright(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipBright(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetCategory(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipCategory(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetColour(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipColour(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetCoords(System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipCoords(System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetDisplay(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipDisplay(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetFade(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipFade(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetFlashes(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipFlashes(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetFlashesAlternate(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipFlashesAlternate(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetFlashInterval(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipFlashInterval(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetFlashTimer(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipFlashTimer(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetHighDetail(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipHighDetail(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetNameFromTextFile(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipNameFromTextFile(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetNameToPlayerName(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipNameToPlayerName(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetPriority(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipPriority(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetRotation(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipRotation(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetRoute(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipRoute(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetRouteColour(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipRouteColour(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetScale(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipScale(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetSecondaryColour(System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipSecondaryColour(System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetShowCone(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipShowCone(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetSprite(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipSprite(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetFriend(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipFriend(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.ShowHeadingIndicatorOn(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.ShowHeadingIndicatorOnBlip(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.ShowNumberOn(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.ShowNumberOnBlip(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetFriendly(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipFriendly(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.SetChecked(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetBlipChecked(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.BlipBase.GetInfoIdPickupIndex">
            <summary>
            see <see cref="M:RAGE.Game.Ui.GetBlipInfoIdPickupIndex(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.CheckpointBase.SetCylinderHeight(System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Graphics.SetCheckpointCylinderHeight(System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.CheckpointBase.SetIconRgba(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Graphics.SetCheckpointIconRgba(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.CheckpointBase.SetRgba(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Graphics.SetCheckpointRgba(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetGameplayHint(System.Single,System.Single,System.Single,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Cam.SetGameplayEntityHint(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.DecorExistOn(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Decorator.DecorExistOn(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.DecorGetBool(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Decorator.DecorGetBool(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.DecorGetFloat(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Decorator.DecorGetFloat(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.DecorGetInt(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Decorator.DecorGetInt(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.DecorRemove(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Decorator.DecorRemove(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.DecorSetBool(System.String,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Decorator.DecorSetBool(System.Int32,System.String,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.DecorSetFloat(System.String,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Decorator.DecorSetFloat(System.Int32,System.String,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.DecorSetInt(System.String,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Decorator.DecorSetInt(System.Int32,System.String,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.DecorSetTime(System.String,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Decorator.DecorSetTime(System.Int32,System.String,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.ApplyForceTo(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.ApplyForceToEntity(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.ApplyForceToCenterOfMass(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.ApplyForceToEntityCenterOfMass(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.ClearLastDamageEntity">
            <summary>
            see <see cref="M:RAGE.Game.Entity.ClearEntityLastDamageEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.Detach(System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.DetachEntity(System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.DoesBelongToThisScript(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.DoesEntityBelongToThisScript(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.DoesExist">
            <summary>
            see <see cref="M:RAGE.Game.Entity.DoesEntityExist(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.DoesHaveDrawable">
            <summary>
            see <see cref="M:RAGE.Game.Entity.DoesEntityHaveDrawable(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.DoesHavePhysics">
            <summary>
            see <see cref="M:RAGE.Game.Entity.DoesEntityHavePhysics(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.ForceAiAndAnimationUpdate">
            <summary>
            see <see cref="M:RAGE.Game.Entity.ForceEntityAiAndAnimationUpdate(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.FreezePosition(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.FreezeEntityPosition(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetCollisionNormalOfLastHitFor">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetCollisionNormalOfLastHitForEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetAlpha">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityAlpha(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetAnimCurrentTime(System.String,System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityAnimCurrentTime(System.Int32,System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetAnimTotalTime(System.String,System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityAnimTotalTime(System.Int32,System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetAttachedTo">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityAttachedTo(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetBoneIndexByName(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityBoneIndexByName(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetCollisionDisabled">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityCollisionDisabled(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetCoords(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityCoords(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetForwardVector">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityForwardVector(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetForwardX">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityForwardX(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetForwardY">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityForwardY(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetHeading">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityHeading(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetPhysicsHeading">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityPhysicsHeading(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetHealth">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityHealth(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetHeight(System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityHeight(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetHeightAboveGround">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityHeightAboveGround(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetLodDist">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityLodDist(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetMatrix(RAGE.Vector3,RAGE.Vector3,RAGE.Vector3,RAGE.Vector3)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityMatrix(System.Int32,RAGE.Vector3,RAGE.Vector3,RAGE.Vector3,RAGE.Vector3)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetMaxHealth">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityMaxHealth(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetModel">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityModel(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetPitch">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityPitch(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetPopulationType">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityPopulationType(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetQuaternion(System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityQuaternion(System.Int32,System.Single@,System.Single@,System.Single@,System.Single@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetRoll">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityRoll(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetRotation(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityRotation(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetRotationVelocity">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityRotationVelocity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetScript(System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityScript(System.Int32,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetSpeed">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntitySpeed(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetSpeedVector(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntitySpeedVector(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetSubmergedLevel">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntitySubmergedLevel(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetType">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityType(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetUprightValue">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityUprightValue(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetVelocity">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetEntityVelocity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetLastMaterialHitBy">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetLastMaterialHitByEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetNearestPlayerTo">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetNearestPlayerToEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetNearestPlayerToOnTeam(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetNearestPlayerToEntityOnTeam(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetOffsetFromGivenWorldCoords(System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetOffsetFromEntityGivenWorldCoords(System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetOffsetFromInWorldCoords(System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetOffsetFromEntityInWorldCoords(System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetObjectIndexFromIndex">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetObjectIndexFromEntityIndex(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetPedIndexFromIndex">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetPedIndexFromEntityIndex(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetVehicleIndexFromIndex">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetVehicleIndexFromEntityIndex(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetWorldPositionOfBone(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.GetWorldPositionOfEntityBone(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.HasAnimEventFired(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.HasAnimEventFired(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.HasCollisionLoadedAround">
            <summary>
            see <see cref="M:RAGE.Game.Entity.HasCollisionLoadedAroundEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.HasAnimFinished(System.String,System.String,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.HasEntityAnimFinished(System.Int32,System.String,System.String,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.HasBeenDamagedByAnyObject">
            <summary>
            see <see cref="M:RAGE.Game.Entity.HasEntityBeenDamagedByAnyObject(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.HasBeenDamagedByAnyPed">
            <summary>
            see <see cref="M:RAGE.Game.Entity.HasEntityBeenDamagedByAnyPed(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.HasBeenDamagedByAnyVehicle">
            <summary>
            see <see cref="M:RAGE.Game.Entity.HasEntityBeenDamagedByAnyVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.HasCollidedWithAnything">
            <summary>
            see <see cref="M:RAGE.Game.Entity.HasEntityCollidedWithAnything(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsAnObject">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityAnObject(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsAttached">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityAttached(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsAttachedToAnyObject">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityAttachedToAnyObject(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsAttachedToAnyPed">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityAttachedToAnyPed(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsAttachedToAnyVehicle">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityAttachedToAnyVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsAttachedToEntity(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityAttachedToEntity(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsAtCoord(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityAtCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsAtEntity(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityAtEntity(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsAMissionEntity">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityAMissionEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsAPed">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityAPed(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsAVehicle">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityAVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsDead(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityDead(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsInAir">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityInAir(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsInAngledArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityInAngledArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsInArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityInArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsInWater">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityInWater(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsInZone(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityInZone(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsOccluded">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityOccluded(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsOnScreen">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityOnScreen(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsPlayingAnim(System.String,System.String,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityPlayingAnim(System.Int32,System.String,System.String,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsStatic">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityStatic(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsTouchingEntity(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityTouchingEntity(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsTouchingModel(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityTouchingModel(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsUpright(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityUpright(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsUpsidedown">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityUpsidedown(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsVisible">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityVisible(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsVisibleToScript">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityVisibleToScript(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsWaitingForWorldCollision">
            <summary>
            see <see cref="M:RAGE.Game.Entity.IsEntityWaitingForWorldCollision(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.PlayAnim(System.String,System.String,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.PlayEntityAnim(System.Int32,System.String,System.String,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.PlaySynchronizedAnim(System.Int32,System.String,System.String,System.Single,System.Single,System.Int32,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.PlaySynchronizedEntityAnim(System.Int32,System.Int32,System.String,System.String,System.Single,System.Single,System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.ProcessAttachments">
            <summary>
            see <see cref="M:RAGE.Game.Entity.ProcessEntityAttachments(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.ResetAlpha">
            <summary>
            see <see cref="M:RAGE.Game.Entity.ResetEntityAlpha(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetAlpha(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityAlpha(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetAlwaysPrerender(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityAlwaysPrerender(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetAnimCurrentTime(System.String,System.String,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityAnimCurrentTime(System.Int32,System.String,System.String,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetAnimSpeed(System.String,System.String,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityAnimSpeed(System.Int32,System.String,System.String,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetAsMissionEntity(System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityAsMissionEntity(System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetCanBeDamaged(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityCanBeDamaged(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetCanBeDamagedByRelationshipGroup(System.Boolean,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityCanBeDamagedByRelationshipGroup(System.Int32,System.Boolean,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetCanBeTargetedWithoutLos(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityCanBeTargetedWithoutLos(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetCollision(System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityCollision(System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetCoords(System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityCoords(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetCoordsNoOffset(System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityCoordsNoOffset(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetCoords2(System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityCoords2(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetDynamic(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityDynamic(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetHasGravity(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityHasGravity(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetHeading(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityHeading(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetHealth(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityHealth(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetInvincible(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityInvincible(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetIsTargetPriority(System.Boolean,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityIsTargetPriority(System.Int32,System.Boolean,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetLights(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityLights(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetLoadCollisionFlag(System.Boolean,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityLoadCollisionFlag(System.Int32,System.Boolean,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetLodDist(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityLodDist(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetMaxHealth(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityMaxHealth(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetMaxSpeed(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityMaxSpeed(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetMotionBlur(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityMotionBlur(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetNoCollisionEntity(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityNoCollisionEntity(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetOnlyDamagedByPlayer(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityOnlyDamagedByPlayer(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetOnlyDamagedByRelationshipGroup(System.Boolean,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityOnlyDamagedByRelationshipGroup(System.Int32,System.Boolean,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetProofs(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityProofs(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetQuaternion(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityQuaternion(System.Int32,System.Single,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetRecordsCollisions(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityRecordsCollisions(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetRenderScorched(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityRenderScorched(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetRotation(System.Single,System.Single,System.Single,System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityRotation(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetSomething(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntitySomething(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetTrafficlightOverride(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityTrafficlightOverride(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetVelocity(System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityVelocity(System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetVisible(System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.SetEntityVisible(System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.StopAnim(System.String,System.String,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.StopEntityAnim(System.Int32,System.String,System.String,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.StopSynchronizedAnim(System.Single,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Entity.StopSynchronizedEntityAnim(System.Int32,System.Single,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetHashNameForComponent(System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Files.GetHashNameForComponent(System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetHashNameForProp(System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Files.GetHashNameForProp(System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsOnFire">
            <summary>
            see <see cref="M:RAGE.Game.Fire.IsEntityOnFire(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.StartFire">
            <summary>
            see <see cref="M:RAGE.Game.Fire.StartEntityFire(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.StopFire">
            <summary>
            see <see cref="M:RAGE.Game.Fire.StopEntityFire(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.AddIcon(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Graphics.AddEntityIcon(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.AttachTvAudioTo">
            <summary>
            see <see cref="M:RAGE.Game.Graphics.AttachTvAudioToEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.RemoveParticleFxFrom">
            <summary>
            see <see cref="M:RAGE.Game.Graphics.RemoveParticleFxFromEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetIconColor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Graphics.SetEntityIconColor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetIconVisibility(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Graphics.SetEntityIconVisibility(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.AddBlipFor">
            <summary>
            see <see cref="M:RAGE.Game.Ui.AddBlipForEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetBlipFrom">
            <summary>
            see <see cref="M:RAGE.Game.Ui.GetBlipFromEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.ClearRoomFor">
            <summary>
            see <see cref="M:RAGE.Game.Interior.ClearRoomForEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.ForceRoomFor(System.Int32,System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Interior.ForceRoomForEntity(System.Int32,System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetInteriorFrom">
            <summary>
            see <see cref="M:RAGE.Game.Interior.GetInteriorFromEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetKeyForInRoom">
            <summary>
            see <see cref="M:RAGE.Game.Interior.GetKeyForEntityInRoom(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.GetRoomKeyFrom">
            <summary>
            see <see cref="M:RAGE.Game.Interior.GetRoomKeyFromEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.CellCamIsCharVisibleNoFaceCheck">
            <summary>
            see <see cref="M:RAGE.Game.Mobile.CellCamIsCharVisibleNoFaceCheck(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.NetworkAddToSynchronisedScene(System.Int32,System.String,System.String,System.Single,System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Network.NetworkAddEntityToSynchronisedScene(System.Int32,System.Int32,System.String,System.String,System.Single,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.NetworkDoesExistWithNetworkId">
            <summary>
            see <see cref="M:RAGE.Game.Network.NetworkDoesEntityExistWithNetworkId(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.NetworkFadeIn(System.Boolean,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Network.NetworkFadeInEntity(System.Int32,System.Boolean,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.NetworkFadeOut(System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Network.NetworkFadeOutEntity(System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.NetworkGetIsLocal">
            <summary>
            see <see cref="M:RAGE.Game.Network.NetworkGetEntityIsLocal(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.NetworkGetIsNetworked">
            <summary>
            see <see cref="M:RAGE.Game.Network.NetworkGetEntityIsNetworked(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.NetworkHasControlOf">
            <summary>
            see <see cref="M:RAGE.Game.Network.NetworkHasControlOfEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.NetworkRegisterAsNetworked">
            <summary>
            see <see cref="M:RAGE.Game.Network.NetworkRegisterEntityAsNetworked(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.NetworkRequestControlOf">
            <summary>
            see <see cref="M:RAGE.Game.Network.NetworkRequestControlOfEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.NetworkSetCanBlend(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Network.NetworkSetEntityCanBlend(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.NetworkSetVisibleToNetwork(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Network.NetworkSetEntityVisibleToNetwork(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.NetworkUnregisterNetworked">
            <summary>
            see <see cref="M:RAGE.Game.Network.NetworkUnregisterNetworkedEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetLocallyInvisible">
            <summary>
            see <see cref="M:RAGE.Game.Network.SetEntityLocallyInvisible(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetLocallyVisible">
            <summary>
            see <see cref="M:RAGE.Game.Network.SetEntityLocallyVisible(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetVisibleInCutscene(System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Network.SetEntityVisibleInCutscene(System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.NetworkGetNetworkIdFrom">
            <summary>
            see <see cref="M:RAGE.Game.Network.NetworkGetNetworkIdFromEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.ActivatePhysics">
            <summary>
            see <see cref="M:RAGE.Game.Physics.ActivatePhysics(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.StartShapeTestBound(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Shapetest.StartShapeTestBound(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.StartShapeTestBoundingBox(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Shapetest.StartShapeTestBoundingBox(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.IsFocus">
            <summary>
            see <see cref="M:RAGE.Game.Streaming.IsEntityFocus(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.SetFocus">
            <summary>
            see <see cref="M:RAGE.Game.Streaming.SetFocusEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.ClearLastWeaponDamage">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.ClearEntityLastWeaponDamage(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.GameEntityBase.HasBeenDamagedByWeapon(System.UInt32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.HasEntityBeenDamagedByWeapon(System.Int32,System.UInt32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.MapObjectBase.PlayStreamFrom">
            <summary>
            see <see cref="M:RAGE.Game.Audio.PlayStreamFromObject(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.MapObjectBase.ObjToNet">
            <summary>
            see <see cref="M:RAGE.Game.Network.ObjToNet(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.MapObjectBase.HasBeenBroken">
            <summary>
            see <see cref="M:RAGE.Game.Object.HasObjectBeenBroken(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.MapObjectBase.IsVisible">
            <summary>
            see <see cref="M:RAGE.Game.Object.IsObjectVisible(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.MapObjectBase.MarkForDeletion">
            <summary>
            see <see cref="M:RAGE.Game.Object.MarkObjectForDeletion(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.MapObjectBase.PlaceOnGroundProperly">
            <summary>
            see <see cref="M:RAGE.Game.Object.PlaceObjectOnGroundProperly(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.MapObjectBase.SetActivatePhysicsAsSoonAsItIsUnfrozen(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Object.SetActivateObjectPhysicsAsSoonAsItIsUnfrozen(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.MapObjectBase.SetPhysicsParams(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Object.SetObjectPhysicsParams(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.MapObjectBase.SetTargettable(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Object.SetObjectTargettable(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.MapObjectBase.SetTextureVariant(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Object.SetObjectTextureVariant(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.MapObjectBase.SetTeamPickup(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Object.SetTeamPickupObject(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.MapObjectBase.Slide(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Object.SlideObject(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.MapObjectBase.SetDisableFragDamage(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Physics.SetDisableFragDamage(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.MapObjectBase.IsWithinBrainActivationRange">
            <summary>
            see <see cref="M:RAGE.Game.Task.IsObjectWithinBrainActivationRange(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.MapObjectBase.GetVehicleAttachedToEntity">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleAttachedToEntity(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskGoTo(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskGoToEntity(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskLookAtCoord(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskLookAtCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskShootAt(System.Int32,System.Int32,System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskShootAtEntity(System.Int32,System.Int32,System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.DisablePainAudio(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.DisablePedPainAudio(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.CanSpeak(System.String,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.CanPedSpeak(System.Int32,System.String,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsAmbientSpeechDisabled">
            <summary>
            see <see cref="M:RAGE.Game.Audio.IsAmbientSpeechDisabled(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsAnySpeechPlaying">
            <summary>
            see <see cref="M:RAGE.Game.Audio.IsAnySpeechPlaying(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInCurrentConversation">
            <summary>
            see <see cref="M:RAGE.Game.Audio.IsPedInCurrentConversation(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsRingtonePlaying">
            <summary>
            see <see cref="M:RAGE.Game.Audio.IsPedRingtonePlaying(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.PlayPain(System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.PlayPain(System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.PlayAmbientSpeech2(System.String,System.String,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.PlayAmbientSpeech2(System.Int32,System.String,System.String,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.PlayAmbientSpeech1(System.String,System.String,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.PlayAmbientSpeech1(System.Int32,System.String,System.String,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.PlayStreamFrom">
            <summary>
            see <see cref="M:RAGE.Game.Audio.PlayStreamFromPed(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetTalk">
            <summary>
            see <see cref="M:RAGE.Game.Audio.SetPedTalk(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAmbientVoiceName(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.SetAmbientVoiceName(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetIsDrunk(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.SetPedIsDrunk(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetScream">
            <summary>
            see <see cref="M:RAGE.Game.Audio.SetPedScream(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.StopCurrentPlayingAmbientSpeech">
            <summary>
            see <see cref="M:RAGE.Game.Audio.StopCurrentPlayingAmbientSpeech(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetMute">
            <summary>
            see <see cref="M:RAGE.Game.Audio.SetPedMute(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.StopRingtone">
            <summary>
            see <see cref="M:RAGE.Game.Audio.StopPedRingtone(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.StopSpeaking(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.StopPedSpeaking(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsBeingArrested">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsPedBeingArrested(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.AddVehicleSubtaskAttackCoord(System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.AddVehicleSubtaskAttackCoord(System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.AddVehicleSubtaskAttack(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.AddVehicleSubtaskAttackPed(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearDrivebyTaskUnderneathDrivingTask">
            <summary>
            see <see cref="M:RAGE.Game.Ai.ClearDrivebyTaskUnderneathDrivingTask(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearSecondaryTask">
            <summary>
            see <see cref="M:RAGE.Game.Ai.ClearPedSecondaryTask(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearTasks">
            <summary>
            see <see cref="M:RAGE.Game.Ai.ClearPedTasks(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearTasksImmediately">
            <summary>
            see <see cref="M:RAGE.Game.Ai.ClearPedTasksImmediately(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ControlMountedWeapon">
            <summary>
            see <see cref="M:RAGE.Game.Ai.ControlMountedWeapon(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetIsTaskActive(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.GetIsTaskActive(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetNavmeshRouteDistanceRemaining(System.Int32@,System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.GetNavmeshRouteDistanceRemaining(System.Int32,System.Int32@,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetNavmeshRouteResult">
            <summary>
            see <see cref="M:RAGE.Game.Ai.GetNavmeshRouteResult(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetDesiredMoveBlendRatio">
            <summary>
            see <see cref="M:RAGE.Game.Ai.GetPedDesiredMoveBlendRatio(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetPhoneGestureAnimCurrentTime">
            <summary>
            see <see cref="M:RAGE.Game.Ai.GetPhoneGestureAnimCurrentTime(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetPhoneGestureAnimTotalTime">
            <summary>
            see <see cref="M:RAGE.Game.Ai.GetPhoneGestureAnimTotalTime(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetSequenceProgress">
            <summary>
            see <see cref="M:RAGE.Game.Ai.GetSequenceProgress(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsDrivebyTaskUnderneathDrivingTask">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsDrivebyTaskUnderneathDrivingTask(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsMountedWeaponTaskUnderneathDrivingTask">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsMountedWeaponTaskUnderneathDrivingTask(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsMoveBlendRatioRunning">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsMoveBlendRatioRunning(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsMoveBlendRatioSprinting">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsMoveBlendRatioSprinting(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsMoveBlendRatioStill">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsMoveBlendRatioStill(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsMoveBlendRatioWalking">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsMoveBlendRatioWalking(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsActiveInScenario">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsPedActiveInScenario(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsCuffed">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsPedCuffed(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsGettingUp">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsPedGettingUp(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInWrithe">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsPedInWrithe(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsRunning">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsPedRunning(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsRunningArrestTask">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsPedRunningArrestTask(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsSprinting">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsPedSprinting(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsStill">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsPedStill(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsStrafing">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsPedStrafing(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsWalking">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsPedWalking(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsPlayingPhoneGestureAnim">
            <summary>
            see <see cref="M:RAGE.Game.Ai.IsPlayingPhoneGestureAnim(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.HasUseScenarioTask">
            <summary>
            see <see cref="M:RAGE.Game.Ai.PedHasUseScenarioTask(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.PlayAnimOnRunningScenario(System.String,System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.PlayAnimOnRunningScenario(System.Int32,System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDriveTaskDrivingStyle(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.SetDriveTaskDrivingStyle(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetHighFallTask(System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.SetHighFallTask(System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetParachuteTaskTarget(System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.SetParachuteTaskTarget(System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetParachuteTaskThrust(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.SetParachuteTaskThrust(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDesiredMoveBlendRatio(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.SetPedDesiredMoveBlendRatio(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetPathAvoidFire(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.SetPedPathAvoidFire(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetPathCanDropFromHeight(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.SetPedPathCanDropFromHeight(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetPathCanUseClimbovers(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.SetPedPathCanUseClimbovers(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetPathCanUseLadders(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.SetPedPathCanUseLadders(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetPathMayEnterWater(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.SetPedPathMayEnterWater(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetPathPreferToAvoidWater(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.SetPedPathPreferToAvoidWater(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetWaypointRouteOffset(System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.SetPedWaypointRouteOffset(System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetTaskVehicleChaseBehaviorFlag(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.SetTaskVehicleChaseBehaviorFlag(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetTaskVehicleChaseIdealPursuitDistance(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.SetTaskVehicleChaseIdealPursuitDistance(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.StopAnimPlayback(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.StopAnimPlayback(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.StopAnimTask(System.String,System.String,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.StopAnimTask(System.Int32,System.String,System.String,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskAchieveHeading(System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskAchieveHeading(System.Int32,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskAimGunAtCoord(System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskAimGunAtCoord(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskAimGunAtEntity(System.Int32,System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskAimGunAtEntity(System.Int32,System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskAimGunScripted(System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskAimGunScripted(System.Int32,System.UInt32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskArrest(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskArrestPed(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskChatTo(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskChatToPed(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskClearLookAt">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskClearLookAt(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskClimb(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskClimb(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskClimbLadder(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskClimbLadder(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskCombatHatedTargetsAround(System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskCombatHatedTargetsAroundPed(System.Int32,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskCombatHatedTargetsInArea(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskCombatHatedTargetsInArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskCombat(System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskCombatPed(System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskCower(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskCower(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskEnterVehicle(System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskEnterVehicle(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskFollowNavMeshToCoord(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskFollowNavMeshToCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskFollowPointRoute(System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskFollowPointRoute(System.Int32,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskFollowToOffsetOfEntity(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskFollowToOffsetOfEntity(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskForceMotionState(System.UInt32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskForceMotionState(System.Int32,System.UInt32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskGetOffBoat(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskGetOffBoat(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskGotoEntityAiming(System.Int32,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskGotoEntityAiming(System.Int32,System.Int32,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskGotoEntityOffset(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskGotoEntityOffset(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskGoStraightToCoord(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskGoStraightToCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskGoToCoordAnyMeans(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Int32,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskGoToCoordAnyMeans(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskGoToCoordAnyMeansExtraParams(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskGoToCoordAnyMeansExtraParams(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskGoToCoordWhileAimingAtCoord(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Single,System.Single,System.Boolean,System.Int32,System.Boolean,System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskGoToCoordWhileAimingAtCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Single,System.Single,System.Boolean,System.Int32,System.Boolean,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskGoToEntityWhileAimingAtEntity(System.Int32,System.Int32,System.Single,System.Boolean,System.Single,System.Single,System.Boolean,System.Boolean,System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskGoToEntityWhileAimingAtEntity(System.Int32,System.Int32,System.Int32,System.Single,System.Boolean,System.Single,System.Single,System.Boolean,System.Boolean,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskHandsUp(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskHandsUp(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskJump(System.Boolean,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskJump(System.Int32,System.Boolean,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskLeaveAnyVehicle(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskLeaveAnyVehicle(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskLeaveVehicle(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskLeaveVehicle(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskLookAtEntity(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskLookAtEntity(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskMoveNetworkAdvanced(System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.String,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskMoveNetworkAdvanced(System.Int32,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.String,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskMoveNetwork(System.String,System.Single,System.Boolean,System.String,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskMoveNetwork(System.Int32,System.String,System.Single,System.Boolean,System.String,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskOpenVehicleDoor(System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskOpenVehicleDoor(System.Int32,System.Int32,System.Int32,System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskParachute(System.Boolean,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskParachute(System.Int32,System.Boolean,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskParachuteToTarget(System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskParachuteToTarget(System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskPatrol(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskPatrol(System.Int32,System.String,System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskPause(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskPause(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskSlideToCoord(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskPedSlideToCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskSlideToCoordHdgRate(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskPedSlideToCoordHdgRate(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskPerformSequence(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskPerformSequence(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskPlantBomb(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskPlantBomb(System.Int32,System.Single,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskPlayAnim(System.String,System.String,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskPlayAnim(System.Int32,System.String,System.String,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Boolean,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskPlayAnimAdvanced(System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskPlayAnimAdvanced(System.Int32,System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskPlayPhoneGestureAnimation(System.String,System.String,System.String,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskPlayPhoneGestureAnimation(System.Int32,System.String,System.String,System.String,System.Single,System.Single,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskPutDirectlyIntoCover(System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Single,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskPutPedDirectlyIntoCover(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Single,System.Boolean,System.Boolean,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskPutDirectlyIntoMelee(System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskPutPedDirectlyIntoMelee(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskRappelFromHeli(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskRappelFromHeli(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskReactAndFlee(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskReactAndFleePed(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskReloadWeapon(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskReloadWeapon(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskScriptedAnimation(System.Int32@,System.Int32@,System.Int32@,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskScriptedAnimation(System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskSeekCoverFrom(System.Int32,System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskSeekCoverFromPed(System.Int32,System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskSeekCoverFromPos(System.Single,System.Single,System.Single,System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskSeekCoverFromPos(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskSeekCoverToCoords(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskSeekCoverToCoords(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskSetBlockingOfNonTemporaryEvents(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskSetBlockingOfNonTemporaryEvents(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskShockingEventReact(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskShockingEventReact(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskShootAtCoord(System.Single,System.Single,System.Single,System.Int32,System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskShootAtCoord(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskShuffleToNextVehicleSeat(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskShuffleToNextVehicleSeat(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskSkyDive(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskSkyDive(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskSmartFleeCoord(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskSmartFleeCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskSmartFlee(System.Int32,System.Single,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskSmartFleePed(System.Int32,System.Int32,System.Single,System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskStandGuard(System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskStandGuard(System.Int32,System.Single,System.Single,System.Single,System.Single,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskStandStill(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskStandStill(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskStartScenarioAtPosition(System.String,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskStartScenarioAtPosition(System.Int32,System.String,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskStartScenarioInPlace(System.String,System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskStartScenarioInPlace(System.Int32,System.String,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskStayInCover">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskStayInCover(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskStopPhoneGestureAnimation(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskStopPhoneGestureAnimation(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskSwapWeapon(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskSwapWeapon(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskSweepAimEntity(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskSweepAimEntity(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskSynchronizedScene(System.Int32,System.String,System.String,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskSynchronizedScene(System.Int32,System.Int32,System.String,System.String,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskThrowProjectile(System.Single,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskThrowProjectile(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskTurnToFaceCoord(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskTurnPedToFaceCoord(System.Int32,System.Single,System.Single,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskTurnToFaceEntity(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskTurnPedToFaceEntity(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskUseMobilePhone(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskUseMobilePhone(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskUseMobilePhoneTimed(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskUseMobilePhoneTimed(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskUseNearestScenarioToCoord(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskUseNearestScenarioToCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskUseNearestScenarioToCoordWarp(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskUseNearestScenarioToCoordWarp(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskVehicleAimAtCoord(System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskVehicleAimAtCoord(System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskVehicleAimAt(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskVehicleAimAtPed(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskVehicleDriveToCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.UInt32,System.Int32,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskVehicleDriveToCoord(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.UInt32,System.Int32,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskVehicleDriveToCoordLongrange(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskVehicleDriveToCoordLongrange(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskVehicleDriveWander(System.Int32,System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskVehicleDriveWander(System.Int32,System.Int32,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskVehicleEscort(System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Single,System.Int32,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskVehicleEscort(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Single,System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskVehicleFollowWaypointRecording(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Boolean,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskVehicleFollowWaypointRecording(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Boolean,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskVehicleGotoNavmesh(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskVehicleGotoNavmesh(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskVehicleMissionCoorsTarget(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskVehicleMissionCoorsTarget(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskVehicleMissionTarget(System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskVehicleMissionPedTarget(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Single,System.Single,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskVehiclePark(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskVehiclePark(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskVehicleShootAtCoord(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskVehicleShootAtCoord(System.Int32,System.Single,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskVehicleShootAt(System.Int32,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskVehicleShootAtPed(System.Int32,System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskWanderInArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskWanderInArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskWanderStandard(System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskWanderStandard(System.Int32,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskWarpIntoVehicle(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskWarpPedIntoVehicle(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskWrithe(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskWrithe(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.Uncuff">
            <summary>
            see <see cref="M:RAGE.Game.Ai.UncuffPed(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.UpdateTaskHandsUpDuration(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.UpdateTaskHandsUpDuration(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.UpdateTaskSweepAimEntity(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.UpdateTaskSweepAimEntity(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.TaskFollowNavMeshToCoordAdvanced(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskFollowNavMeshToCoordAdvanced(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32,System.Single,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDecisionMaker(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Event.SetDecisionMaker(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.AddOwnedExplosion(System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Boolean,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Fire.AddOwnedExplosion(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Boolean,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.CreateMpGamerTag(System.String,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.CreateMpGamerTag(System.Int32,System.String,System.Boolean,System.Boolean,System.String,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.DoesHaveAiBlip">
            <summary>
            see <see cref="M:RAGE.Game.Ui.DoesPedHaveAiBlip(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GiveToPauseMenu(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.GivePedToPauseMenu(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAiBlipMaxDistance(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetAiBlipMaxDistance(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetEnemyAiBlip(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ui.SetPedEnemyAiBlip(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.EnableTennisMode(System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Misc.EnableTennisMode(System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsTennisMode">
            <summary>
            see <see cref="M:RAGE.Game.Misc.IsTennisMode(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.NetworkAddToSynchronisedScene(System.Int32,System.String,System.String,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Network.NetworkAddPedToSynchronisedScene(System.Int32,System.Int32,System.String,System.String,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.NetworkGetPlayerIndexFrom">
            <summary>
            see <see cref="M:RAGE.Game.Network.NetworkGetPlayerIndexFromPed(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ToNet">
            <summary>
            see <see cref="M:RAGE.Game.Network.PedToNet(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.AttachPortablePickupTo(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Object.AttachPortablePickupToPed(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.DetachPortablePickupFrom">
            <summary>
            see <see cref="M:RAGE.Game.Object.DetachPortablePickupFromPed(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetPathsBackToOriginal(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Pathfind.SetPedPathsBackToOriginal(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.AddArmourTo(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.AddArmourToPed(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDecoration(System.UInt32,System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedDecoration(System.Int32,System.UInt32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetFacialDecoration(System.UInt32,System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedFacialDecoration(System.Int32,System.UInt32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ApplyDamageTo(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ApplyDamageToPed(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ApplyBlood(System.Int32,System.Single,System.Single,System.Single,System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ApplyPedBlood(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ApplyBloodByZone(System.Int32,System.Single,System.Single,System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ApplyPedBloodByZone(System.Int32,System.Int32,System.Single,System.Single,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ApplyBloodDamageByZone(System.Int32,System.Single,System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ApplyPedBloodDamageByZone(System.Int32,System.Int32,System.Single,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ApplyBloodSpecific(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ApplyPedBloodSpecific(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ApplyDamageDecal(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ApplyPedDamageDecal(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ApplyDamagePack(System.String,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ApplyPedDamagePack(System.Int32,System.String,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.CanKnockOffVehicle">
            <summary>
            see <see cref="M:RAGE.Game.Ped.CanKnockPedOffVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.CanInCombatSeeTarget(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.CanPedInCombatSeeTarget(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.CanRagdoll">
            <summary>
            see <see cref="M:RAGE.Game.Ped.CanPedRagdoll(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearAllProps">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ClearAllPedProps(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearFacialIdleAnimOverride">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ClearFacialIdleAnimOverride(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearAlternateMovementAnim(System.Int32,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ClearPedAlternateMovementAnim(System.Int32,System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearAlternateWalkAnim(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ClearPedAlternateWalkAnim(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearBloodDamageByZone(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ClearPedBloodDamageByZone(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearDamageDecalByZone(System.Int32,System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ClearPedDamageDecalByZone(System.Int32,System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearDecorations">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ClearPedDecorations(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearFacialDecorations">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ClearPedFacialDecorations(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearDriveByClipsetOverride">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ClearPedDriveByClipsetOverride(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearLastDamageBone">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ClearPedLastDamageBone(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearProp(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ClearPedProp(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearWetness">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ClearPedWetness(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ResetRagdollBlockingFlags(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ResetPedRagdollBlockingFlags(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.Clone(System.Single,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ClonePed(System.Int32,System.Single,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.CloneToTarget(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ClonePedToTarget(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ExplodeHead(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ExplodePedHead(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.FreezeCameraRotation">
            <summary>
            see <see cref="M:RAGE.Game.Ped.FreezePedCameraRotation(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ForceMotionState(System.UInt32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ForcePedMotionState(System.Int32,System.UInt32,System.Boolean,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ForceToOpenParachute">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ForcePedToOpenParachute(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetCombatFloat(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetCombatFloat(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetDeadPickupCoords(System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetDeadPedPickupCoords(System.Int32,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetJackTarget">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetJackTarget(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetMeleeTargetFor">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetMeleeTargetForPed(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsOnMount">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedOnMount(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetMount">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetMount(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetNumberOfDrawableVariations(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetNumberOfPedDrawableVariations(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetNumberOfPropDrawableVariations(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetNumberOfPedPropDrawableVariations(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetNumberOfPropTextureVariations(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetNumberOfPedPropTextureVariations(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetNumberOfTextureVariations(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetNumberOfPedTextureVariations(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetsJacker">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedsJacker(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetAccuracy">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedAccuracy(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetAlertness">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedAlertness(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetArmour">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedArmour(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetBoneCoords(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedBoneCoords(System.Int32,System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetBoneIndex(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedBoneIndex(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetCauseOfDeath">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedCauseOfDeath(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetCombatMovement">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedCombatMovement(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetCombatRange">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedCombatRange(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetConfigFlag(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedConfigFlag(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetDecorationsState">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedDecorationsState(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetDefensiveAreaPosition(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedDefensiveAreaPosition(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetDrawableVariation(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedDrawableVariation(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetEnveffScale">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedEnveffScale(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetExtractedDisplacement(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedExtractedDisplacement(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetGroupIndex">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedGroupIndex(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetHeadBlendData(System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedHeadBlendData(System.Int32,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetHeadOverlayValue(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedHeadOverlayValue(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetLastDamageBone(System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedLastDamageBone(System.Int32,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetMaxHealth">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedMaxHealth(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetMoney">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedMoney(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetNearbyPeds(System.Int32@,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedNearbyPeds(System.Int32,System.Int32@,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetNearbyVehicles(System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedNearbyVehicles(System.Int32,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetPaletteVariation(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedPaletteVariation(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetParachuteLandingType">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedParachuteLandingType(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetParachuteState">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedParachuteState(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetParachuteTintIndex(System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedParachuteTintIndex(System.Int32,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetPropIndex(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedPropIndex(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetPropTextureIndex(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedPropTextureIndex(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetRagdollBoneIndex(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedRagdollBoneIndex(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetRelationshipGroupDefaultHash">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedRelationshipGroupDefaultHash(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetRelationshipGroupHash">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedRelationshipGroupHash(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetResetFlag(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedResetFlag(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetSourceOfDeath">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedSourceOfDeath(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetStealthMovement">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedStealthMovement(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetTextureVariation(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedTextureVariation(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetTimeOfDeath">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedTimeOfDeath(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetType">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPedType(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetPlayerIsFollowing">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetPlayerPedIsFollowing(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetSeatIsTryingToEnter">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetSeatPedIsTryingToEnter(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetVehicleIsEntering">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetVehiclePedIsEntering(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetVehicleIsIn(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetVehiclePedIsIn(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetVehicleIsTryingToEnter">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetVehiclePedIsTryingToEnter(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetVehicleIsUsing">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GetVehiclePedIsUsing(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GiveHelmet(System.Boolean,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GivePedHelmet(System.Int32,System.Boolean,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GiveNmMessage">
            <summary>
            see <see cref="M:RAGE.Game.Ped.GivePedNmMessage(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.HasHeadBlendFinished">
            <summary>
            see <see cref="M:RAGE.Game.Ped.HasPedHeadBlendFinished(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.HideBloodDamageByZone(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.HidePedBloodDamageByZone(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsConversationDead">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsConversationPedDead(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsheadshotReady">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedheadshotReady(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsheadshotValid">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedheadshotValid(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsAimingFromCover">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedAimingFromCover(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsAPlayer">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedAPlayer(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsBeingJacked">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedBeingJacked(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsBeingStealthKilled">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedBeingStealthKilled(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsBeingStunned(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedBeingStunned(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsBlushColorValid">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedBlushColorValid(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsClimbing">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedClimbing(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsComponentVariationValid(System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedComponentVariationValid(System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsDeadOrDying(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedDeadOrDying(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsDiving">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedDiving(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsDoingDriveby">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedDoingDriveby(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsDucking">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedDucking(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsEvasiveDiving(System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedEvasiveDiving(System.Int32,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsFacingPed(System.Int32,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedFacingPed(System.Int32,System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsFalling">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedFalling(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsFatallyInjured">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedFatallyInjured(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsFleeing">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedFleeing(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsGettingIntoAVehicle">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedGettingIntoAVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsGoingIntoCover">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedGoingIntoCover(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsGroupMember(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedGroupMember(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsHairColorValid">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedHairColorValid(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsHangingOnToVehicle">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedHangingOnToVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsHeadtrackingEntity(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedHeadtrackingEntity(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsHeadtrackingPed(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedHeadtrackingPed(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsHuman">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedHuman(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsHurt">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedHurt(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInjured">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInjured(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInAnyBoat">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInAnyBoat(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInAnyHeli">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInAnyHeli(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInAnyPlane">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInAnyPlane(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInAnyPoliceVehicle">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInAnyPoliceVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInAnySub">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInAnySub(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInAnyTaxi">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInAnyTaxi(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInAnyTrain">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInAnyTrain(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInAnyVehicle(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInAnyVehicle(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInCombat(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInCombat(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInCover(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInCover(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInCoverFacingLeft">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInCoverFacingLeft(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInFlyingVehicle">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInFlyingVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInGroup">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInGroup(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsStandingInCover">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedStandingInCover(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInMeleeCombat">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInMeleeCombat(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInModel(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInModel(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInParachuteFreeFall">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInParachuteFreeFall(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsInVehicle(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedInVehicle(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsJacking">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedJacking(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsJumping">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedJumping(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsJumpingOutOfVehicle">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedJumpingOutOfVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsLipstickColorValid">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedLipstickColorValid(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsMale">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedMale(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsModel(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedModel(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsOnAnyBike">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedOnAnyBike(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsOnFoot">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedOnFoot(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsOnSpecificVehicle(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedOnSpecificVehicle(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsOnVehicle">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedOnVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsPerformingStealthKill">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedPerformingStealthKill(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsPlantingBomb">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedPlantingBomb(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsProne">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedProne(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsRagdoll">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedRagdoll(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsReloading">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedReloading(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsRespondingToEvent(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedRespondingToEvent(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsRunningMobilePhoneTask">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedRunningMobilePhoneTask(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsRunningRagdollTask">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedRunningRagdollTask(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsShooting">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedShooting(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsShootingInArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedShootingInArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsSittingInAnyVehicle">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedSittingInAnyVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsSittingInVehicle(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedSittingInVehicle(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsStopped">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedStopped(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsSwimming">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedSwimming(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsSwimmingUnderWater">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedSwimmingUnderWater(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsTracked">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedTracked(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsTryingToEnterALockedVehicle">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedTryingToEnterALockedVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsUsingActionMode">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedUsingActionMode(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsUsingAnyScenario">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedUsingAnyScenario(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsUsingScenario(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedUsingScenario(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsVaulting">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedVaulting(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsWearingHelmet">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedWearingHelmet(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsScriptedScenarioUsingConditionalAnim(System.String,System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsScriptedScenarioPedUsingConditionalAnim(System.Int32,System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsTrackedVisible">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsTrackedPedVisible(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.KnockOffProp(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.KnockOffPedProp(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.KnockOffVehicle">
            <summary>
            see <see cref="M:RAGE.Game.Ped.KnockPedOffVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.PlayFacialAnim(System.String,System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.PlayFacialAnim(System.Int32,System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.RegisterHatedTargetsAround(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.RegisterHatedTargetsAroundPed(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.Registerheadshot">
            <summary>
            see <see cref="M:RAGE.Game.Ped.RegisterPedheadshot(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.RegisterTarget(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.RegisterTarget(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.RemoveDefensiveArea(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.RemovePedDefensiveArea(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.RemoveFromGroup">
            <summary>
            see <see cref="M:RAGE.Game.Ped.RemovePedFromGroup(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.RemoveHelmet(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.RemovePedHelmet(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.RemovePreferredCoverSet">
            <summary>
            see <see cref="M:RAGE.Game.Ped.RemovePedPreferredCoverSet(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ResetInVehicleContext">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ResetPedInVehicleContext(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ResetLastVehicle">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ResetPedLastVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ResetMovementClipset(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ResetPedMovementClipset(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ResetRagdollTimer">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ResetPedRagdollTimer(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ResetStrafeClipset">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ResetPedStrafeClipset(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ResetVisibleDamage">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ResetPedVisibleDamage(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearBloodDamage">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ClearPedBloodDamage(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ResetWeaponMovementClipset">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ResetPedWeaponMovementClipset(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.Resurrect">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ResurrectPed(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ReviveInjured">
            <summary>
            see <see cref="M:RAGE.Game.Ped.ReviveInjuredPed(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetBlockingOfNonTemporaryEvents(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetBlockingOfNonTemporaryEvents(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanAttackFriendly(System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetCanAttackFriendly(System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCombatFloat(System.Int32,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetCombatFloat(System.Int32,System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetEnableBoundAnkles(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetEnableBoundAnkles(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetEnableHandcuffs(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetEnableHandcuffs(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetEnableEnveffScale(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetEnablePedEnveffScale(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetEnableScuba(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetEnableScuba(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetFacialIdleAnimOverride(System.String,System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetFacialIdleAnimOverride(System.Int32,System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetEyeColor(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedEyeColor(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetIkTarget(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetIkTarget(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAccuracy(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedAccuracy(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAlertness(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedAlertness(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAllowedToDuck(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedAllowedToDuck(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAllowVehiclesOverride(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedAllowVehiclesOverride(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAlternateMovementAnim(System.Int32,System.String,System.String,System.Single,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedAlternateMovementAnim(System.Int32,System.Int32,System.String,System.String,System.Single,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAlternateWalkAnim(System.String,System.String,System.Single,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedAlternateWalkAnim(System.Int32,System.String,System.String,System.Single,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAngledDefensiveArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedAngledDefensiveArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetArmour(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedArmour(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAsCop(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedAsCop(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAsEnemy(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedAsEnemy(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAsGroupLeader(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedAsGroupLeader(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAsGroupMember(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedAsGroupMember(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetBlendFromParents(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedBlendFromParents(System.Int32,System.Int32,System.Int32,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetBoundsOrientation(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedBoundsOrientation(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanArmIk(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanArmIk(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanBeDraggedOut(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanBeDraggedOut(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanBeKnockedOffVehicle(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanBeKnockedOffVehicle(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanBeShotInVehicle(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanBeShotInVehicle(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanBeTargetedWhenInjured(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanBeTargetedWhenInjured(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanBeTargetedWithoutLos(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanBeTargetedWithoutLos(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanBeTargetted(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanBeTargetted(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanBeTargettedByPlayer(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanBeTargettedByPlayer(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanBeTargettedByTeam(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanBeTargettedByTeam(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanCowerInCover(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanCowerInCover(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanEvasiveDive(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanEvasiveDive(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanHeadIk(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanHeadIk(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanLegIk(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanLegIk(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanPeekInCover(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanPeekInCover(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanPlayAmbientAnims(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanPlayAmbientAnims(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanPlayAmbientBaseAnims(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanPlayAmbientBaseAnims(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanPlayGestureAnims(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanPlayGestureAnims(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanPlayVisemeAnims(System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanPlayVisemeAnims(System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanRagdoll(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanRagdoll(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanRagdollFromPlayerImpact(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanRagdollFromPlayerImpact(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanSmashGlass(System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanSmashGlass(System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanSwitchWeapon(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanSwitchWeapon(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanTeleportToGroupLeader(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanTeleportToGroupLeader(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanTorsoIk(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanTorsoIk(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCanUseAutoConversationLookat(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCanUseAutoConversationLookat(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCapsule(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCapsule(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetClothProne(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedClothProne(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCombatAbility(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCombatAbility(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCombatAttributes(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCombatAttributes(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCombatMovement(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCombatMovement(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCombatRange(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCombatRange(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetComponentVariation(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedComponentVariation(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetConfigFlag(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedConfigFlag(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCoordsKeepVehicle(System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCoordsKeepVehicle(System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCoordsNoGang(System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCoordsNoGang(System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCowerHash(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedCowerHash(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDefaultComponentVariation">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedDefaultComponentVariation(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDefensiveAreaAttachedToPed(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedDefensiveAreaAttachedToPed(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDefensiveAreaDirection(System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedDefensiveAreaDirection(System.Int32,System.Single,System.Single,System.Single,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDefensiveSphereAttachedToPed(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedDefensiveSphereAttachedToPed(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDesiredHeading(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedDesiredHeading(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDiesInstantlyInWater(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedDiesInstantlyInWater(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDiesInSinkingVehicle(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedDiesInSinkingVehicle(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDiesInVehicle(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedDiesInVehicle(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDiesInWater(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedDiesInWater(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDiesWhenInjured(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedDiesWhenInjured(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDriveByClipsetOverride(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedDriveByClipsetOverride(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDucking(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedDucking(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetEnableWeaponBlocking(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedEnableWeaponBlocking(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetEnveffScale(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedEnveffScale(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetFiringPattern(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedFiringPattern(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetFleeAttributes(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedFleeAttributes(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetGeneratesDeadBodyEvents(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedGeneratesDeadBodyEvents(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetGestureGroup(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedGestureGroup(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetGetOutUpsideDownVehicle(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedGetOutUpsideDownVehicle(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetGravity(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedGravity(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetGroupMemberPassengerIndex(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedGroupMemberPassengerIndex(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetHairColor(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedHairColor(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetHeadBlendData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedHeadBlendData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetHeadOverlay(System.Int32,System.Int32,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedHeadOverlay(System.Int32,System.Int32,System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetHeadOverlayColor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedHeadOverlayColor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetHearingRange(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedHearingRange(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetHelmet(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedHelmet(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetHelmetFlag(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedHelmetFlag(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetHelmetPropIndex(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedHelmetPropIndex(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetHelmetTextureIndex(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedHelmetTextureIndex(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetIdRange(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedIdRange(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetIntoVehicle(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedIntoVehicle(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetInVehicleContext(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedInVehicleContext(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetKeepTask(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedKeepTask(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetLegIkMode(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedLegIkMode(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetLodMultiplier(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedLodMultiplier(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetMaxHealth(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedMaxHealth(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetMaxMoveBlendRatio(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedMaxMoveBlendRatio(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetMaxTimeInWater(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedMaxTimeInWater(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetMaxTimeUnderwater(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedMaxTimeUnderwater(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetFaceFeature(System.Int32,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedFaceFeature(System.Int32,System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetMinGroundTimeForStungun(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedMinGroundTimeForStungun(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetMinMoveBlendRatio(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedMinMoveBlendRatio(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetModelIsSuppressed(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedModelIsSuppressed(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetMoney(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedMoney(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetMotionBlur(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedMotionBlur(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetMovementClipset(System.String,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedMovementClipset(System.Int32,System.String,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetMoveAnimsBlendOut">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedMoveAnimsBlendOut(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetMoveRateOverride(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedMoveRateOverride(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetNeverLeavesGroup(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedNeverLeavesGroup(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetParachuteTintIndex(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedParachuteTintIndex(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetPinnedDown(System.Boolean,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedPinnedDown(System.Int32,System.Boolean,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetPreferredCoverSet(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedPreferredCoverSet(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsPropValid(System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.IsPedPropValid(System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetPrimaryLookat(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedPrimaryLookat(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetPropIndex(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedPropIndex(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetRagdollForceFall">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedRagdollForceFall(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetRagdollOnCollision(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedRagdollOnCollision(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetRandomComponentVariation(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedRandomComponentVariation(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetRandomProps">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedRandomProps(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetRelationshipGroupDefaultHash(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedRelationshipGroupDefaultHash(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetRelationshipGroupHash(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedRelationshipGroupHash(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetReserveParachuteTintIndex(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedReserveParachuteTintIndex(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetResetFlag(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedResetFlag(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetSeeingRange(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedSeeingRange(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetShootsAtCoord(System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedShootsAtCoord(System.Int32,System.Single,System.Single,System.Single,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetShootRate(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedShootRate(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetSphereDefensiveArea(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedSphereDefensiveArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetStayInVehicleWhenJacked(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedStayInVehicleWhenJacked(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetStealthMovement(System.Boolean,System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedStealthMovement(System.Int32,System.Boolean,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetSteersAroundObjects(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedSteersAroundObjects(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetSteersAroundPeds(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedSteersAroundPeds(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetSteersAroundVehicles(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedSteersAroundVehicles(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetStrafeClipset(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedStrafeClipset(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetSuffersCriticalHits(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedSuffersCriticalHits(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetSweat(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedSweat(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetTargetLossResponse(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedTargetLossResponse(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetToInformRespectedFriends(System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedToInformRespectedFriends(System.Int32,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetToLoadCover(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedToLoadCover(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetToRagdoll(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedToRagdoll(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetToRagdollWithFall(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedToRagdollWithFall(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetUsingActionMode(System.Boolean,System.Int32,System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedUsingActionMode(System.Int32,System.Boolean,System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetVisualFieldCenterAngle(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedVisualFieldCenterAngle(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetVisualFieldMaxAngle(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedVisualFieldMaxAngle(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetVisualFieldMaxElevationAngle(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedVisualFieldMaxElevationAngle(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetVisualFieldMinAngle(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedVisualFieldMinAngle(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetVisualFieldMinElevationAngle(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedVisualFieldMinElevationAngle(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetVisualFieldPeripheralRange(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedVisualFieldPeripheralRange(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetWeaponMovementClipset(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedWeaponMovementClipset(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetWetnessEnabledThisFrame">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedWetnessEnabledThisFrame(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetWetnessHeight(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedWetnessHeight(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetRagdollBlockingFlags(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedRagdollBlockingFlags(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetScriptedAnimSeatOffset(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetScriptedAnimSeatOffset(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.StopWeaponFiringWhenDropped">
            <summary>
            see <see cref="M:RAGE.Game.Ped.StopPedWeaponFiringWhenDropped(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.UpdateHeadBlendData(System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.UpdatePedHeadBlendData(System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.WasKilledByStealth">
            <summary>
            see <see cref="M:RAGE.Game.Ped.WasPedKilledByStealth(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.WasKilledByTakedown">
            <summary>
            see <see cref="M:RAGE.Game.Ped.WasPedKilledByTakedown(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.WasSkeletonUpdated">
            <summary>
            see <see cref="M:RAGE.Game.Ped.WasPedSkeletonUpdated(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetNameDebug(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedNameDebug(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetPlaysHeadOnHornAnimWhenDiesInVehicle(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.SetPedPlaysHeadOnHornAnimWhenDiesInVehicle(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetPopulationBudget">
            <summary>
            see <see cref="M:RAGE.Game.Streaming.SetPedPopulationBudget(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SwitchOutPlayer(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Streaming.SwitchOutPlayer(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetTargettableVehicleDestroy(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetPedTargettableVehicleDestroy(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.AddAmmoTo(System.UInt32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.AddAmmoToPed(System.Int32,System.UInt32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ClearLastWeaponDamage">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.ClearPedLastWeaponDamage(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.ExplodeProjectiles(System.UInt32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.ExplodeProjectiles(System.Int32,System.UInt32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetAmmoInClip(System.UInt32,System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetAmmoInClip(System.Int32,System.UInt32,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetAmmoInWeapon(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetAmmoInPedWeapon(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetBestWeapon(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetBestPedWeapon(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetCurrentVehicleWeapon(System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetCurrentPedVehicleWeapon(System.Int32,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetCurrentWeapon(System.Int32@,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetCurrentPedWeapon(System.Int32,System.Int32@,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetCurrentWeaponEntityIndex">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetCurrentPedWeaponEntityIndex(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetIsGadgetEquipped(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetIsPedGadgetEquipped(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetLockonRangeOfCurrentWeapon">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetLockonRangeOfCurrentPedWeapon(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetMaxAmmo(System.UInt32,System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetMaxAmmo(System.Int32,System.UInt32,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetMaxAmmoInClip(System.UInt32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetMaxAmmoInClip(System.Int32,System.UInt32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetMaxRangeOfCurrentWeapon">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetMaxRangeOfCurrentPedWeapon(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetAmmoByType(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetPedAmmoByType(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetAmmoTypeFromWeapon(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetPedAmmoTypeFromWeapon(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetLastWeaponImpactCoord(RAGE.Vector3)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetPedLastWeaponImpactCoord(System.Int32,RAGE.Vector3)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetAmmoTypeFromWeapon2(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetPedAmmoTypeFromWeapon2(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetWeapontypeInSlot(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetPedWeapontypeInSlot(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetWeaponTintIndex(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetPedWeaponTintIndex(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetSelectedWeapon">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetSelectedPedWeapon(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GetWeaponObjectFrom(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GetWeaponObjectFromPed(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GiveDelayedWeaponTo(System.UInt32,System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GiveDelayedWeaponToPed(System.Int32,System.UInt32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GiveWeaponComponentTo(System.UInt32,System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GiveWeaponComponentToPed(System.Int32,System.UInt32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.GiveWeaponTo(System.UInt32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.GiveWeaponToPed(System.Int32,System.UInt32,System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.HasBeenDamagedByWeapon(System.UInt32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.HasPedBeenDamagedByWeapon(System.Int32,System.UInt32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.HasGotWeapon(System.UInt32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.HasPedGotWeapon(System.Int32,System.UInt32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.HasGotWeaponComponent(System.UInt32,System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.HasPedGotWeaponComponent(System.Int32,System.UInt32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.HideWeaponForScriptedCutscene(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.HidePedWeaponForScriptedCutscene(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsFlashLightOn">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.IsFlashLightOn(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsArmed(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.IsPedArmed(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsCurrentWeaponSilenced">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.IsPedCurrentWeaponSilenced(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsWeaponComponentActive(System.UInt32,System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.IsPedWeaponComponentActive(System.Int32,System.UInt32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.IsWeaponReadyToShoot">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.IsPedWeaponReadyToShoot(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.MakeReload">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.MakePedReload(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SkipNextReloading">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.PedSkipNextReloading(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.RemoveAllWeapons(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.RemoveAllPedWeapons(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.RemoveWeaponComponentFrom(System.UInt32,System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.RemoveWeaponComponentFromPed(System.Int32,System.UInt32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.RemoveWeaponFrom(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.RemoveWeaponFromPed(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAmmoInClip(System.UInt32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.SetAmmoInClip(System.Int32,System.UInt32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCurrentVehicleWeapon(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.SetCurrentPedVehicleWeapon(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCurrentWeapon(System.UInt32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.SetCurrentPedWeapon(System.Int32,System.UInt32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAmmo(System.UInt32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.SetPedAmmo(System.Int32,System.UInt32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAmmoByType(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.SetPedAmmoByType(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetAmmoToDrop(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.SetPedAmmoToDrop(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetChanceOfFiringBlanks(System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.SetPedChanceOfFiringBlanks(System.Int32,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetCurrentWeaponVisible(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.SetPedCurrentWeaponVisible(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDropsInventoryWeapon(System.UInt32,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.SetPedDropsInventoryWeapon(System.Int32,System.UInt32,System.Single,System.Single,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDropsWeapon">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.SetPedDropsWeapon(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetDropsWeaponsWhenDead(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.SetPedDropsWeaponsWhenDead(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetGadget(System.UInt32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.SetPedGadget(System.Int32,System.UInt32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetInfiniteAmmo(System.Boolean,System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.SetPedInfiniteAmmo(System.Int32,System.Boolean,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetInfiniteAmmoClip(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.SetPedInfiniteAmmoClip(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetWeaponTintIndex(System.UInt32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.SetPedWeaponTintIndex(System.Int32,System.UInt32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.PedBase.SetWeaponAnimationOverride(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Weapon.SetWeaponAnimationOverride(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.BlipSiren">
            <summary>
            see <see cref="M:RAGE.Game.Audio.BlipSiren(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsRadioLoud">
            <summary>
            see <see cref="M:RAGE.Game.Audio.IsVehicleRadioLoud(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetAudio(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.SetVehicleAudio(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetDefaultHorn">
            <summary>
            see <see cref="M:RAGE.Game.Audio.GetVehicleDefaultHorn(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetHornHash">
            <summary>
            see <see cref="M:RAGE.Game.Audio.GetVehicleHornHash(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsHornActive">
            <summary>
            see <see cref="M:RAGE.Game.Audio.IsHornActive(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.OverrideVehHorn(System.Boolean,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.OverrideVehHorn(System.Int32,System.Boolean,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.PlayStreamFrom">
            <summary>
            see <see cref="M:RAGE.Game.Audio.PlayStreamFromVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.PlayDoorCloseSound(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.PlayVehicleDoorCloseSound(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.PlayDoorOpenSound(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.PlayVehicleDoorOpenSound(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetAudioPriority(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.SetAudioVehiclePriority(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetHornEnabled(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.SetHornEnabled(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SoundHornThisFrame">
            <summary>
            see <see cref="M:RAGE.Game.Audio.SoundVehicleHornThisFrame(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetSirenWithNoDriver(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.SetSirenWithNoDriver(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetBoostActive(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.SetVehicleBoostActive(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetRadioEnabled(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.SetVehicleRadioEnabled(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetRadioLoud(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.SetVehicleRadioLoud(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetVehRadioStation(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.SetVehRadioStation(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.UseSirenAsHorn(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Audio.UseSirenAsHorn(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.TaskEveryoneLeave">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskEveryoneLeaveVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.TaskPlayAnim(System.String,System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Ai.TaskVehiclePlayAnim(System.Int32,System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.AddClanDecalTo(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Graphics.AddClanDecalToVehicle(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.DoesHaveDecal(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Graphics.DoesVehicleHaveDecal(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.RemoveDecalsFrom">
            <summary>
            see <see cref="M:RAGE.Game.Graphics.RemoveDecalsFromVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.WashDecalsFrom(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Graphics.WashDecalsFromVehicle(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.NetworkExplode(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Network.NetworkExplodeVehicle(System.Int32,System.Boolean,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetNetworkNonContact(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Network.SetNetworkVehicleNonContact(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.VehToNet">
            <summary>
            see <see cref="M:RAGE.Game.Network.VehToNet(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsNodeIdValid">
            <summary>
            see <see cref="M:RAGE.Game.Pathfind.IsVehicleNodeIdValid(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.CreatePedInside(System.Int32,System.UInt32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.CreatePedInsideVehicle(System.Int32,System.Int32,System.UInt32,System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.CreateRandomPedAsDriver(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Ped.CreateRandomPedAsDriver(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetPopulationBudget">
            <summary>
            see <see cref="M:RAGE.Game.Streaming.SetVehiclePopulationBudget(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.AddUpsidedownCheck">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.AddVehicleUpsidedownCheck(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.AreAllWindowsIntact">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.AreAllVehicleWindowsIntact(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.AreAnySeatsFree">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.AreAnyVehicleSeatsFree(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.ArePropellersUndamaged">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.ArePropellersUndamaged(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.AreWingsIntact">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.AreVehicleWingsIntact(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.AttachToCargobob(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.AttachVehicleToCargobob(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.AttachToTrailer(System.Int32,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.AttachVehicleToTrailer(System.Int32,System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetHalt(System.Single,System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleHalt(System.Int32,System.Single,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetBoatAnchor">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetBoatAnchor(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.CanShuffleSeat(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.CanShuffleSeat(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.ClearCustomPrimaryColour">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.ClearVehicleCustomPrimaryColour(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.ClearCustomSecondaryColour">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.ClearVehicleCustomSecondaryColour(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.CloseBombBayDoors">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.CloseBombBayDoors(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.ControlLandingGear(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.ControlLandingGear(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.DetachFromAnyCargobob">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.DetachVehicleFromAnyCargobob(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.DetachFromAnyTowTruck">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.DetachVehicleFromAnyTowTruck(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.DetachFromCargobob(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.DetachVehicleFromCargobob(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.DetachFromTrailer">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.DetachVehicleFromTrailer(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.DisablePlaneAileron(System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.DisablePlaneAileron(System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.DoesExtraExist(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.DoesExtraExist(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.DoesHaveRoof">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.DoesVehicleHaveRoof(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.DoesHaveStuckVehicleCheck">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.DoesVehicleHaveStuckVehicleCheck(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.DoesHaveWeapons">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.DoesVehicleHaveWeapons(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.Explode(System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.ExplodeVehicle(System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.ExplodeInCutscene(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.ExplodeVehicleInCutscene(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.FixWindow(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.FixVehicleWindow(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.HasJumpingAbility">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.HasVehicleJumpingAbility(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetConvertibleRoofState">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetConvertibleRoofState(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsDamaged">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleDamaged(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetEntryPositionOfDoor(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetEntryPositionOfDoor(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetSuspensionHeight">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleSuspensionHeight(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetHasLowerableWheels">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetHasLowerableWheels(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.HasRocketBoost">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.HasVehicleRocketBoost(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetHeliMainRotorHealth">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetHeliMainRotorHealth(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetHeliEngineHealth">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetHeliEngineHealth(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetHeliTailRotorHealth">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetHeliTailRotorHealth(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.DoesHaveDoor(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.DoesVehicleHaveDoor(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetIsLeftHeadlightDamaged">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetIsLeftVehicleHeadlightDamaged(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetIsRightHeadlightDamaged">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetIsRightVehicleHeadlightDamaged(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetIsEngineRunning">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetIsVehicleEngineRunning(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetIsPrimaryColourCustom">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetIsVehiclePrimaryColourCustom(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetIsSecondaryColourCustom">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetIsVehicleSecondaryColourCustom(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetLandingGearState">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetLandingGearState(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetLastPedInSeat(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetLastPedInVehicleSeat(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetLiveryName(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetLiveryName(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetModSlotName(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetModSlotName(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetModTextLabel(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetModTextLabel(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetNumberOfColours">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetNumberOfVehicleColours(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetNumberOfDoors">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetNumberOfVehicleDoors(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetNumModKits">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetNumModKits(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetNumMods(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetNumVehicleMods(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetPedInSeat(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetPedInVehicleSeat(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetPedUsingDoor(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetPedUsingVehicleDoor(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetAcceleration">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleAcceleration(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetBodyHealth">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleBodyHealth(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetBombs">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleBombs(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.CanParachuteBeActivated">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.CanVehicleParachuteBeActivated(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetCauseOfDestruction">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleCauseOfDestruction(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetClass">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleClass(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetColor(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleColor(System.Int32,System.Int32@,System.Int32@,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetColours(System.Int32@,System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleColours(System.Int32,System.Int32@,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetColourCombination">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleColourCombination(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetCustomPrimaryColour(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleCustomPrimaryColour(System.Int32,System.Int32@,System.Int32@,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetCustomSecondaryColour(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleCustomSecondaryColour(System.Int32,System.Int32@,System.Int32@,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetDeformationAtPos(System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleDeformationAtPos(System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetDirtLevel">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleDirtLevel(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetDoorsLockedForPlayer(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleDoorsLockedForPlayer(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetDoorAngleRatio(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleDoorAngleRatio(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetDoorLockStatus">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleDoorLockStatus(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetEngineHealth">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleEngineHealth(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetEnveffScale">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleEnveffScale(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetExtraColours(System.Int32@,System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleExtraColours(System.Int32,System.Int32@,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetInteriorColour(System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleInteriorColour(System.Int32,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetDashboardColour(System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleDashboardColour(System.Int32,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.HasParachute">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.HasVehicleParachute(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetBodyHealth2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleBodyHealth2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetLayoutHash">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleLayoutHash(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetLightsState(System.Int32@,System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleLightsState(System.Int32,System.Int32@,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetLivery">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleLivery(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetLiveryCount">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleLiveryCount(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetOwner(System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleOwner(System.Int32,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetMaxBraking">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleMaxBraking(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetMaxNumberOfPassengers">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleMaxNumberOfPassengers(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetMaxTraction">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleMaxTraction(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetMod(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleMod(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetModColor1(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleModColor1(System.Int32,System.Int32@,System.Int32@,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetModColor1Name(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleModColor1Name(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetModColor2(System.Int32@,System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleModColor2(System.Int32,System.Int32@,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetModColor2Name">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleModColor2Name(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetModData(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleModData(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetModKit">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleModKit(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetModKitType">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleModKitType(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetModModifierValue(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleModModifierValue(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetModVariation(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleModVariation(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetNeonLightsColour(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleNeonLightsColour(System.Int32,System.Int32@,System.Int32@,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsNeonLightEnabled(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleNeonLightEnabled(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetNumberOfPassengers">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleNumberOfPassengers(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetNumberPlateText">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleNumberPlateText(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetNumberPlateTextIndex">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleNumberPlateTextIndex(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetPetrolTankHealth">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehiclePetrolTankHealth(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetPlateType">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehiclePlateType(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetTrailerVehicle(System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleTrailerVehicle(System.Int32,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetTyresCanBurst">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleTyresCanBurst(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetTyreSmokeColor(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleTyreSmokeColor(System.Int32,System.Int32@,System.Int32@,System.Int32@)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetWheelType">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleWheelType(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.GetWindowTint">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.GetVehicleWindowTint(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsModLoadDone">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleModLoadDone(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.AnyPassengersRappeling">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.AnyPassengersRappeling(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsBig">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsBigVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsNearEntity(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleNearEntity(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsHeliPartBroken(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsHeliPartBroken(System.Int32,System.Boolean,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.HasLandingGear">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.VehicleHasLandingGear(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsRocketBoostActive">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleRocketBoostActive(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsTaxiLightOn">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsTaxiLightOn(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsToggleModOn(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsToggleModOn(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsAlarmActivated">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleAlarmActivated(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsAttachedToCargobob(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleAttachedToCargobob(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsAttachedToTowTruck(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleAttachedToTowTruck(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsAttachedToTrailer">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleAttachedToTrailer(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsAConvertible(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleAConvertible(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsBumperBrokenOff(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleBumperBrokenOff(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsDoorDamaged(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleDoorDamaged(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsDoorFullyOpen(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleDoorFullyOpen(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsDriveable(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleDriveable(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsExtraTurnedOn(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleExtraTurnedOn(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsHighDetail">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleHighDetail(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsInBurnout">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleInBurnout(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsModel(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleModel(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsOnAllWheels">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleOnAllWheels(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsSearchlightOn">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleSearchlightOn(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsSeatFree(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleSeatFree(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsSirenSoundOn">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleSirenSoundOn(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsSirenOn">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleSirenOn(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsShopResprayAllowed">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleShopResprayAllowed(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsStolen">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleStolen(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsStopped">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleStopped(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsStoppedAtTrafficLights">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleStoppedAtTrafficLights(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsStuckOnRoof">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleStuckOnRoof(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsStuckTimerUp(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleStuckTimerUp(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsTyreBurst(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleTyreBurst(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsVisible">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleVisible(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.IsWindowIntact(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.IsVehicleWindowIntact(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.LowerConvertibleRoof(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.LowerConvertibleRoof(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetEnginePowerMultiplier(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleEnginePowerMultiplier(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.OpenBombBayDoors">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.OpenBombBayDoors(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.EjectJb700Roof(System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.EjectJb700Roof(System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.DetachWindscreen">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.DetachVehicleWindscreen(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.RaiseConvertibleRoof(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.RaiseConvertibleRoof(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.ReleasePreloadMods">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.ReleasePreloadMods(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.RemoveHighDetailModel">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.RemoveVehicleHighDetailModel(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.RemoveMod(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.RemoveVehicleMod(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.RemoveStuckCheck">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.RemoveVehicleStuckCheck(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.RemoveUpsidedownCheck">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.RemoveVehicleUpsidedownCheck(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.RemoveWindow(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.RemoveVehicleWindow(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.RequestHighDetailModel">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.RequestVehicleHighDetailModel(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.ResetStuckTimer(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.ResetVehicleStuckTimer(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.ResetWheels(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.ResetVehicleWheels(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.RollDownWindow(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.RollDownWindow(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.RollDownWindows">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.RollDownWindows(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.RollUpWindow(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.RollUpWindow(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetBikeLeanAngle(System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetBikeLeanAngle(System.Int32,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetBoatAnchor(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetBoatAnchor(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetCanRespray(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetCanResprayVehicle(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetConvertibleRoof(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetConvertibleRoof(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDisablePetrolTankDamage(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetDisableVehiclePetrolTankDamage(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDisablePetrolTankFires(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetDisableVehiclePetrolTankFires(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDoorCanBreak(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleDoorCanBreak(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetForceHd(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetForceHdVehicle(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetHeliBladesFullSpeed">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetHeliBladesFullSpeed(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetHeliBladesSpeed(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetHeliBladesSpeed(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetLastDriven">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetLastDrivenVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetPlaybackSpeed(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetPlaybackSpeed(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetPlaybackToUseAi(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetPlaybackToUseAi(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetPlayersLast">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetPlayersLastVehicle(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetRocketBoostActive(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleRocketBoostActive(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetRocketBoostPercentage(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleRocketBoostPercentage(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetRocketBoostRefillTime(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleRocketBoostRefillTime(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.Jitter(System.Boolean,System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.JitterVehicle(System.Int32,System.Boolean,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetTaxiLights(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetTaxiLights(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetExclusiveDriver(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleExclusiveDriver(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetAlarm(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleAlarm(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetAllowNoPassengersLockon(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleAllowNoPassengersLockon(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetAutomaticallyAttaches(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleAutomaticallyAttaches(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetBodyHealth(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleBodyHealth(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetBombs(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleBombs(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetBrakeLights(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleBrakeLights(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetBurnout(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleBurnout(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetCanBeTargetted(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleCanBeTargetted(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetCanBeUsedByFleeingPeds(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleCanBeUsedByFleeingPeds(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetCanBeVisiblyDamaged(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleCanBeVisiblyDamaged(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetCanBreak(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleCanBreak(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetCeilingHeight(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleCeilingHeight(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetEngineTorqueMultiplier(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleEngineTorqueMultiplier(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetColours(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleColours(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetColourCombination(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleColourCombination(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetCountermeasures(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleCountermeasures(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetCustomPrimaryColour(System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleCustomPrimaryColour(System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetCustomSecondaryColour(System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleCustomSecondaryColour(System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDamage(System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleDamage(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDeformationFixed">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleDeformationFixed(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDirtLevel(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleDirtLevel(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDoorsLocked(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleDoorsLocked(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDoorsLockedForAllPlayers(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleDoorsLockedForAllPlayers(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDoorsLockedForPlayer(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleDoorsLockedForPlayer(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDoorsLockedForTeam(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleDoorsLockedForTeam(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDoorsShut(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleDoorsShut(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDoorBroken(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleDoorBroken(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDoorControl(System.Int32,System.Int32,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleDoorControl(System.Int32,System.Int32,System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDoorLatched(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleDoorLatched(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDoorOpen(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleDoorOpen(System.Int32,System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDoorShut(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleDoorShut(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetCreatesMoneyPickupsWhenExploded(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleCreatesMoneyPickupsWhenExploded(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetEngineCanDegrade(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleEngineCanDegrade(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetEngineHealth(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleEngineHealth(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetEngineOn(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleEngineOn(System.Int32,System.Boolean,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetEnveffScale(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleEnveffScale(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetExclusiveDriver2(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleExclusiveDriver2(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetExplodesOnHighExplosionDamage(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleExplodesOnHighExplosionDamage(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetExtra(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleExtra(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetExtraColours(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleExtraColours(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetInteriorColour(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleInteriorColour(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetDashboardColour(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleDashboardColour(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetFixed">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleFixed(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetForwardSpeed(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleForwardSpeed(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetFrictionOverride(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleFrictionOverride(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetFullbeam(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleFullbeam(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetGravity(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleGravity(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetHandbrake(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleHandbrake(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetHasBeenOwnedByPlayer(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleHasBeenOwnedByPlayer(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetSirenSound(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleSirenSound(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetHasStrongAxles(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleHasStrongAxles(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetLightsMode(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleLightsMode(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetIndicatorLights(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleIndicatorLights(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetPedTargettableDestroy(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetPedTargettableVehicleDestroy(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetInteriorlight(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleInteriorlight(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetSilent(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleSilent(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetIsConsideredByPlayer(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleIsConsideredByPlayer(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetIsStolen(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleIsStolen(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetIsWanted(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleIsWanted(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetJetEngineOn(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleJetEngineOn(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetHudSpecialAbilityBarActive(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleHudSpecialAbilityBarActive(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetLights(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleLights(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetLightMultiplier(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleLightMultiplier(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetLivery(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleLivery(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetLodMultiplier(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleLodMultiplier(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetMod(System.Int32,System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleMod(System.Int32,System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetModColor1(System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleModColor1(System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetModColor2(System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleModColor2(System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetModKit(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleModKit(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetNeedsToBeHotwired(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleNeedsToBeHotwired(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetNeonLightsColour(System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleNeonLightsColour(System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetNeonLightEnabled(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleNeonLightEnabled(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetNumberPlateText(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleNumberPlateText(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetNumberPlateTextIndex(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleNumberPlateTextIndex(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetOnGroundProperly(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleOnGroundProperly(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetOutOfControl(System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleOutOfControl(System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetPetrolTankHealth(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehiclePetrolTankHealth(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetProvidesCover(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleProvidesCover(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetReduceGrip(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleReduceGrip(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetRudderBroken(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleRudderBroken(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetSearchlight(System.Boolean,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleSearchlight(System.Int32,System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetShootAtTarget(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleShootAtTarget(System.Int32,System.Int32,System.Single,System.Single,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetSiren(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleSiren(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetSteerBias(System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleSteerBias(System.Int32,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetStrong(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleStrong(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetTimedExplosion(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleTimedExplosion(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetTyresCanBurst(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleTyresCanBurst(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetTyreBurst(System.Int32,System.Boolean,System.Single)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleTyreBurst(System.Int32,System.Int32,System.Boolean,System.Single)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetTyreFixed(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleTyreFixed(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetTyreSmokeColor(System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleTyreSmokeColor(System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetUndriveable(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleUndriveable(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetWheelsCanBreak(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleWheelsCanBreak(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetWheelsCanBreakOffWhenBlowUp(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleWheelsCanBreakOffWhenBlowUp(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetWheelType(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleWheelType(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetWindowTint(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleWindowTint(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.RaiseLowerableWheels">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.RaiseLowerableWheels(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SmashWindow(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SmashVehicleWindow(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.StartPlaybackRecorded(System.Int32,System.String,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.StartPlaybackRecordedVehicle(System.Int32,System.Int32,System.String,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.StartPlaybackRecordedWithFlags(System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.StartPlaybackRecordedVehicleWithFlags(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.StartAlarm">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.StartVehicleAlarm(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.StartHorn(System.Int32,System.UInt32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.StartVehicleHorn(System.Int32,System.Int32,System.UInt32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.ToggleMod(System.Int32,System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.ToggleVehicleMod(System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.TrackVisibility">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.TrackVehicleVisibility(System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetCustomParachuteModel(System.UInt32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.VehicleSetCustomParachuteModel(System.Int32,System.UInt32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetCustomParachuteTexture(System.Int32)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.VehicleSetCustomParachuteTexture(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetRampReceivesRampDamage(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetRampVehicleReceivesRampDamage(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetParachuteActive(System.Boolean)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleParachuteActive(System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:RAGE.Elements.VehicleBase.SetNameDebug(System.String)">
            <summary>
            see <see cref="M:RAGE.Game.Vehicle.SetVehicleNameDebug(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="T:RAGE.Elements.Blip">
            <summary>
            Blip class
            </summary>
        </member>
        <member name="T:RAGE.Elements.Camera">
            <summary>
            Camera class
            </summary>
        </member>
        <member name="T:RAGE.Elements.Checkpoint">
            <summary>
            Checkpoint class
            </summary>
        </member>
        <member name="T:RAGE.Elements.Colshape">
            <summary>
            Colshape class
            </summary>
        </member>
        <member name="F:RAGE.Elements.Type.Player">
            <summary>
            Player type, see <see cref="T:RAGE.Elements.Player"/>
            </summary>
        </member>
        <member name="F:RAGE.Elements.Type.Vehicle">
            <summary>
            Vehicle type, see <see cref="T:RAGE.Elements.Vehicle"/>
            </summary>
        </member>
        <member name="F:RAGE.Elements.Type.Object">
            <summary>
            Object type, see <see cref="T:RAGE.Elements.MapObject"/>
            </summary>
        </member>
        <member name="F:RAGE.Elements.Type.Pickup">
            <summary>
            Pickup type, see <see cref="T:RAGE.Elements.Pickup"/>
            </summary>
        </member>
        <member name="F:RAGE.Elements.Type.Blip">
            <summary>
            Blip type, see <see cref="T:RAGE.Elements.Blip"/>
            </summary>
        </member>
        <member name="F:RAGE.Elements.Type.Checkpoint">
            <summary>
            Checkpoint type, see <see cref="T:RAGE.Elements.Checkpoint"/>
            </summary>
        </member>
        <member name="F:RAGE.Elements.Type.Marker">
            <summary>
            Marker type, see <see cref="T:RAGE.Elements.Marker"/>
            </summary>
        </member>
        <member name="F:RAGE.Elements.Type.Colshape">
            <summary>
            Colshape type, see <see cref="T:RAGE.Elements.Colshape"/>
            </summary>
        </member>
        <member name="F:RAGE.Elements.Type.TextLabel">
            <summary>
            TextLabel type, see <see cref="T:RAGE.Elements.TextLabel"/>
            </summary>
        </member>
        <member name="F:RAGE.Elements.Type.Ped">
            <summary>
            Ped type, see <see cref="T:RAGE.Elements.Ped"/>
            </summary>
        </member>
        <member name="F:RAGE.Elements.Type.Camera">
            <summary>
            Camera type, see <see cref="T:RAGE.Elements.Camera"/>
            </summary>
        </member>
        <member name="F:RAGE.Elements.Type.Invalid">
            <summary>
            Invalid type
            </summary>
        </member>
        <member name="T:RAGE.Elements.Entity">
            <summary>
            Base Entity class
            </summary>
        </member>
        <member name="M:RAGE.Elements.Entity.GetData``1(System.String)">
            <summary>
            Gets client-side entity data,
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:RAGE.Elements.Entity.SetData``1(System.String,``0)">
            <summary>
            Changes client-side entity data.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="P:RAGE.Elements.Entity.Dimension">
            <summary>
            Entity dimension.
            </summary>
        </member>
        <member name="P:RAGE.Elements.Entity.Model">
            <summary>
            Entity model.
            </summary>
        </member>
        <member name="P:RAGE.Elements.Entity.Position">
            <summary>
            Entity position.
            </summary>
        </member>
        <member name="M:RAGE.Elements.Entity.GetSharedData(System.String)">
            <summary>
            Returns shared data at the key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:RAGE.Elements.Entity.Id">
            <summary>
            Local (client-side) entity ID.
            </summary>
        </member>
        <member name="P:RAGE.Elements.Entity.RemoteId">
            <summary>
            Shared (server-side) entity ID.
            </summary>
        </member>
        <member name="P:RAGE.Elements.Entity.IsLocal">
            <summary>
            Returns true if the entity has been created client-side.
            </summary>
        </member>
        <member name="P:RAGE.Elements.Entity.Type">
            <summary>
            Entity type, see <see cref="T:RAGE.Elements.Type"/>.
            </summary>
        </member>
        <member name="P:RAGE.Elements.Entity.IsNull">
            <summary>
            Returns true if the entity is not valid.
            </summary>
        </member>
        <member name="F:RAGE.Elements.Entity.InvalidId">
            <summary>
            An invalid ID used to check if the entity ID is valid (invalid remote ID means that the entity is local).
            </summary>
        </member>
        <member name="M:RAGE.Elements.Entity.Destroy">
            <summary>
            Destroys the entity in case it's created by us.
            </summary>
        </member>
        <member name="T:RAGE.Elements.GameEntity">
            <summary>
            GameEntity class.
            </summary>
        </member>
        <member name="P:RAGE.Elements.GameEntity.Exists">
            <summary>
            Returns true if the game entity does exist in the world.
            </summary>
        </member>
        <member name="P:RAGE.Elements.GameEntity.Handle">
            <summary>
            Game (physical) entity handle.
            </summary>
        </member>
        <member name="T:RAGE.Elements.Marker">
            <summary>
            Marker class
            </summary>
        </member>
        <member name="T:RAGE.Elements.MapObject">
            <summary>
            MapObject class
            </summary>
        </member>
        <member name="T:RAGE.Elements.Ped">
            <summary>
            Ped class
            </summary>
        </member>
        <member name="T:RAGE.Elements.Pickup">
            <summary>
            Pickup class
            </summary>
        </member>
        <member name="T:RAGE.Elements.Player">
            <summary>
            Player class
            </summary>
        </member>
        <member name="T:RAGE.Elements.TextLabel">
            <summary>
            TextLabel class
            </summary>
        </member>
        <member name="T:RAGE.Elements.Vehicle">
            <summary>
            Vehicle class
            </summary>
        </member>
        <member name="T:RAGE.Events.Script">
            <summary>
            A script base class that could be used to specify the script entry point. When inherited, a parameterless should be implemented. 
            </summary>
        </member>
        <member name="T:RAGE.Events.CancelEventArgs">
            <summary>
            Used to cancel events such as OnPlayerChat.
            </summary>
        </member>
        <member name="T:RAGE.Events.TickNametagData">
            <summary>
            Calculated nametag params passed to Tick when default nametags are disabled.
            </summary>
        </member>
        <member name="F:RAGE.Events.EnableKeyDataChangeEvent">
            <summary>
            Makes OnEntityDataChangeByKey getting triggered alongside with handlers added via <see cref="M:RAGE.Events.AddDataHandler(System.String,RAGE.Events.OnEntityDataChangeDelegate)"/>
            </summary>
        </member>
        <member name="F:RAGE.Events.EnableKeyRemoteEvent">
            <summary>
            Makes OnEventTriggeredByKey getting triggered alongside with event handlers added via <see cref="M:RAGE.Events.Add(System.String,RAGE.Events.CallDelegate)"/>
            </summary>
        </member>
        <member name="M:RAGE.Events.AddDataHandler(System.String,RAGE.Events.OnEntityDataChangeDelegate)">
            <summary>
            Adds a shared data handler triggered when entity shared data changes.
            </summary>
            <param name="name"></param>
            <param name="handler"></param>
        </member>
        <member name="M:RAGE.Events.Add(System.String,RAGE.Events.CallDelegate)">
            <summary>
            Adds an event able to get triggered using CallLocal and from the server-side.
            </summary>
            <param name="eventName"></param>
            <param name="handler"></param>
        </member>
        <member name="M:RAGE.Events.CallLocal(System.String,System.Object[])">
            <summary>
            Triggers local (C# and JS) client-side event.
            </summary>
            <param name="eventName"></param>
            <param name="args"></param>
        </member>
        <member name="M:RAGE.Events.CallRemote(System.String,System.Object[])">
            <summary>
            Triggers server-side remote event.
            </summary>
            <param name="eventName"></param>
            <param name="args"></param>
        </member>
        <member name="T:RAGE.Game.Ai">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Ai.ResetExclusiveScenarioGroup">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsPedBeingArrested(System.Int32)">
            <summary>
            This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.AddCoverBlockingArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.AddCoverPoint(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.AddPatrolRouteLink(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.AddPatrolRouteNode(System.Int32,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Example: 
            AI::ADD_PATROL_ROUTE_NODE(2, WORLD_HUMAN_GUARD_STAND, -193.4915, -2378.864990234375, 10.9719, -193.4915, -2378.864990234375, 10.9719, 3000);
            
            p0 is between 0 and 4 in the scripts.
            
            p1 is WORLD_HUMAN_GUARD_STAND or StandGuard.
            
            p2, p3 and p4 is only one parameter sometimes in the scripts. Most likely a Vector3 hence p2, p3 and p4 are coordinates. 
            Examples: 
            AI::ADD_PATROL_ROUTE_NODE(1, WORLD_HUMAN_GUARD_STAND, l_7397/3/, 0.0, 0.0, 0.0, 0);
            
            AI::ADD_PATROL_ROUTE_NODE(1, WORLD_HUMAN_GUARD_STAND, l_B017/44/._f3, l_B017/44/._f3, 2000);
            
            p5, p6 and p7 are for example set to: 1599.0406494140625, 2713.392578125, 44.4309.
            
            p8 is an int, often random set to for example: GAMEPLAY::GET_RANDOM_INT_IN_RANGE(5000, 10000).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.AddVehicleSubtaskAttackCoord(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            x, y, z: offset in world coords from some entity.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.AddVehicleSubtaskAttackPed(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.AssistedMovementIsRouteLoaded(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.AssistedMovementOverrideLoadDistanceThisFrame(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.AssistedMovementRemoveRoute(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.AssistedMovementRequestRoute(System.String)">
            <summary>
            Routes: 1_FIBStairs, 2_FIBStairs, 3_FIBStairs, 4_FIBStairs, 5_FIBStairs, 5_TowardsFire, 6a_FIBStairs, 7_FIBStairs, 8_FIBStairs, Aprtmnt_1, AssAfterLift, ATM_1, coroner2, coroner_stairs, f5_jimmy1, fame1, family5b, family5c, Family5d, family5d, FIB_Glass1, FIB_Glass2, FIB_Glass3, finaBroute1A, finalb1st, finalB1sta, finalbround, finalbroute2, Hairdresser1, jan_foyet_ft_door, Jo_3, Lemar1, Lemar2, mansion_1, Mansion_1, pols_1, pols_2, pols_3, pols_4, pols_5, pols_6, pols_7, pols_8, Pro_S1, Pro_S1a, Pro_S2, Towards_case, trev_steps, tunrs1, tunrs2, tunrs3, Wave01457s
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.AssistedMovementSetRouteProperties(System.String,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.ClearDrivebyTaskUnderneathDrivingTask(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.ClearPedSecondaryTask(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.ClearPedTasks(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.ClearPedTasksImmediately(System.Int32)">
            <summary>
            Immediately stops the pedestrian from whatever its doing. They stop fighting, animations, etc. they forget what they were doing.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.ClearSequenceTask(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.ClosePatrolRoute">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.CloseSequenceTask(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.ControlMountedWeapon(System.Int32)">
            <summary>
            Forces the ped to use the mounted weapon.
            Returns false if task is not possible.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.CreatePatrolRoute">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.DeletePatrolRoute(System.String)">
            <summary>
            From the b617d scripts:
            
            AI::DELETE_PATROL_ROUTE(miss_merc0);
            AI::DELETE_PATROL_ROUTE(miss_merc1);
            AI::DELETE_PATROL_ROUTE(miss_merc2);
            AI::DELETE_PATROL_ROUTE(miss_dock);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.DoesScenarioExistInArea(System.Single,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.DoesScenarioGroupExist(System.String)">
            <summary>
            Occurrences in the b617d scripts:
            
            ARMY_GUARD,
            ARMY_HELI,
            Cinema_Downtown,
            Cinema_Morningwood,
            Cinema_Textile,
            City_Banks,
            Countryside_Banks,
            DEALERSHIP,
            GRAPESEED_PLANES,
            KORTZ_SECURITY,
            LOST_BIKERS,
            LSA_Planes,
            LSA_Planes,
            MP_POLICE,
            Observatory_Bikers, 
            POLICE_POUND1,
            POLICE_POUND2,
            POLICE_POUND3,
            POLICE_POUND4,
            POLICE_POUND5
            QUARRY,
            SANDY_PLANES,
            SCRAP_SECURITY,
            SEW_MACHINE,
            SOLOMON_GATE,
            Triathlon_1_Start, 
            Triathlon_2_Start, 
            Triathlon_3_Start
            
            Sometimes used with IS_SCENARIO_GROUP_ENABLED:
            if (AI::DOES_SCENARIO_GROUP_EXIST(Observatory_Bikers) AND (!AI::IS_SCENARIO_GROUP_ENABLED(Observatory_Bikers))) {
            else if (AI::IS_SCENARIO_GROUP_ENABLED(BLIMP)) {
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.DoesScenarioOfTypeExistInArea(System.Single,System.Single,System.Single,System.Int32@,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.DoesScriptedCoverPointExistAtCoords(System.Single,System.Single,System.Single)">
            <summary>
            Checks if there is a cover point at position
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetActiveVehicleMissionType(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetClipSetForScriptedGunTask(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetIsTaskActive(System.Int32,System.Int32)">
            <summary>
            from docks_heistb.c4:
            AI::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
            
            Known Tasks: pastebin.com/2gFqJ3Px
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetIsWaypointRecordingLoaded(System.String)">
            <summary>
            For a full list, see here: pastebin.com/Tp0XpBMN
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetNavmeshRouteDistanceRemaining(System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetNavmeshRouteResult(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetPedDesiredMoveBlendRatio(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetPedWaypointDistance(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetPedWaypointProgress(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetPhoneGestureAnimCurrentTime(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetPhoneGestureAnimTotalTime(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetScriptedCoverPointCoords(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetScriptTaskStatus(System.Int32,System.UInt32)">
            <summary>
            Gets the status of a script-assigned task. The hash does not seem to match the actual native name, but is assigned hardcoded from the executable during task creation.
            
            Statuses are specific to tasks, in addition 7 means the specified task is not assigned to the ped.
            
            A few hashes found in the executable (although not a complete list) can be found at pastebin.com/R9iK6M9W as it was too long for this wiki.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetSequenceProgress(System.Int32)">
            <summary>
            returned values:
            0 to 7 = task thats currently in progress, 0 meaning the first one.
            -1 no task sequence in progress.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetVehicleWaypointProgress(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetVehicleWaypointTargetPoint(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.GetWaypointDistanceAlongRoute(System.String,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsDrivebyTaskUnderneathDrivingTask(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsMountedWeaponTaskUnderneathDrivingTask(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsMoveBlendRatioRunning(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsMoveBlendRatioSprinting(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsMoveBlendRatioStill(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsMoveBlendRatioWalking(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsPedActiveInScenario(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsPedCuffed(System.Int32)">
            <summary>
            l
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsPedGettingUp(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsPedInWrithe(System.Int32)">
            <summary>
            returns true is the ped is on the ground whining like a little female dog from a gunshot wound
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsPedRunning(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsPedRunningArrestTask(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsPedSprinting(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsPedStill(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsPedStrafing(System.Int32)">
            <summary>
            Whats strafing?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsPedWalking(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsPlayingPhoneGestureAnim(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsScenarioGroupEnabled(System.String)">
            <summary>
             Occurrences in the b617d scripts: 
            
             ARMY_GUARD,
             ARMY_HELI,
             BLIMP,
             Cinema_Downtown,
             Cinema_Morningwood,
             Cinema_Textile,
             City_Banks,
             Countryside_Banks,
             DEALERSHIP,
             KORTZ_SECURITY,
             LSA_Planes,
             MP_POLICE,
             Observatory_Bikers,
             POLICE_POUND1,
             POLICE_POUND2,
             POLICE_POUND3,
             POLICE_POUND4,
             POLICE_POUND5,
             Rampage1,
             SANDY_PLANES,
             SCRAP_SECURITY,
             SEW_MACHINE,
             SOLOMON_GATE
            
            Sometimes used with DOES_SCENARIO_GROUP_EXIST:
            if (AI::DOES_SCENARIO_GROUP_EXIST(Observatory_Bikers) AND   (!AI::IS_SCENARIO_GROUP_ENABLED(Observatory_Bikers))) {
            else if (AI::IS_SCENARIO_GROUP_ENABLED(BLIMP)) {
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsScenarioOccupied(System.Single,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsScenarioTypeEnabled(System.String)">
            <summary>
            Occurrences in the b617d scripts:
            PROP_HUMAN_SEAT_CHAIR,
            WORLD_HUMAN_DRINKING,
            WORLD_HUMAN_HANG_OUT_STREET,
            WORLD_HUMAN_SMOKING,
            WORLD_MOUNTAIN_LION_WANDER,
            WORLD_HUMAN_DRINKING
            
            Sometimes used together with GAMEPLAY::IS_STRING_NULL_OR_EMPTY in the scripts.
            
            scenarioType could be the same as scenarioName, used in for example AI::TASK_START_SCENARIO_AT_POSITION.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsWaypointPlaybackGoingOnForPed(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.IsWaypointPlaybackGoingOnForVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.OpenPatrolRoute(System.String)">
            <summary>
             patrolRoutes found in the b617d scripts:
             miss_Ass0,
             miss_Ass1,
             miss_Ass2,
             miss_Ass3,
             miss_Ass4,
             miss_Ass5,
             miss_Ass6,
             MISS_PATROL_6,
             MISS_PATROL_7,
             MISS_PATROL_8,
             MISS_PATROL_9,
             miss_Tower_01,
             miss_Tower_02,
             miss_Tower_03,
             miss_Tower_04,
             miss_Tower_05,
             miss_Tower_06,
             miss_Tower_07,
             miss_Tower_08,
             miss_Tower_10
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.OpenSequenceTask(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.PedHasUseScenarioTask(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.PlayAnimOnRunningScenario(System.Int32,System.String,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.PlayEntityScriptedAnim(System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.RemoveAllCoverBlockingAreas">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.RemoveCoverPoint(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.RemoveWaypointRecording(System.String)">
            <summary>
            For a full list, see here: pastebin.com/Tp0XpBMN
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.RequestWaypointRecording(System.String)">
            <summary>
            For a full list, see here: pastebin.com/Tp0XpBMN
            For a full list of the points, see here: goo.gl/wIH0vn
            
            Max number of loaded recordings is 32.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.ResetScenarioGroupsEnabled">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.ResetScenarioTypesEnabled">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetAnimLooped(System.Int32,System.Boolean,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetAnimRate(System.Int32,System.Single,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetAnimWeight(System.Int32,System.Single,System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetDrivebyTaskTarget(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            For p1 ANDp2 (Ped, Vehicle). I could be wrong, as the only time this native is called in scripts is once and both are 0, but I assume this native will work like SET_MOUNTED_WEAPON_TARGET in which has the same exact amount of parameters and the 1st and last 3 parameters are right and the same for both natives.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetDriveTaskCruiseSpeed(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetDriveTaskDrivingStyle(System.Int32,System.Int32)">
            <summary>
            This native is used to set the driving style for specific ped.
            
            Driving styles id seems to be:
            786468
            262144
            786469
            
            http://gtaforums.com/topic/822314-guide-driving-styles/
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetDriveTaskMaxCruiseSpeed(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetExclusiveScenarioGroup(System.String)">
            <summary>
            Groups found in the scripts used with this native:
            
            AMMUNATION,
            QUARRY,
            Triathlon_1,
            Triathlon_2,
            Triathlon_3
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetGlobalMinBirdFlightHeight(System.Single)">
            <summary>
            Needs to be looped! And yes, it does work and is not a hash collision.
            Birds will try to reach the given height.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetHighFallTask(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Makes the ped ragdoll like when falling from a great height
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetMountedWeaponTarget(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Note: Look in decompiled scripts and the times that p1 and p2 arent 0. They are filled with vars. If you look through out that script what other natives those vars are used in, you can tell p1 is a ped and p2 is a vehicle. Which most likely means if you want the mounted weapon to target a ped set targetVehicle to 0 or vice-versa.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetParachuteTaskTarget(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetParachuteTaskThrust(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetPedDesiredMoveBlendRatio(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetPedPathAvoidFire(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetPedPathCanDropFromHeight(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetPedPathCanUseClimbovers(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetPedPathCanUseLadders(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetPedPathMayEnterWater(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetPedPathPreferToAvoidWater(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetPedWaypointRouteOffset(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetScenarioGroupEnabled(System.String,System.Boolean)">
            <summary>
            Occurrences in the b617d scripts: pastebin.com/Tvg2PRHU
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetScenarioTypeEnabled(System.String,System.Boolean)">
            <summary>
            seems to enable/disable specific scenario-types from happening in the game world.
            
            Here are some scenario types from the scripts:
            WORLD_MOUNTAIN_LION_REST                                             
            WORLD_MOUNTAIN_LION_WANDER                                            
            DRIVE                                                                  
            WORLD_VEHICLE_POLICE_BIKE                                             
            WORLD_VEHICLE_POLICE_CAR                                             
            WORLD_VEHICLE_POLICE_NEXT_TO_CAR                                        
            WORLD_VEHICLE_DRIVE_SOLO                                                 
            WORLD_VEHICLE_BIKER                                                      
            WORLD_VEHICLE_DRIVE_PASSENGERS                                           
            WORLD_VEHICLE_SALTON_DIRT_BIKE                                           
            WORLD_VEHICLE_BICYCLE_MOUNTAIN                                           
            PROP_HUMAN_SEAT_CHAIR                                             
            WORLD_VEHICLE_ATTRACTOR                                             
            WORLD_HUMAN_LEANING                                                 
            WORLD_HUMAN_HANG_OUT_STREET                                        
            WORLD_HUMAN_DRINKING                                                
            WORLD_HUMAN_SMOKING                                                
            WORLD_HUMAN_GUARD_STAND                                            
            WORLD_HUMAN_CLIPBOARD                                              
            WORLD_HUMAN_HIKER                                                  
            WORLD_VEHICLE_EMPTY                                                      
            WORLD_VEHICLE_BIKE_OFF_ROAD_RACE                                      
            WORLD_HUMAN_PAPARAZZI                                               
            WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN                            
            WORLD_VEHICLE_PARK_PARALLEL                                              
            WORLD_VEHICLE_CONSTRUCTION_SOLO                               
            WORLD_VEHICLE_CONSTRUCTION_PASSENGERS                                                                    
            WORLD_VEHICLE_TRUCK_LOGS 
            -alphazolam
            
            scenarioType could be the same as scenarioName, used in for example AI::TASK_START_SCENARIO_AT_POSITION.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetSequenceToRepeat(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetTaskVehicleChaseBehaviorFlag(System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetTaskVehicleChaseIdealPursuitDistance(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.StopAnimPlayback(System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.StopAnimTask(System.Int32,System.String,System.String,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskAchieveHeading(System.Int32,System.Single,System.Int32)">
            <summary>
            Makes the specified ped achieve the specified heading.
            
            pedHandle: The handle of the ped to assign the task to.
            heading: The desired heading.
            timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is cancelled, and the ped will stay at the heading it managed to reach in the time.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskAimGunAtCoord(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskAimGunAtEntity(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskAimGunScripted(System.Int32,System.UInt32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskAimGunScriptedWithTarget(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskArrestPed(System.Int32,System.Int32)">
            <summary>
            Example from me_amanda1.ysc.c4:
            AI::TASK_ARREST_PED(l_19F / This is a Ped / , PLAYER::PLAYER_PED_ID());
            
            Example from armenian1.ysc.c4:
            if (!PED::IS_PED_INJURED(l_B180/1/)) {
                AI::TASK_ARREST_PED(l_B180/1/, PLAYER::PLAYER_PED_ID());
            }
            
            I would love to have time to experiment to see if a player Ped can arrest another Ped. Might make for a good cop mod.
            
            
            Looks like only the player can be arrested this way. Peds react and try to arrest you if you task them, but the player charater doesnt do anything if tasked to arrest another ped.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskBoatMission(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32,System.Single,System.Int32)">
            <summary>
            You need to call PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS after TASK_BOAT_MISSION in order for the task to execute.
            
            Working example
            float vehicleMaxSpeed = VEHICLE::_GET_VEHICLE_MAX_SPEED(ENTITY::GET_ENTITY_MODEL(pedVehicle));
            AI::TASK_BOAT_MISSION(pedDriver, pedVehicle, 0, 0, waypointCoord.x, waypointCoord.y, waypointCoord.z, 4, vehicleMaxSpeed, 786469, -1.0, 7);
            PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(pedDriver, 1);
            
            P8 appears to be driving style flag - see gtaforums.com/topic/822314-guide-driving-styles/ for documentation
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskChatToPed(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            p2 tend to be 16, 17 or 1
            p3 to p7 tend to be 0.0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskClearDefensiveArea(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskClearLookAt(System.Int32)">
            <summary>
            Not clear what it actually does, but heres how script uses it - 
            
            if (OBJECT::HAS_PICKUP_BEEN_COLLECTED(...) 
            {
             if(ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
                {
                 AI::TASK_CLEAR_LOOK_AT(PLAYER::PLAYER_PED_ID());
              }
             ...
            }
            
            Another one where it doesnt look at current player - 
            
            AI::TASK_PLAY_ANIM(l_3ED, missheist_agency2aig_2, look_at_phone_a, 1000.0, -2.0, -1, 48, v_2, 0, 0, 0);
            PED::_2208438012482A1A(l_3ED, 0, 0);
            AI::TASK_CLEAR_LOOK_AT(l_3ED);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskClimb(System.Int32,System.Boolean)">
            <summary>
            Climbs or vaults the nearest thing.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskClimbLadder(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskCombatHatedTargetsAroundPed(System.Int32,System.Single,System.Int32)">
            <summary>
            Despite its name, it only attacks ONE hated target. The one closest hated target.
            
            p2 seems to be always 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskCombatHatedTargetsAroundPedTimed(System.Int32,System.Single,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskCombatHatedTargetsInArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Despite its name, it only attacks ONE hated target. The one closest to the specified position.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskCombatPed(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Makes the specified ped attack the target ped.
            p2 should be 0
            p3 should be 16
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskCombatPedTimed(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskCower(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskDriveBy(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.UInt32)">
            <summary>
            Example:
            
            AI::TASK_DRIVE_BY(l_4671/22/, PLAYER::PLAYER_PED_ID(), 0, 0.0, 0.0, 2.0, 300.0, 100, 0, ${firing_pattern_burst_fire_driveby});
            
            
            
            
            Needs working example. Doesnt seem to do anything.
            
            I marked p2 as targetVehicle as all these shooting related tasks seem to have that in common.
            I marked p6 as distanceToShoot as if you think of GTAs Logic with the native SET_VEHICLE_SHOOT natives, it wont shoot till it gets within a certain distance of the target.
            I marked p7 as pedAccuracy as it seems its mostly 100 (Completely Accurate), 75, 90, etc. Although this could be the ammo count within the gun, but I highly doubt it. I will change this comment once I find out if its ammo count or not.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskEnterVehicle(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32)">
            <summary>
            speed 1.0 = walk, 2.0 = run
            p5 1 = normal, 3 = teleport to vehicle, 16 = teleport directly into vehicle
            p6 is always 0
            
            Usage of seat 
            -1 = driver
            0 = passenger
            1 = left back seat
            2 = right back seat
            3 = outside left
            4 = outside right
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskEveryoneLeaveVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskExitCover(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskExtendRoute(System.Single,System.Single,System.Single)">
            <summary>
            MulleKD19: Adds a new point to the current point route. Call TASK_FLUSH_ROUTE before the first call to this. Call TASK_FOLLOW_POINT_ROUTE to make the Ped go the route.
            
            A maximum of 8 points can be added.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskFlushRoute">
            <summary>
            MulleKD19: Clears the current point route. Call this before TASK_EXTEND_ROUTE and TASK_FOLLOW_POINT_ROUTE.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskFollowNavMeshToCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Single)">
            <summary>
            If no timeout, set timeout to -1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskFollowPointRoute(System.Int32,System.Single,System.Int32)">
            <summary>
            MulleKD19: Makes the ped go on the created point route.
            
            ped: The ped to give the task to.
            speed: The speed to move at in m/s.
            int: Unknown. Can be 0, 1, 2 or 3.
            
            Example:
            TASK_FLUSH_ROUTE();
            TASK_EXTEND_ROUTE(0f, 0f, 70f);
            TASK_EXTEND_ROUTE(10f, 0f, 70f);
            TASK_EXTEND_ROUTE(10f, 10f, 70f);
            TASK_FOLLOW_POINT_ROUTE(GET_PLAYER_PED(), 1f, 0);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskFollowToOffsetOfEntity(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean)">
            <summary>
            p6 always -1
            p7 always 10.0
            p8 always 1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskFollowWaypointRecording(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskForceMotionState(System.Int32,System.UInt32,System.Boolean)">
            <summary>
            p2 always false
            
            30/03/2017 ins1de :
            
            See dev-c.com/nativedb/func/info/f28965d04f570dca
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGetOffBoat(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGotoEntityAiming(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            eg
            
             AI::TASK_GOTO_ENTITY_AIMING(v_2, PLAYER::PLAYER_PED_ID(), 5.0, 25.0);
            
            ped = Ped you want to perform this task.
            target = the Entity they should aim at.
            distanceToStopAt = distance from the target, where the ped should stop to aim.
            StartAimingDist = distance where the ped should start to aim.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGotoEntityOffset(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGotoEntityOffsetXy(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGoStraightToCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGoStraightToCoordRelativeToEntity(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGoToCoordAndAimAtHatedEntitiesNearCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Single,System.Single,System.Boolean,System.Int32,System.Int32,System.UInt32)">
            <summary>
            The ped will walk or run towards goToLocation, aiming towards goToLocation or focusLocation (depending on the aimingFlag) and shooting if shootAtEnemies = true to any enemy in his path.
            
            If the ped is closer than noRoadsDistance, the ped will ignore pathing/navmesh and go towards goToLocation directly. This could cause the ped to get stuck behind tall walls if the goToLocation is on the other side. To avoid this, use 0.0f and the ped will always use pathing/navmesh to reach his destination.
            
            If the speed is set to 0.0f, the ped will just stand there while aiming, if set to 1.0f he will walk while aiming, 2.0f will run while aiming.
            
            The ped will stop aiming when he is closer than distanceToStopAt to goToLocation.
            
            I still cant figure out what unkTrue is used for. I dont notice any difference if I set it to false but in the decompiled scripts is always true.
            
            I think that unkFlag, like the driving styles, could be a flag that work as a list of 32 bits converted to a decimal integer. Each bit acts as a flag, and enables or disables a function. What leads me to this conclusion is the fact that in the decompiled scripts, unkFlag takes values like: 0, 1, 5 (101 in binary) and 4097 (4096 + 1 or 1000000000001 in binary). For now, I dont know what behavior enable or disable this possible flag so I leave it at 0.
            
            Note: After some testing, using unkFlag = 16 (0x10) enables the use of sidewalks while moving towards goToLocation.
            
            The aimingFlag takes 2 values: 0 to aim at the focusLocation, 1 to aim at where the ped is heading (goToLocation).
            
            Example:
            
            enum AimFlag
            {
               AimAtFocusLocation,
               AimAtGoToLocation
            };
            
            Vector3 goToLocation1 = { 996.2867f, 0, -2143.044f, 0, 28.4763f, 0 }; // remember the padding.
            
            Vector3 goToLocation2 = { 990.2867f, 0, -2140.044f, 0, 28.4763f, 0 }; // remember the padding.
            
            Vector3 focusLocation = { 994.3478f, 0, -2136.118f, 0, 29.2463f, 0 }; // the coord z should be a little higher, around +1.0f to avoid aiming at the ground
            
            // 1st example
            AI::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation1.x, goToLocation1.y, goToLocation1.z, focusLocation.x, focusLocation.y, focusLocation.z, 2.0f /run/, true /shoot/, 3.0f /stop at/, 0.0f /noRoadsDistance/, true /always true/, 0 /possible flag/, AimFlag::AimAtGoToLocation, -957453492 /FullAuto pattern/);
            
            // 2nd example
            AI::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation2.x, goToLocation2.y, goToLocation2.z, focusLocation.x, focusLocation.y, focusLocation.z, 1.0f /walk/, false /dont shoot/, 3.0f /stop at/, 0.0f /noRoadsDistance/, true /always true/, 0 /possible flag/, AimFlag::AimAtFocusLocation, -957453492 /FullAuto pattern/);
            
            
            1st example: The ped (pedhandle) will run towards goToLocation1. While running and aiming towards goToLocation1, the ped will shoot on sight to any enemy in his path, using FullAuto firing pattern. The ped will stop once he is closer than distanceToStopAt to goToLocation1.
            
            2nd example: The ped will walk towards goToLocation2. This time, while walking towards goToLocation2 and aiming at focusLocation, the ped will point his weapon on sight to any enemy in his path without shooting. The ped will stop once he is closer than distanceToStopAt to goToLocation2.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGoToCoordAnyMeans(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Int32,System.Single)">
            <summary>
            example from fm_mission_controller
            
            AI::TASK_GO_TO_COORD_ANY_MEANS(l_649, sub_f7e86(-1, 0), 1.0, 0, 0, 786603, 0xbf800000);
             
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGoToCoordAnyMeansExtraParams(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGoToCoordWhileAimingAtCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Single,System.Single,System.Boolean,System.Int32,System.Boolean,System.UInt32)">
            <summary>
            movement_speed: mostly 2f, but also 1/1.2f, etc.
            p8: always false
            p9: 2f
            p10: 0.5f
            p11: true
            p12: 0 / 512 / 513, etc.
            p13: 0
            firing_pattern: ${firing_pattern_full_auto}, 0xC6EE6B4C
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGoToCoordWhileAimingAtEntity(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Single,System.Single,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGoToEntity(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            The entity will move towards the target until time is over (duration) or get in targets range (distance). p5 and p6 are unknown, but you could leave p5 = 1073741824 or 100 or even 0 (didnt see any difference but on the decompiled scripts, they use 1073741824 mostly) and p6 = 0
            
            Note: Ive only tested it on entity - ped and target - vehicle. It could work differently on other entities, didnt try it yet.
            
            Example: AI::TASK_GO_TO_ENTITY(pedHandle, vehicleHandle, 5000, 4.0, 100, 1073741824, 0)
            
            Ped will run towards the vehicle for 5 seconds and stop when time is over or when he gets 4 meters(?) around the vehicle (with duration = -1, the task duration will be ignored).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGoToEntityWhileAimingAtCoord(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGoToEntityWhileAimingAtEntity(System.Int32,System.Int32,System.Int32,System.Single,System.Boolean,System.Single,System.Single,System.Boolean,System.Boolean,System.UInt32)">
            <summary>
            shootatEntity:
            If true, peds will shoot at Entity till it is dead.
            If false, peds will just walk till they reach the entity and will cease shooting.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGuardAssignedDefensiveArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGuardCurrentPosition(System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            From re_prisonvanbreak:
            
            AI::TASK_GUARD_CURRENT_POSITION(l_DD, 35.0, 35.0, 1);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskGuardSphereDefensiveArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            p0 - Guessing PedID
            p1, p2, p3 - XYZ?
            p4 - ???
            p5 - Maybe the size of sphere from XYZ?
            p6 - ???
            p7, p8, p9 - XYZ again?
            p10 - Maybe the size of sphere from second XYZ?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskHandsUp(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            In the scripts, p3 was always -1.
            
            p3 seems to be duration or timeout of turn animation.
            Also facingPed can be 0 or -1 so ped will just raise hands up.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskHeliChase(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Ped pilot should be in a heli.
            EntityToFollow can be a vehicle or Ped.
            
            x,y,z appear to be how close to the EntityToFollow the heli should be. Scripts use 0.0, 0.0, 80.0. Then the heli tries to position itself 80 units above the EntityToFollow. If you reduce it to -5.0, it tries to go below (if the EntityToFollow is a heli or plane)
            
            
            NOTE: If the pilot finds enemies, it will engage them, then remain there idle, not continuing to chase the Entity given.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskHeliMission(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32)">
            <summary>
            Needs more research.
            
            Default value of p13 is -1.0 or 0xBF800000.
            Default value of p14 is 0.
            
            Modified examples from fm_mission_controller.ysc, line ~203551:
            AI::TASK_HELI_MISSION(ped, vehicle, 0, 0, posX, posY, posZ, 4, 1.0, -1.0, -1.0, 10, 10, 5.0, 0);
            AI::TASK_HELI_MISSION(ped, vehicle, 0, 0, posX, posY, posZ, 4, 1.0, -1.0, -1.0, 0, ?, 5.0, 4096);
            
            int mode seams to set mission type 4 = coords target, 23 = ped target.
            int 14 set to 32 = ped will land at destination.
            
            My findings:
            mode 4 or 7 forces heli to snap to the heading set
            8 makes the heli flee from the ped.
            9 circles around ped with angle set
            10, 11 normal + imitate ped heading
            20 makes the heli land when hes near the ped. It wont resume chasing.
            21 emulates an helicopter crash
            23 makes the heli circle erratically around ped
            
            I change p2 to vehicleToFollow as it seems to work like the task natives to set targets. In the heli_taxi script where as the merryweather heli takes you to your waypoint it has no need to follow a vehicle or a ped, so of course both have 0 set.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskJump(System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Definition is wrong. This has 4 parameters (Not sure when they were added. v350 has 2, v678 has 4).
            
            v350: Ped ped, bool unused
            v678: Ped ped, bool unused, bool flag1, bool flag2
            
            flag1 = super jump, flag2 = do nothing if flag1 is false and doubles super jump height if flag1 is true.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskLeaveAnyVehicle(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskLeaveVehicle(System.Int32,System.Int32,System.Int32)">
            <summary>
            Flags from decompiled scripts:
            0 = normal exit and closes door.
            1 = normal exit and closes door.
            16 = teleports outside, door kept closed.
            64 = normal exit and closes door, maybe a bit slower animation than 0.
            256 = normal exit but does not close the door.
            4160 = ped is throwing himself out, even when the vehicle is still.
            262144 = ped moves to passenger seat first, then exits normally
            
            Others to be tried out: 320, 512, 131072.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskLookAtCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            p5 = 0, p6 = 2
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskLookAtEntity(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            param3: duration in ms, use -1 to look forever
            param4: using 2048 is fine
            param5: using 3 is fine
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskMoveNetworkAdvanced(System.Int32,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.String,System.Int32)">
            <summary>
            Example:
            AI::_D5B35BEA41919ACB(PLAYER::PLAYER_PED_ID(), minigame_tattoo_michael_parts, 324.13, 181.29, 102.6, 0.0, 0.0, 22.32, 2, 0, 0, 0, 0);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskMoveNetwork(System.Int32,System.String,System.Single,System.Boolean,System.String,System.Int32)">
            <summary>
            Example:
            AI::_2D537BA194896636(PLAYER::PLAYER_PED_ID(), arm_wrestling_sweep_paired_a_rev3, 0.0, 1, mini@arm_wrestling, 0);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskOpenVehicleDoor(System.Int32,System.Int32,System.Int32,System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskParachute(System.Int32,System.Boolean,System.Int32)">
            <summary>
            This function has a third parameter as well (bool).
            Second parameter is unused.
            
            seconds parameter was for jetpack in the early stages of gta and the hard coded code is now removed
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskParachuteToTarget(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            makes ped parachute to coords x y z. Works well with PATHFIND::GET_SAFE_COORD_FOR_PED
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskPatrol(System.Int32,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            After looking at some scripts the second parameter seems to be an id of some kind. Here are some I found from some R scripts:
            
            miss_Tower_01 (this went from 01 - 10)
            miss_Ass0 (0, 4, 6, 3)
            MISS_PATROL_8
            
            I think theyre patrol routes, but Im not sure. And I believe the 3rd parameter is a BOOL, but I cant confirm other than only seeing 0 and 1 being passed.
            
            
            As far as I can see the patrol routes names such as miss_Ass0 have been defined earlier in the scripts. This leads me to believe we can defined our own new patrol routes by following the same approach. 
            From the scripts
            
                AI::OPEN_PATROL_ROUTE(miss_Ass0);
                AI::ADD_PATROL_ROUTE_NODE(0, WORLD_HUMAN_GUARD_STAND, l_7380/3/, -139.4076690673828, -993.4732055664062, 26.2754, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(5000, 10000));
                AI::ADD_PATROL_ROUTE_NODE(1, WORLD_HUMAN_GUARD_STAND, l_7381/3/, -116.1391830444336, -987.4984130859375, 26.38541030883789, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(5000, 10000));
                AI::ADD_PATROL_ROUTE_NODE(2, WORLD_HUMAN_GUARD_STAND, l_7382/3/, -128.46847534179688, -979.0340576171875, 26.2754, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(5000, 10000));
                AI::ADD_PATROL_ROUTE_LINK(0, 1);
                AI::ADD_PATROL_ROUTE_LINK(1, 2);
                AI::ADD_PATROL_ROUTE_LINK(2, 0);
                AI::CLOSE_PATROL_ROUTE();
                AI::CREATE_PATROL_ROUTE();
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskPause(System.Int32,System.Int32)">
            <summary>
            Stand still (?)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskPedSlideToCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskPedSlideToCoordHdgRate(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskPerformSequence(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskPerformSequenceFromProgress(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskPlaneChase(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskPlaneLand(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
             Function.Call(Hash.TASK_PLANE_LAND, pilot, selectedAirplane, runwayStartPoint.X, runwayStartPoint.Y, runwayStartPoint.Z, runwayEndPoint.X, runwayEndPoint.Y, runwayEndPoint.Z); 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskPlaneMission(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            EXAMPLE USAGE:
            
            Fly around target (Precautiously, keeps high altitude):
            Function.Call(Hash.TASK_PLANE_MISSION, pilot, selectedAirplane, 0, 0, Target.X, Target.Y, Target.Z, 4, 100f, 0f, 90f, 0, 200f);
            
            Fly around target (Dangerously, keeps VERY low altitude):
            Function.Call(Hash.TASK_PLANE_MISSION, pilot, selectedAirplane, 0, 0, Target.X, Target.Y, Target.Z, 4, 100f, 0f, 90f, 0, -500f);
            
            Fly directly into target:
            Function.Call(Hash.TASK_PLANE_MISSION, pilot, selectedAirplane, 0, 0, Target.X, Target.Y, Target.Z, 4, 100f, 0f, 90f, 0, -5000f);
            
            EXPANDED INFORMATION FOR ADVANCED USAGE (custom pilot)
            
            physicsSpeed: (THIS IS NOT YOUR ORDINARY SPEED PARAMETER: READ!!)
            Think of this -first- as a radius value, not a true speed value.  The ACTUAL effective speed of the plane will be that of the maximum speed permissible to successfully fly in a -circle- with a radius of physicsSpeed.  This also means that the plane must complete a circle before it can begin its bombing run, its straight line pass towards the target.  p9 appears to influence the angle at which a bombing run begins, although I cant confirm yet.
            
            VERY IMPORTANT: A bombing run will only occur if a plane can successfully determine a possible navigable route (the slower the value of physicsSpeed, the more precise the pilot can be due to less influence of physics on flightpath).  Otherwise, the pilot will continue to patrol around Destination (be it a dynamic Entity position vector or a fixed world coordinate vector.)
            
            0 = Planes physics are almost entirely frozen, plane appears to orbit around precise destination point
            1-299 = Blend of frozen, small radius vs. normal vs. accelerated, hyperfast, large radius
            300+ =  Vehicle behaves entirely like a normal gameplay plane.
            
            patrolBlend (The lower the value, the more the Destination is treated as a fly AT rather than a fly AROUND point.)
            
            Scenario: Destination is an Entity on ground level, wide open field
            -5000 = Pilot kamikazes directly into Entity
            -1000 = Pilot flies extremely low -around- Entity, very prone to crashing
            -200 = Pilot flies lower than average around Entity.
            0 = Pilot flies around Entity, normal altitude
            200 = Pilot flies an extra eighty units or so higher than 0 while flying around Destination (this doesnt seem to correlate directly into distance units.)
            
            -- Valid mission types found in the exe: --
            
            0 = None
            1 = Unk
            2 = CTaskVehicleRam
            3 = CTaskVehicleBlock
            4 = CTaskVehicleGoToPlane
            5 = CTaskVehicleStop
            6 = CTaskVehicleAttack
            7 = CTaskVehicleFollow
            8 = CTaskVehicleFleeAirborne
            9= CTaskVehicleCircle
            10 = CTaskVehicleEscort
            15 = CTaskVehicleFollowRecording
            16 = CTaskVehiclePoliceBehaviour
            17 = CTaskVehicleCrash
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskPlantBomb(System.Int32,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskPlayAnim(System.Int32,System.String,System.String,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            
            
            float speed  normal speed is 8.0f
            ----------------------
            
            float speedMultiplier  multiply the playback speed
            ----------------------
            
            int duration: time in millisecond
            ----------------------
            -1 _ _ _ _ _ _ _ Default (see flag)
            0 _ _ _ _ _ _ _  Not play at all
            Small value _ _  Slow down animation speed
            Other _ _ _ _ _  freeze player control until specific time (ms) has 
            _ _ _ _ _ _ _ _ _ passed. (No effect if flag is set to be 
            _ _ _ _ _ _ _ _ _ controllable.)
            
            int flag:
            ----------------------
            enum eAnimationFlags
            {
             ANIM_FLAG_NORMAL = 0,
               ANIM_FLAG_REPEAT = 1,
               ANIM_FLAG_STOP_LAST_FRAME = 2,
               ANIM_FLAG_UPPERBODY = 16,
               ANIM_FLAG_ENABLE_PLAYER_CONTROL = 32,
               ANIM_FLAG_CANCELABLE = 120,
            };
            Odd number : loop infinitely
            Even number : Freeze at last frame
            Multiple of 4: Freeze at last frame but controllable
            
            01 to 15  Full body
            10 to 31  Upper body
            32 to 47  Full body  Controllable
            48 to 63  Upper body  Controllable
            ...
            001 to 255  Normal
            256 to 511  Garbled
            ...
            
            playbackRate:
            
            values are between 0.0 and 1.0
            
            
            lockX:  
            
            0 in most cases 1 for rcmepsilonism8 and rcmpaparazzo_3
             1 for mini@sprunk
             
            
            lockY:
            
            0 in most cases 
            1 for missfam5_yoga, missfra1mcs_2_crew_react
            
            
            lockZ: 
            
                0 for single player 
                Can be 1 but only for MP 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskPlayAnimAdvanced(System.Int32,System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32,System.Int32)">
            <summary>
            Its similar to the one above, except the first 6 floats let you specify the initial position and rotation of the task. (Ped gets teleported to the position). animTime is a float from 0.0 - 1.0, lets you start an animation from given point. The rest as in AI::TASK_PLAY_ANIM. 
            
            Rotation information : rotX and rotY dont seem to have any effect, only rotZ works.
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskPlayPhoneGestureAnimation(System.Int32,System.String,System.String,System.String,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Example from the scripts:
            AI::TASK_PLAY_PHONE_GESTURE_ANIMATION(PLAYER::PLAYER_PED_ID(), v_3, v_2, v_4, 0.25, 0.25, 0, 0);
            
            =========================================================
            ^^ No offense, but Idk how that would really help anyone.
            
            As for the animDict ANDanimation, theyre both store in a global in all 5 scripts. So if anyone would be so kind as to read that global and comment what strings they use. Thanks.
            
            Known boneMaskTypes
            BONEMASK_HEADONLY
            BONEMASK_HEAD_NECK_AND_ARMS
            BONEMASK_HEAD_NECK_AND_L_ARM
            BONEMASK_HEAD_NECK_AND_R_ARM
            
            p4 known args - 0.0f, 0.5f, 0.25f
            p5 known args - 0.0f, 0.25f
            p6 known args - 1 if a global if check is passed.
            p7 known args - 1 if a global if check is passed.
            
            The values found above, I found within the 5 scripts this is ever called in. (fmmc_launcher, fm_deathmatch_controller, fm_impromptu_dm_controller, fm_mission_controller, and freemode).
            =========================================================
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskPutPedDirectlyIntoCover(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Single,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskPutPedDirectlyIntoMelee(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            from armenian3.c4
            
            AI::TASK_PUT_PED_DIRECTLY_INTO_MELEE(PlayerPed, armenianPed, 0.0, -1.0, 0.0, 0);
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskRappelFromHeli(System.Int32,System.Int32)">
            <summary>
            Only appears twice in the scripts.
            
            AI::TASK_RAPPEL_FROM_HELI(PLAYER::PLAYER_PED_ID(), 0x41200000);
            AI::TASK_RAPPEL_FROM_HELI(a_0, 0x41200000);
            
            Fixed, definitely not a float and since its such a big number obviously not a bool. All though note when I thought it was a bool and set it to 1 it seemed to work that same as int 0x41200000.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskReactAndFleePed(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskReloadWeapon(System.Int32,System.Boolean)">
            <summary>
            The 2nd param (unused) is not implemented.
            
            -----------------------------------------------------------------------
            
            The only occurrence I found in a R script (assassin_construction.ysc.c4):
            
                        if (((v_3  v_4) AND (AI::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), 0x6a67a5cc) != 1)) AND (v_5  v_3)) {
                            AI::TASK_RELOAD_WEAPON(PLAYER::PLAYER_PED_ID(), 1);
                        }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskScriptedAnimation(System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Single,System.Single)">
            <summary>
            From fm_mission_controller.c:
            reserve_network_mission_objects(get_num_reserved_mission_objects(0) + 1);
                       vVar28 = {0.094f, 0.02f, -0.005f};
                        vVar29 = {-92.24f, 63.64f, 150.24f};
                      func_253(ANDVar30, joaat(prop_ld_case_01), Global_1592429.imm_34757iParam1 268, 1, 1, 0, 1);
                     set_entity_lod_dist(net_to_ent(uVar30), 500);
                     attach_entity_to_entity(net_to_ent(uVar30), iParam0, get_ped_bone_index(iParam0, 28422), vVar28, vVar29, 1, 0, 0, 0, 2, 1);
                       Var31.imm_4 = 1065353216;
                     Var31.imm_5 = 1065353216;
                     Var31.imm_9 = 1065353216;
                     Var31.imm_10 = 1065353216;
                        Var31.imm_14 = 1065353216;
                        Var31.imm_15 = 1065353216;
                        Var31.imm_17 = 1040187392;
                        Var31.imm_18 = 1040187392;
                        Var31.imm_19 = -1;
                        Var32.imm_4 = 1065353216;
                     Var32.imm_5 = 1065353216;
                     Var32.imm_9 = 1065353216;
                     Var32.imm_10 = 1065353216;
                        Var32.imm_14 = 1065353216;
                        Var32.imm_15 = 1065353216;
                        Var32.imm_17 = 1040187392;
                        Var32.imm_18 = 1040187392;
                        Var32.imm_19 = -1;
                        Var31 = 1;
                        Var31.imm_1 = weapons@misc@jerrycan@mp_male;
                      Var31.imm_2 = idle;
                       Var31.imm_20 = 1048633;
                       Var31.imm_4 = 0.5f;
                       Var31.imm_16 = get_hash_key(BONEMASK_ARMONLY_R);
                      task_scripted_animation(iParam0, ANDar31, ANDar32, ANDar32, 0f, 0.25f);
                      set_model_as_no_longer_needed(joaat(prop_ld_case_01));
                        remove_anim_dict(anim@heists@biolab@);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskSeekCoverFromPed(System.Int32,System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskSeekCoverFromPos(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskSeekCoverToCoords(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean)">
            <summary>
            from michael2:
            AI::TASK_SEEK_COVER_TO_COORDS(ped, 967.5164794921875, -2121.603515625, 30.479299545288086, 978.94677734375, -2125.84130859375, 29.4752, -1, 1);
            
            
            appears to be shorter variation
            from michael3:
            AI::TASK_SEEK_COVER_TO_COORDS(ped, -2231.011474609375, 263.6326599121094, 173.60195922851562, -1, 0);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskSeekCoverToCoverPoint(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskSetBlockingOfNonTemporaryEvents(System.Int32,System.Boolean)">
            <summary>
            I cant believe I have to define this, this is one of the best natives.
            
            It makes the ped ignore basically all shocking events around it. Occasionally the ped may comment or gesture, but other than that they just continue their daily activities. This includes shooting and wounding the ped. And - most importantly - they do not flee.
            
            Since it is a task, every time the native is called the ped will stop for a moment. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskSetDecisionMaker(System.Int32,System.UInt32)">
            <summary>
            p1 is always GET_HASH_KEY(empty) in scripts, for the rare times this is used
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskSetSphereDefensiveArea(System.Int32,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskShockingEventReact(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskShootAtCoord(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskShootAtEntity(System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            //this part of the code is to determine at which entity the player is aiming, for example if you want to create a mod where you give orders to peds
            Entity aimedentity;
            Player player = PLAYER::PLAYER_ID();
            PLAYER::_GET_AIMED_ENTITY(player, ANDimedentity);
            
            //bg is an array of peds
            AI::TASK_SHOOT_AT_ENTITY(bgi, aimedentity, 5000, GAMEPLAY::GET_HASH_KEY(FIRING_PATTERN_FULL_AUTO));
            
            in practical usage, getting the entity the player is aiming at and then task the peds to shoot at the entity, at a button press event would be better.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskShuffleToNextVehicleSeat(System.Int32,System.Int32,System.Int32)">
            <summary>
            Makes the specified ped shuffle to the next vehicle seat.
            The ped MUST be in a vehicle and the vehicle parameter MUST be the peds current vehicle.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskSkyDive(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskSmartFleeCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Makes the specified ped flee the specified distance from the specified position.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskSmartFleePed(System.Int32,System.Int32,System.Single,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Makes a ped run away from another ped (fleeTarget).
            
            distance = ped will flee this distance.
            fleeTime = ped will flee for this amount of time, set to -1 to flee forever
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskStandGuard(System.Int32,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            scenarioName example: WORLD_HUMAN_GUARD_STAND
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskStandStill(System.Int32,System.Int32)">
            <summary>
            Makes the specified ped stand still for (time) milliseconds.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskStartScenarioAtPosition(System.Int32,System.String,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            List of scenarioNames: pastebin.com/6mrYTdQv
            
            Also a few more listed at AI::TASK_START_SCENARIO_IN_PLACE just above.
            ---------------
            The first parameter in every scenario has always been a Ped of some sort. The second like TASK_START_SCENARIO_IN_PLACE is the name of the scenario. 
            
            The next 4 parameters were harder to decipher. After viewing hairdo_shop_mp.ysc.c4, and being confused from seeing the case in other scripts, they passed the first three of the arguments as one array from a function, and it looked like it was obviously x, y, and z.
            
            I havent seen the sixth parameter go to or over 360, making me believe that it is rotation, but I really cant confirm anything.
            
            I have no idea what the last 3 parameters are, but Ill try to find out.
            
            -going on the last 3 parameters, they appear to always be 0, 0, 1
            
            p6 -1 also used in scrips
            
            p7 used for sitting scenarios
            
            p8 teleports ped to position
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskStartScenarioInPlace(System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            Plays a scenario on a Ped at their current location.
            
            unkDelay - Usually 0 or -1, doesnt seem to have any effect. Might be a delay between sequences.
            playEnterAnim - Plays the Enter anim if true, otherwise plays the Exit anim. Scenarios that dont have any Enter anims wont play if this is set to true.
            
            ----
            
            From am_hold_up.ysc.c4 at line 339:
            
            AI::TASK_START_SCENARIO_IN_PLACE(NETWORK::NET_TO_PED(l_8D._f4), sub_adf(), 0, 1);
            
            Im unsure of what the last two parameters are, however sub_adf() randomly returns 1 of 3 scenarios, those being:
            WORLD_HUMAN_SMOKING
            WORLD_HUMAN_HANG_OUT_STREET
            WORLD_HUMAN_STAND_MOBILE
            
            This makes sense, as these are what I commonly see when going by a liquor store.
            -------------------------
            List of scenarioNames: pastebin.com/6mrYTdQv
            (^ Thank you so fucking much for this)
            
            Also these:
            WORLD_FISH_FLEE
            DRIVE
            WORLD_HUMAN_HIKER
            WORLD_VEHICLE_ATTRACTOR
            WORLD_VEHICLE_BICYCLE_MOUNTAIN
            WORLD_VEHICLE_BIKE_OFF_ROAD_RACE
            WORLD_VEHICLE_BIKER
            WORLD_VEHICLE_CONSTRUCTION_PASSENGERS
            WORLD_VEHICLE_CONSTRUCTION_SOLO
            WORLD_VEHICLE_DRIVE_PASSENGERS
            WORLD_VEHICLE_DRIVE_SOLO
            WORLD_VEHICLE_EMPTY
            WORLD_VEHICLE_PARK_PARALLEL
            WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN
            WORLD_VEHICLE_POLICE_BIKE
            WORLD_VEHICLE_POLICE_CAR
            WORLD_VEHICLE_POLICE_NEXT_TO_CAR
            WORLD_VEHICLE_SALTON_DIRT_BIKE
            WORLD_VEHICLE_TRUCK_LOGS
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskStayInCover(System.Int32)">
            <summary>
            Makes the ped run to take cover
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskStealthKill(System.Int32,System.Int32,System.UInt32,System.Single,System.Boolean)">
            <summary>
            known killTypes are: AR_stealth_kill_knife and AR_stealth_kill_a.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskStopPhoneGestureAnimation(System.Int32,System.Int32)">
            <summary>
            TODO: add hash from x360
            ^^^
            I got you, x360 Hash: 0x5A32D4B4. 
            Note: Whoever named this I just compared it and the hash matches, it was the correct name thanks. 
            
            Note: Alexander Blade, needs to fix this site or his code one, as when we do find the right name the server throws an error saying the name is already in use. AB is a legend coder, so Im sure this is a simple fix for him.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskSwapWeapon(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskSweepAimEntity(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            This function is called on peds in vehicles.
            
            anim: animation name
            p2, p3, p4: sweep_low, sweep_med or sweep_high
            p5: no idea what it does but is usually -1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskSweepAimPosition(System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskSynchronizedScene(System.Int32,System.Int32,System.String,System.String,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32)">
            <summary>
             AI::TASK_SYNCHRONIZED_SCENE(ped, scene, creatures@rottweiler@in_vehicle@std_car, get_in, 1000.0, -8.0, 4, 0, 0x447a0000, 0);
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskThrowProjectile(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            In every case of this native, Ive only seen the first parameter passed as 0, although I believe its a Ped after seeing tasks around it using 0. Thats because its used in a Sequence Task.
            
            The last 3 parameters are definitely coordinates after seeing them passed in other scripts, and even being used straight from the players coordinates.
            ---
            It seems that - in the decompiled scripts - this native was used on a ped who was in a vehicle to throw a projectile out the window at the player. This is something any ped will naturally do if they have a throwable and they are doing driveby-combat (although not very accurately).
            It is possible, however, that this is how SWAT throws smoke grenades at the player when in cover.
            ----------------------------------------------------
            The first comment is right it definately is the ped as if you look in script finale_heist2b.c line 59628 in Xbox Scripts atleast you will see task_throw_projectile and the first param is Local_5592 14 if you look above it a little bit line 59622 give_weapon_to_ped uses the same exact param Local_5592 14 and we all know the first param of that native is ped. So it guaranteed has to be ped. 0 just may mean to use your ped by default for some reason.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskToggleDuck(System.Boolean,System.Boolean)">
            <summary>
            used in sequence task
            
            both parameters seems to be always 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskTurnPedToFaceCoord(System.Int32,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            duration in milliseconds
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskTurnPedToFaceEntity(System.Int32,System.Int32,System.Int32)">
            <summary>
            duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskUseMobilePhone(System.Int32,System.Int32,System.Int32)">
            <summary>
            Actually has 3 params, not 2.
            
            p0: Ped
            p1: int (or bool?)
            p2: int
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskUseMobilePhoneTimed(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskUseNearestScenarioChainToCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskUseNearestScenarioChainToCoordWarp(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskUseNearestScenarioToCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Updated variables
            
            An alternative to AI::TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP. Makes the ped walk to the scenario instead.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskUseNearestScenarioToCoordWarp(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleAimAtCoord(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleAimAtPed(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleChase(System.Int32,System.Int32)">
            <summary>
            chases targetEnt fast and aggressively
            --
            Makes ped (needs to be in vehicle) chase targetEnt.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleDriveToCoord(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.UInt32,System.Int32,System.Single,System.Single)">
            <summary>
            info about driving modes: HTTP://gtaforums.com/topic/822314-guide-driving-styles/
            ---------------------------------------------------------------
            Passing P6 value as floating value didnt throw any errors, though unsure what is it exactly, looks like radius or something.
            
            P10 though, it is mentioned as float, however, I used bool and set it to true, that too worked.
            Here the e.g. code I used
            Function.Call(Hash.TASK_VEHICLE_DRIVE_TO_COORD, Ped, Vehicle, Cor X, Cor Y, Cor Z, 30f, 1f, Vehicle.GetHashCode(), 16777216, 1f, true);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleDriveToCoordLongrange(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleDriveWander(System.Int32,System.Int32,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleEscort(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Single,System.Int32,System.Single)">
            <summary>
            Makes a ped follow the targetVehicle with minDistance in between.
            
            note: minDistance is ignored if drivingstyle is avoiding traffic, but Rushed is fine.
            
            Mode: The mode defines the relative position to the targetVehicle. The ped will try to position its vehicle there.
            -1 = behind
            0 = ahead
            1 = left
            2 = right
            3 = back left
            4 = back right
            
            if the target is closer than noRoadsDistance, the driver will ignore pathing/roads and follow you directly.
            
            Driving Styles guide: gtaforums.com/topic/822314-guide-driving-styles/
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleFollow(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32)">
            <summary>
            Makes a ped in a vehicle follow an entity (ped, vehicle, etc.)
            
            drivingStyle:
            0 = Rushed
            1 = Ignore Traffic Lights
            2 = Fast
            3 = Normal (Stop in Traffic)
            4 = Fast avoid traffic
            5 = Fast, stops in traffic but overtakes sometimes
            6 = Fast avoids traffic extremely
            
            AI::_TASK_VEHICLE_FOLLOW(l_2443/1/, l_2683/1/, l_278, 40.0, 262144, 10);
            
            What is this known as in the decompiled scripts ffs. I need more examples. Ive searched in all scripts for keywords suchas,
            TASK_VEHICLE_FOLLOW, FC545A9F0626E3B6, 0xFC545A9F0626E3B6, all the parameters in the above example even just search the last few params 40.0, 262144, 10 and couldnt find where this native is used in scripts at all unless whoever decompiled the scripts gave it a whack a.. name.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleFollowWaypointRecording(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Boolean,System.Single)">
            <summary>
            task_vehicle_follow_waypoint_recording(Ped p0, Vehicle p1, string p2, int p3, int p4, int p5, int p6, float.x p7, float.Y p8, float.Z p9, bool p10, int p11)
            
            p2 = Waypoint recording string (found in update\update.rpf\x64\levels\gta5\waypointrec.rpf
            p3 = 786468
            p4 = 0
            p5 = 16
            p6 = -1 (angle?)
            p7/8/9 = usually v3.zero
            p10 = bool (repeat?)
            p11 = 1073741824
            
            -khorio
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleGotoNavmesh(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single)">
            <summary>
            Differs from TASK_VEHICLE_DRIVE_TO_COORDS in that it will pick the shortest possible road route without taking one-way streets and other road laws into consideration.
            
            WARNING:
            A behaviorFlag value of 0 will result in a clunky, stupid driver!
            
            Recommended settings:
            speed = 30.0f,
            behaviorFlag = 156, 
            stoppingRange = 5.0f;
            
            If you simply want to have your driver move to a fixed location, call it only once, or, when necessary in the event of interruption. 
            
            If using this to continually follow a Ped who is on foot:  You will need to run this in a tick loop.  Call it in with the Peds updated coordinates every 20 ticks or so and you will have one hell of a smart, fast-reacting NPC driver -- provided he doesnt get stuck.  If your update frequency is too fast, the Ped may not have enough time to figure his way out of being stuck, and thus, remain stuck.  One way around this would be to implement an anti-stuck mechanism, which allows the driver to realize hes stuck, temporarily pause the tick, unstuck, then resume the tick.
            
            EDIT:  This is being discussed in more detail at http://gtaforums.com/topic/818504-any-idea-on-how-to-make-peds-clever-and-insanely-fast-c/  
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleHeliProtect(System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Single,System.Int32,System.Int32)">
            <summary>
            pilot, vehicle and altitude are rather self-explanatory.
            
            p4: is unused variable in the function.
            
            entityToFollow: you can provide a Vehicle entity or a Ped entity, the heli will protect them.
            
            targetSpeed:  The pilot will dip the nose AS MUCH AS POSSIBLE so as to reach this value AS FAST AS POSSIBLE.  As such, youll want to modulate it as opposed to calling it via a hard-wired, constant #.
            
            radius isnt just stop within radius of X of target like with ground vehicles.  In this case, the pilot will fly an entire circle around radius and continue to do so.
            
            NOT CONFIRMED:  p7 appears to be a FlyingStyle enum.  Still investigating it as of this writing, but playing around with values here appears to result in different -behavior- as opposed to offsetting coordinates, altitude, target speed, etc.
            
            NOTE: If the pilot finds enemies, it will engage them until it kills them, but will return to protect the ped/vehicle given shortly thereafter.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleMission(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleMissionCoorsTarget(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            Example from fm_mission_controller.c4:
            AI::TASK_VEHICLE_MISSION_COORS_TARGET(l_65E1, l_65E2, 324.84588623046875, 325.09619140625, 104.3525, 4, 15.0, 802987, 5.0, 5.0, 0);
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleMissionPedTarget(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            Modes:
            8= flees
            1=drives around the ped
            4=drives and stops near
            7=follows
            10=follows to the left
            11=follows to the  right
            12 = follows behind
            13=follows ahead
            14=follows, stop when near
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehiclePark(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean)">
            <summary>
            Modes:
            0 - ignore heading
            1 - park forward
            2 - park backwards
            
            Depending on the angle of approach, the vehicle can park at the specified heading or at its exact opposite (-180) angle.
            
            Radius seems to define how close the vehicle has to be -after parking- to the position for this task considered completed. If the value is too small, the vehicle will try to park again until its exactly where it should be. 20.0 Works well but lower values dont, like the radius is measured in centimeters or something.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehiclePlayAnim(System.Int32,System.String,System.String)">
            <summary>
            Most probably plays a specific animation on vehicle. For example getting chop out of van etc...
            
            Heres how its used - 
            
            AI::TASK_VEHICLE_PLAY_ANIM(l_325, rcmnigel1b, idle_speedo);
            
            AI::TASK_VEHICLE_PLAY_ANIM(l_5560/1/, missfra0_chop_drhome, InCar_GetOutofBack_Speedo);
            
            FYI : Speedo is the name of van in which chop was put in the mission.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleShootAtCoord(System.Int32,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleShootAtPed(System.Int32,System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskVehicleTempAction(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            1 - brake
            3 - brake + reverse
            4 - turn left 90 + braking
            5 - turn right 90 + braking
            6 - brake strong (handbrake?) until time ends
            7 - turn left + accelerate
            7 - turn right + accelerate
            9 - weak acceleration
            10 - turn left + restore wheel pos to center in the end
            11 - turn right + restore wheel pos to center in the end
            13 - turn left + go reverse
            14 - turn left + go reverse
            16 - crash the game after like 2 seconds :)
            17 - keep actual state, game crashed after few tries
            18 - game crash
            19 - strong brake + turn left/right
            20 - weak brake + turn left then turn right
            21 - weak brake + turn right then turn left
            22 - brake + reverse
            23 - accelerate fast
            24 - brake
            25 - brake turning left then when almost stopping it turns left more
            26 - brake turning right then when almost stopping it turns right more
            27 - brake until car stop or until time ends
            28 - brake + strong reverse acceleration
            30 - performs a burnout (brake until stop + brake and accelerate)
            31 - accelerate + handbrake
            32 - accelerate very strong
            
            Seems to be this:
            Works on NPCs, but overrides their current task. If inside a task sequence (and not being the last task), time will work, otherwise the task will be performed forever until tasked with something else
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskWanderInArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskWanderStandard(System.Int32,System.Single,System.Int32)">
            <summary>
            Makes ped walk around the area.
            
            set p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskWarpPedIntoVehicle(System.Int32,System.Int32,System.Int32)">
            <summary>
            Seat Numbers
            -------------------------------
            Driver = -1
            Any = -2
            Left-Rear = 1
            Right-Front = 0
            Right-Rear = 2
            Extra seats = 3-14(This may differ from vehicle type e.g. Firetruck Rear Stand, Ambulance Rear)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskWrithe(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            EX: Function.Call(Ped1, Ped2, Time, 0);
            
            The last parameter is always 0 for some reason I do not know. The first parameter is the pedestrian who will writhe to the pedestrian in the other parameter. The third paremeter is how long until the Writhe task ends. When the task ends, the ped will die. If set to -1, he will not die automatically, and the task will continue until something causes it to end. This can be being touched by an entity, being shot, explosion, going into ragdoll, having task cleared. Anything that ends the current task will kill the ped at this point.
            
            
            
            MulleDK19: Third parameter does not appear to be time. The last parameter is not implemented (Its not used, regardless of value).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.UncuffPed(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.UpdateTaskAimGunScriptedTarget(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.UpdateTaskHandsUpDuration(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.UpdateTaskSweepAimEntity(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.UpdateTaskSweepAimPosition(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.UseWaypointRecordingAsAssistedMovementRoute(System.Int32@,System.Boolean,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.VehicleWaypointPlaybackOverrideSpeed(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.VehicleWaypointPlaybackPause(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.VehicleWaypointPlaybackResume(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.VehicleWaypointPlaybackUseDefaultSpeed(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.WaypointPlaybackGetIsPaused(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.WaypointPlaybackOverrideSpeed(System.Int32,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.WaypointPlaybackPause(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.WaypointPlaybackResume(System.Int32,System.Boolean,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.WaypointPlaybackStartAimingAtCoord(System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.WaypointPlaybackStartAimingAtPed(System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.WaypointPlaybackStartShootingAtCoord(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.WaypointPlaybackStartShootingAtPed(System.Int32,System.Int32,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.WaypointPlaybackStopAimingOrShooting(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.WaypointPlaybackUseDefaultSpeed(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.WaypointRecordingGetClosestWaypoint(System.String,System.Single,System.Single,System.Single,System.Int32@)">
            <summary>
            For a full list, see here: pastebin.com/Tp0XpBMN
            For a full list of the points, see here: goo.gl/wIH0vn
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.WaypointRecordingGetCoord(System.String,System.Int32,RAGE.Vector3)">
            <summary>
            For a full list, see here: pastebin.com/Tp0XpBMN
            For a full list of the points, see here: goo.gl/wIH0vn
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.WaypointRecordingGetNumPoints(System.String,System.Int32@)">
            <summary>
            For a full list, see here: pastebin.com/Tp0XpBMN
            For a full list of the points, see here: goo.gl/wIH0vn
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.WaypointRecordingGetSpeedAtPoint(System.String,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.TaskFollowNavMeshToCoordAdvanced(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.SetNextDesiredMoveState(System.Single)">
            <summary>
            Not used in the scripts.
            
            Bullshit! Its used in spawn_activities
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0xB4F47213DF45A64C(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0xA7FFBA498E4AAF67(System.Int32,System.String)">
            <summary>
            Found in scripts:
            
            if (AI::_A7FFBA498E4AAF67(l_9BC, Run)) {
            if (AI::_A7FFBA498E4AAF67(l_9BC, Escape)) {
            
            p0 is probably Ped and this native checks if the ped is doing the AI task in p1. Just a guess though. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0x717E4D1F2048376D(System.Int32)">
            <summary>
            If the function fails, returns Unknown.
            
            Could be task (sequence) name. Needs more research.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0x3E38E28A1D80DDF6(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0x621C6E4729388E41(System.Int32)">
            <summary>
            Used only once (am_mp_property_int)
            
            ped was PLAYER_PED_ID()
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0x921CE12C489C4C41(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0x30ED88D5E0C56A37(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0x1F351CF1C6475734(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0xD01015C7316AE176(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0xAB13A5565480B6D9(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0x8FD89A6240813FD0(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Appears only in fm_mission_controller and used only 3 times.
            
            ped was always PLAYER_PED_ID()
            p1 was always true
            p2 was always true
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0x88E32DB8C1A4AA4B(System.Int32,System.Single)">
            <summary>
            SET_PED_PATH_
            
            Could be the move speed on the path. Needs testing.
            
            Default is 1.0 and maximum is 10.0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0xB0A6CFD2C69C1088(System.Int32,System.Int32@,System.Boolean)">
            <summary>
            Examples:
            AI::_B0A6CFD2C69C1088(PLAYER::PLAYER_PED_ID(), isFirstPerson, 0);
            AI::_B0A6CFD2C69C1088(PLAYER::PLAYER_PED_ID(), isFirstPerson, 1);
            AI::_B0A6CFD2C69C1088(PLAYER::PLAYER_PED_ID(), isBlocked, sub_179027());
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0xD5BB4025AE449A4E(System.Int32,System.String,System.Single)">
            <summary>
            p0 - PLAYER::PLAYER_PED_ID();
            p1 - Phase, Wobble, x_axis,y_axis,introphase,speed.
            p2 - From what i can see it goes up to 1f (maybe).
            
            -LcGamingHD
            
            Example: AI::_D5BB4025AE449A4E(PLAYER::PLAYER_PED_ID(), Phase, 0.5);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0x19D1B791CB3670FE(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0x8C33220C8D78CA0D(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ai.Unknown._0x92C360B5F15D2302(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.App">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.App.AppClearBlock">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.App.AppCloseApp">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.App.AppCloseBlock">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.App.AppDataValid">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.App.AppDeleteAppData(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.App.AppGetDeletedFileStatus">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.App.AppGetFloat(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.App.AppGetInt(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.App.AppGetString(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.App.AppHasLinkedSocialClubAccount">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.App.AppHasSyncedData(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.App.AppSaveData">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.App.AppSetApp(System.String)">
            <summary>
            Called in the gamescripts like:
            APP::APP_SET_APP(car);
            APP::APP_SET_APP(dog);
            </summary>				
        </member>
        <member name="M:RAGE.Game.App.AppSetBlock(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.App.AppSetFloat(System.String,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.App.AppSetInt(System.String,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.App.AppSetString(System.String,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Audio">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Audio.StopStream">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.DynamicMixerRelatedFn(System.Int32,System.String,System.Single)">
            <summary>
            ADD_E (most likely ADD_ENTITY_)
            
            All found occurrences in b678d:
            pastebin.com/ceu67jz8
            
            Still not sure on the functionality of this native but it has something to do with dynamic mixer groups defined in dynamix.dat15
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.AddLineToConversation(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            NOTE: ones that are -1, 0 - 35 are determined by a function where it gets a TextLabel from a global then runs,
            _GET_TEXT_SUBSTRING and depending on what the result is it goes in check order of 0 - 9 then A - Z then z (lowercase). So it will then return 0 - 35 or -1 if its z. The func to handle that ^^ is func_67 in dialog_handler.c atleast in TU27 Xbox360 scripts.
            
            p0 is -1, 0 - 35
            p1 is a char or string (whatever you wanna call it)
            p2 is Global 10597 + i  6. i is a while(i  70) loop
            p3 is again -1, 0 - 35 
            p4 is again -1, 0 - 35 
            p5 is either 0 or 1 (bool ?)
            p6 is either 0 or 1 (The func to determine this is bool)
            p7 is either 0 or 1 (The func to determine this is bool)
            p8 is either 0 or 1 (The func to determine this is bool)
            p9 is 0 - 3 (Determined by func_60 in dialogue_handler.c)
            p10 is either 0 or 1 (The func to determine this is bool)
            p11 is either 0 or 1 (The func to determine this is bool)
            p12 is unknown as in TU27 X360 scripts it only goes to p11.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.AddPedToConversation(System.Int32,System.Int32,System.String)">
            <summary>
            4 calls in the b617d scripts. The only one with p0 and p2 in clear text:
            
            AUDIO::ADD_PED_TO_CONVERSATION(5, l_AF, DINAPOLI);
            
            =================================================
            One of the 2 calls in dialogue_handler.c p0 is in a while-loop, and so is determined to also possibly be 0 - 15.
            Based on it asking if does_entity_exist for the global I have determined that p1 is, in fact, the ped, but could be wrong.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.AudioIsScriptedMusicPlaying">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.BlipSiren(System.Int32)">
            <summary>
            Plays the siren sound of a vehicle which is otherwise activated when fastly double-pressing the horn key.
            Only works on vehicles with a police siren.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.DisablePoliceReports">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.CancelMusicEvent(System.String)">
            <summary>
            All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsVehicleRadioLoud(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.ClearAllBrokenGlass">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.ClearAmbientZoneListState(System.Int32@,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.ClearAmbientZoneState(System.String,System.Boolean)">
            <summary>
            This function also has a p2, unknown. Signature AUDIO::CLEAR_AMBIENT_ZONE_STATE(const char zoneName, bool p1, Any p2);
            
            Still needs more research. 
            
            Here are the names Ive found: pastebin.com/AfA0Qjyv
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.CreateNewScriptedConversation">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.DisablePedPainAudio(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.ForceAmbientSiren(System.Boolean)">
            <summary>
            if value is set to true, and ambient siren sound will be played.
            
            -------------------------------------------------------------------------
            
            Appears to enable/disable an audio flag.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.CanPedSpeak(System.Int32,System.String,System.Boolean)">
            <summary>
            Checks if the ped can play the speech or has the speech file, last parameter is usually 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.FindRadioStationIndex(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetVehicleAudio(System.Int32,System.String)">
            <summary>
            This native sets the audio of the specified vehicle to the audioName (p1).
            
            Use the audioNameHash found in vehicles.meta
            
            Example:
            _SET_VEHICLE_AUDIO(veh, ADDER);
            The selected vehicle will now have the audio of the Adder.
            
            FORCE_VEHICLE_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.FreezeRadioStation(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.GetAudibleMusicTrackTextId">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.GetCurrentScriptedConversationLine">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.GetMusicPlaytime">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.GetNetworkIdFromSoundId(System.Int32)">
            <summary>
            Could this be used alongside either, 
            SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES or _SET_NETWORK_ID_SYNC_TO_PLAYER to make it so other players can hear the sound while online? Itd be a bit troll-fun to be able to play the Zancudo UFO creepy sounds globally.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.MaxRadioStationIndex">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.GetPlayerRadioStationGenre">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.GetPlayerRadioStationIndex">
            <summary>
            Returns 255 (radio off index) if the function fails.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.GetPlayerRadioStationName">
            <summary>
            Returns active radio station name
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.GetRadioStationName(System.Int32)">
            <summary>
            Returns String with radio station name.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.GetSoundId">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.GetSoundIdFromNetworkId(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.GetStreamPlayTime">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.GetVehicleDefaultHorn(System.Int32)">
            <summary>
            Returns hash of default vehicle horn
            
            Hash is stored in audVehicleAudioEntity
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.GetVehicleHornHash(System.Int32)">
            <summary>
            Seems to get the hash of the vehicles currently installed horn? 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.HasSoundFinished(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.HintAmbientAudioBank(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.HintScriptAudioBank(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetSynchronizedAudioEventPositionThisFrame(System.String,System.Int32)">
            <summary>
            Sets the position of the audio event to the entitys position for one frame(?)
            
            if (l_8C3 == 0) {
                sub_27fd1(0, -1, 1);
                if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(l_87D)) {
                    AUDIO::STOP_SYNCHRONIZED_AUDIO_EVENT(l_87D);
                }
                if (sub_7dd(l_A00)) {
                    AUDIO::_950A154B8DAB6185(PAP2_IG1_POPPYSEX, l_A00);
                }
                sub_91c(TK SETTING SYNCH SCENE AUDIO POSITION THIS FRAME TK);
                l_8C3 = 1;
            }
            
            --
            
            Found in the b617d scripts, duplicates removed: 
            
            AUDIO::_950A154B8DAB6185(CAR_5_IG_6, l_7FE1/1/);
            AUDIO::_950A154B8DAB6185(EX03_TRAIN_BIKE_LAND,   PLAYER::PLAYER_PED_ID());
            AUDIO::_950A154B8DAB6185(FBI_2_MCS_1_LeadIn, l_402/1/);
            AUDIO::_950A154B8DAB6185(FIN_C2_MCS_1, l_24C0/1/);
            AUDIO::_950A154B8DAB6185(MNT_DNC, l_5F);
            AUDIO::_950A154B8DAB6185(PAP2_IG1_POPPYSEX, l_A00);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.InterruptConversation(System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsAlarmPlaying(System.String)">
            <summary>
            Example:
            
            bool playing = AUDIO::IS_ALARM_PLAYING(PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsAmbientSpeechDisabled(System.Int32)">
            <summary>
            Common in the scripts:
            AUDIO::IS_AMBIENT_SPEECH_DISABLED(PLAYER::PLAYER_PED_ID());
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsAmbientSpeechPlaying(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsAmbientZoneEnabled(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsAnySpeechPlaying(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsAudioSceneActive(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsGameInControlOfMusic">
            <summary>
            Hardcoded to return 1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsHornActive(System.Int32)">
            <summary>
            Checks whether the horn of a vehicle is currently played.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsMissionCompletePlaying">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.GetNumberOfPassengerVoiceVariations(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsMobilePhoneCallOngoing">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsMobilePhoneRadioActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsPedInCurrentConversation(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsPedRingtonePlaying(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsPlayerVehicleRadioEnabled">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsRadioRetuning">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsScriptedConversationLoaded">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsScriptedConversationOngoing">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsScriptedSpeechPlaying(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.IsStreamPlaying">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.LoadStream(System.String,System.String)">
            <summary>
            Example:
            AUDIO::LOAD_STREAM(CAR_STEAL_1_PASSBY, CAR_STEAL_1_SOUNDSET);
            
            All found occurrences in the b678d decompiled scripts: pastebin.com/3rma6w5w
            
            Stream names often ends with _MASTER, _SMALL or _STREAM. Also _IN, _OUT and numbers.   
            
            soundSet is often set to 0 in the scripts. These are common to end the soundSets: _SOUNDS, _SOUNDSET and numbers. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.LoadStreamWithStartOffset(System.String,System.Int32,System.String)">
            <summary>
            Example:
            AUDIO::LOAD_STREAM_WITH_START_OFFSET(STASH_TOXIN_STREAM, 2400, FBI_05_SOUNDS);
            
            Only called a few times in the scripts. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.OverrideTrevorRage(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.OverrideUnderwaterStream(System.Int32@,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.OverrideVehHorn(System.Int32,System.Boolean,System.Int32)">
            <summary>
            vehicle - the vehicle whose horn should be overwritten
            mute - p1 seems to be an option for muting the horn
            p2 - maybe a horn id, since the function AUDIO::GET_VEHICLE_DEFAULT_HORN(veh) exists?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PauseScriptedConversation(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlayAmbientSpeechAtCoords(System.String,System.String,System.Single,System.Single,System.Single,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlayEndCreditsMusic(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlayMissionCompleteAudio(System.String)">
            <summary>
             Called 38 times in the scripts. There are 5 different audioNames used. 
             One unknown removed below. 
            
             AUDIO::PLAY_MISSION_COMPLETE_AUDIO(DEAD);
             AUDIO::PLAY_MISSION_COMPLETE_AUDIO(FRANKLIN_BIG_01);
             AUDIO::PLAY_MISSION_COMPLETE_AUDIO(GENERIC_FAILED);
             AUDIO::PLAY_MISSION_COMPLETE_AUDIO(TREVOR_SMALL_01);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlayPain(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Needs another parameter int p2. The signature is PED::PLAY_PAIN(Ped ped, int painID, int p1, int p2);
            
            Last 2 parameters always seem to be 0.
            
            EX: Function.Call(Hash.PLAY_PAIN, TestPed, 6, 0, 0);
            
            Known Pain IDs
            ________________________
            
            1 - Doesnt seem to do anything. Does NOT crash the game like previously said. (Latest patch)
            6 - Scream (Short)
            7 - Scared Scream (Kinda Long)
            8 - On Fire
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlayAmbientSpeech2(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Plays ambient speech. See also _0x5C57B85D.
            
            See _PLAY_AMBIENT_SPEECH1 for parameter specifications.
            
            Full list of speeches and voices names by alexguirre: gist.github.com/alexguirre/0af600eb3d4c91ad4f900120a63b8992
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlayAmbientSpeech1(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Plays ambient speech. See also _0x444180DB.
            
            ped: The ped to play the ambient speech.
            speechName: Name of the speech to play, eg. GENERIC_HI.
            speechParam: Can be one of the following:
            SPEECH_PARAMS_STANDARD
            SPEECH_PARAMS_ALLOW_REPEAT
            SPEECH_PARAMS_BEAT
            SPEECH_PARAMS_FORCE
            SPEECH_PARAMS_FORCE_FRONTEND
            SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND
            SPEECH_PARAMS_FORCE_NORMAL
            SPEECH_PARAMS_FORCE_NORMAL_CLEAR
            SPEECH_PARAMS_FORCE_NORMAL_CRITICAL
            SPEECH_PARAMS_FORCE_SHOUTED
            SPEECH_PARAMS_FORCE_SHOUTED_CLEAR
            SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL
            SPEECH_PARAMS_FORCE_PRELOAD_ONLY
            SPEECH_PARAMS_MEGAPHONE
            SPEECH_PARAMS_HELI
            SPEECH_PARAMS_FORCE_MEGAPHONE
            SPEECH_PARAMS_FORCE_HELI
            SPEECH_PARAMS_INTERRUPT
            SPEECH_PARAMS_INTERRUPT_SHOUTED
            SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR
            SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL
            SPEECH_PARAMS_INTERRUPT_NO_FORCE
            SPEECH_PARAMS_INTERRUPT_FRONTEND
            SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND
            SPEECH_PARAMS_ADD_BLIP
            SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT
            SPEECH_PARAMS_ADD_BLIP_FORCE
            SPEECH_PARAMS_ADD_BLIP_SHOUTED
            SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE
            SPEECH_PARAMS_ADD_BLIP_INTERRUPT
            SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE
            SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED
            SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR
            SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL
            SPEECH_PARAMS_SHOUTED
            SPEECH_PARAMS_SHOUTED_CLEAR
            SPEECH_PARAMS_SHOUTED_CRITICAL
            
            Note: A list of Name and Parameters can be found here pastebin.com/1GZS5dCL
            
            Full list of speeches and voices names by some spanish shitbag: gist.github.com/alexguirre/0af600eb3d4c91ad4f900120a63b8992
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlayAmbientSpeechWithVoice(System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            This is the same as _PLAY_AMBIENT_SPEECH1 and _PLAY_AMBIENT_SPEECH2 but it will allow you to play a speech file from a specific voice file. It works on players and all peds, even animals.
            
            EX (C#):
            GTA.Native.Function.Call(Hash._0x3523634255FC3318, Game.Player.Character, GENERIC_INSULT_HIGH, s_m_y_sheriff_01_white_full_01, SPEECH_PARAMS_FORCE_SHOUTED, 0);
            
            The first param is the ped you want to play it on, the second is the speech name, the third is the voice name, the fourth is the speech param, and the last param is usually always 0.
            
            Full list of speeches and voices names by alexguirre: gist.github.com/alexguirre/0af600eb3d4c91ad4f900120a63b8992
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlayPedRingtone(System.String,System.Int32,System.Boolean)">
            <summary>
            All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/RFb4GTny
            
            AUDIO::PLAY_PED_RINGTONE(Remote_Ring, PLAYER::PLAYER_PED_ID(), 1);
            AUDIO::PLAY_PED_RINGTONE(Dial_and_Remote_Ring, PLAYER::PLAYER_PED_ID(), 1);
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlayPoliceReport(System.String,System.Single)">
            <summary>
            Please change to void. (Does not return anything!)
            
            Plays the given police radio message.
            
            All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/GBnsQ5hr
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlaySound(System.Int32,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/A8Ny8AHZ
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlaySoundFromCoord(System.Int32,System.String,System.Single,System.Single,System.Single,System.String,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/eeFc5DiW
            
            gtaforums.com/topic/795622-audio-for-mods
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlaySoundFromEntity(System.Int32,System.String,System.Int32,System.String,System.Boolean,System.Int32)">
            <summary>
            All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/f2A7vTj0 
            No changes made in b678d.
            
            gtaforums.com/topic/795622-audio-for-mods
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlaySoundFrontend(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            list: pastebin.com/DCeRiaLJ
            
            All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/0neZdsZ5
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlayStreamFromObject(System.Int32)">
            <summary>
            Used with AUDIO::LOAD_STREAM
            
            Example from finale_heist2b.c4:
            AI::TASK_SYNCHRONIZED_SCENE(l_4C82/14/, l_4C82/14/._f7, l_30A, push_out_vault_l, 4.0, -1.5, 5, 713, 4.0, 0);
                                PED::SET_SYNCHRONIZED_SCENE_PHASE(l_4C82/14/._f7, 0.0);
                                PED::_2208438012482A1A(l_4C82/14/, 0, 0);
                                PED::SET_PED_COMBAT_ATTRIBUTES(l_4C82/14/, 38, 1);
                                PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(l_4C82/14/, 1);
                                if (AUDIO::LOAD_STREAM(Gold_Cart_Push_Anim_01, BIG_SCORE_3B_SOUNDS)) {
                                    AUDIO::PLAY_STREAM_FROM_OBJECT(l_36F0/1/);
                                }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlayStreamFromPed(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlayStreamFromPosition(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlayStreamFromVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlayStreamFrontend">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlaySynchronizedAudioEvent(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlayVehicleDoorCloseSound(System.Int32,System.Int32)">
            <summary>
            This native only comes up once. And in that one instance, p1 is 1.
            -xNITEMAREx
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PlayVehicleDoorOpenSound(System.Int32,System.Int32)">
            <summary>
            p1 appears to only be 0 or 3. I personally use 0 as p1.
            -xNITEMAREx
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PreloadScriptConversation(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PreloadScriptPhoneConversation(System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PrepareAlarm(System.String)">
            <summary>
            Example:
            
            bool prepareAlarm = AUDIO::PREPARE_ALARM(PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PrepareMusicEvent(System.String)">
            <summary>
            All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PrepareSynchronizedAudioEvent(System.String,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.PrepareSynchronizedAudioEventForScene(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.ReleaseMissionAudioBank">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.ReleaseAmbientAudioBank">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.ReleaseScriptAudioBank">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.ReleaseSoundId(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.RequestMissionAudioBank(System.String,System.Boolean,System.Int32)">
            <summary>
             All occurrences and usages found in b617d: pastebin.com/NzZZ2Tmm
             
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.RequestAmbientAudioBank(System.String,System.Boolean,System.Int32)">
            <summary>
            All occurrences and usages found in b617d, sorted alphabetically and identical lines removed: pastebin.com/XZ1tmGEz
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.RequestScriptAudioBank(System.String,System.Boolean,System.Int32)">
            <summary>
            All occurrences and usages found in b617d, sorted alphabetically and identical lines removed: pastebin.com/AkmDAVn6
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetPedTalk(System.Int32)">
            <summary>
            Speech related.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.ResetPedAudioFlags(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.ResetTrevorRage">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetAggressiveHorns(System.Boolean)">
            <summary>
            Makes pedestrians sound their horn longer, faster and more agressive when they use their horn.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetAmbientVoiceName(System.Int32,System.String)">
            <summary>
            Audio List
            gtaforums.com/topic/795622-audio-for-mods/
            
            All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/FTeAj4yZ
            
            Yes
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetAmbientZoneListState(System.Int32@,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetAmbientZoneListStatePersistent(System.String,System.Boolean,System.Boolean)">
            <summary>
            All occurrences found in b617d, sorted alphabetically and identical lines removed: pastebin.com/WkXDGgQL
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetAmbientZoneState(System.Int32@,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetAmbientZoneStatePersistent(System.String,System.Boolean,System.Boolean)">
            <summary>
             All occurrences found in b617d, sorted alphabetically and identical lines removed: pastebin.com/jYvw7N1S
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetAnimalMood(System.Int32,System.Int32)">
            <summary>
            mood can be 0 or 1 (its not a boolean value!). Effects audio of the animal.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetAudioFlag(System.String,System.Boolean)">
            <summary>
            Possible flag names:
            ActivateSwitchWheelAudio
            AllowAmbientSpeechInSlowMo
            AllowCutsceneOverScreenFade
            AllowForceRadioAfterRetune
            AllowPainAndAmbientSpeechToPlayDuringCutscene
            AllowPlayerAIOnMission
            AllowPoliceScannerWhenPlayerHasNoControl
            AllowRadioDuringSwitch
            AllowRadioOverScreenFade
            AllowScoreAndRadio
            AllowScriptedSpeechInSlowMo
            AvoidMissionCompleteDelay
            DisableAbortConversationForDeathAndInjury
            DisableAbortConversationForRagdoll
            DisableBarks
            DisableFlightMusic
            DisableReplayScriptStreamRecording
            EnableHeadsetBeep
            ForceConversationInterrupt
            ForceSeamlessRadioSwitch
            ForceSniperAudio
            FrontendRadioDisabled
            HoldMissionCompleteWhenPrepared
            IsDirectorModeActive
            IsPlayerOnMissionForSpeech
            ListenerReverbDisabled
            LoadMPData
            MobileRadioInGame
            OnlyAllowScriptTriggerPoliceScanner
            PlayMenuMusic
            PoliceScannerDisabled
            ScriptedConvListenerMaySpeak
            SpeechDucksScore
            SuppressPlayerScubaBreathing
            WantedMusicDisabled
            WantedMusicOnMission
            
            -------------------------------
            No added flag names between b393d and b573d, including b573d.
            
            #######################################################################
            
            IsDirectorModeActive is an audio flag which will allow you to play speech infinitely without any pauses like in Director Mode.
            
            -----------------------------------------------------------------------
            
            All flag IDs and hashes:
            
            ID: 01 ORHash: 0x20A7858F
            ID: 02 ORHash: 0xA11C2259
            ID: 03 ORHash: 0x08DE4700
            ID: 04 ORHash: 0x989F652F
            ID: 05 ORHash: 0x3C9E76BA
            ID: 06 ORHash: 0xA805FEB0
            ID: 07 ORHash: 0x4B94EA26
            ID: 08 ORHash: 0x803ACD34
            ID: 09 ORHash: 0x7C741226
            ID: 10 ORHash: 0x31DB9EBD
            ID: 11 ORHash: 0xDF386F18
            ID: 12 ORHash: 0x669CED42
            ID: 13 ORHash: 0x51F22743
            ID: 14 ORHash: 0x2052B35C
            ID: 15 ORHash: 0x071472DC
            ID: 16 ORHash: 0xF9928BCC
            ID: 17 ORHash: 0x7ADBDD48
            ID: 18 ORHash: 0xA959BA1A
            ID: 19 ORHash: 0xBBE89B60
            ID: 20 ORHash: 0x87A08871
            ID: 21 ORHash: 0xED1057CE
            ID: 22 ORHash: 0x1584AD7A
            ID: 23 ORHash: 0x8582CFCB
            ID: 24 ORHash: 0x7E5E2FB0
            ID: 25 ORHash: 0xAE4F72DB
            ID: 26 ORHash: 0x5D16D1FA
            ID: 27 ORHash: 0x06B2F4B8
            ID: 28 ORHash: 0x5D4CDC96
            ID: 29 ORHash: 0x8B5A48BA
            ID: 30 ORHash: 0x98FBD539
            ID: 31 ORHash: 0xD8CB0473
            ID: 32 ORHash: 0x5CBB4874
            ID: 33 ORHash: 0x2E9F93A9
            ID: 34 ORHash: 0xD93BEA86
            ID: 35 ORHash: 0x92109B7D
            ID: 36 ORHash: 0xB7EC9E4D
            ID: 37 ORHash: 0xCABDBB1D
            ID: 38 ORHash: 0xB3FD4A52
            ID: 39 ORHash: 0x370D94E5
            ID: 40 ORHash: 0xA0F7938F
            ID: 41 ORHash: 0xCBE1CE81
            ID: 42 ORHash: 0xC27F1271
            ID: 43 ORHash: 0x9E3258EB
            ID: 44 ORHash: 0x551CDA5B
            ID: 45 ORHash: 0xCB6D663C
            ID: 46 ORHash: 0x7DACE87F
            ID: 47 ORHash: 0xF9DE416F
            ID: 48 ORHash: 0x882E6E9E
            ID: 49 ORHash: 0x16B447E7
            ID: 50 ORHash: 0xBD867739
            ID: 51 ORHash: 0xA3A58604
            ID: 52 ORHash: 0x7E046BBC
            ID: 53 ORHash: 0xD95FDB98
            ID: 54 ORHash: 0x5842C0ED
            ID: 55 ORHash: 0x285FECC6
            ID: 56 ORHash: 0x9351AC43
            ID: 57 ORHash: 0x50032E75
            ID: 58 ORHash: 0xAE6D0D59
            ID: 59 ORHash: 0xD6351785
            ID: 60 ORHash: 0xD25D71BC
            ID: 61 ORHash: 0x1F7F6423
            ID: 62 ORHash: 0xE24C3AA6
            ID: 63 ORHash: 0xBFFDD2B7
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetAudioSceneVariable(System.String,System.String,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetAudioVehiclePriority(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetCutsceneAudioOverride(System.String)">
            <summary>
            All occurrences found in b617d, sorted alphabetically and identical lines removed: 
            
            AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE(_AK);
            AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE(_CUSTOM);
            AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE(_TOOTHLESS);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetEmitterRadioStation(System.String,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetFrontendRadioActive(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetGpsActive(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetHornEnabled(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SoundVehicleHornThisFrame(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetInitialPlayerStation(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetMicrophonePosition(System.Boolean,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            If this is the correct name, what microphone? I know your TV isnt going to reach out and adjust your headset so..
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetMobilePhoneRadioState(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetMobileRadioEnabledDuringGameplay(System.Boolean)">
            <summary>
            Enables Radio on phone.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetPedIsDrunk(System.Int32,System.Boolean)">
            <summary>
            Sets the ped drunk sounds.  Only works with PLAYER_PED_ID
            
            ====================================================
            
            As mentioned above, this only sets the drunk sound to ped/player.
            
            To give the Ped a drunk effect with drunk walking animation try using SET_PED_MOVEMENT_CLIPSET
            
            Below is an example
            
            if (!Function.Callbool(Hash.HAS_ANIM_SET_LOADED, move_m@drunk@verydrunk))
                            {
                                Function.Call(Hash.REQUEST_ANIM_SET, move_m@drunk@verydrunk);
                            }
                            Function.Call(Hash.SET_PED_MOVEMENT_CLIPSET, Ped.Handle, move_m@drunk@verydrunk, 0x3E800000);
            
            
            
            And to stop the effect use
            RESET_PED_MOVEMENT_CLIPSET
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetPedScream(System.Int32)">
            <summary>
            Assigns some ambient voice to the ped.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetPlayerAngry(System.Int32,System.Boolean)">
            <summary>
            Hash collision! Disables speech.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetRadioAutoUnfreeze(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetRadioToStationIndex(System.Int32)">
            <summary>
            Sets radio station by index.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetRadioToStationName(System.String)">
            <summary>
            For a full list, see here: pastebin.com/Kj9t38KF
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetRadioTrack(System.String,System.String)">
            <summary>
            Only found this one in the decompiled scripts:
            
            AUDIO::SET_RADIO_TRACK(RADIO_03_HIPHOP_NEW, ARM1_RADIO_STARTS);
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetSirenWithNoDriver(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetStaticEmitterEnabled(System.String,System.Boolean)">
            <summary>
            Example:
            AUDIO::SET_STATIC_EMITTER_ENABLED((Any)LOS_SANTOS_VANILLA_UNICORN_01_STAGE, false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any)LOS_SANTOS_VANILLA_UNICORN_02_MAIN_ROOM, false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any)LOS_SANTOS_VANILLA_UNICORN_03_BACK_ROOM, false);
            
            This turns off surrounding sounds not connected directly to peds. 
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetUserRadioControlEnabled(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetVariableOnSound(System.Int32,System.Int32@,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetVariableOnStream(System.String,System.Single)">
            <summary>
            From the scripts, p0:
            
            ArmWrestlingIntensity,
            INOUT,
            Monkey_Stream,
            ZoomLevel
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.GetPlayerHeadsetSoundAlternate(System.String,System.Single)">
            <summary>
            Called 5 times in the scripts. All occurrences found in b617d, sorted alphabetically and identical lines removed: 
            
            AUDIO::GET_PLAYER_HEADSET_SOUND_ALTERNATE(INOUT, 0.0);
            AUDIO::GET_PLAYER_HEADSET_SOUND_ALTERNATE(INOUT, 1.0);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetVehicleBoostActive(System.Int32,System.Boolean)">
            <summary>
            SET_VEHICLE_BOOST_ACTIVE(vehicle, 1, 0);
            SET_VEHICLE_BOOST_ACTIVE(vehicle, 0, 0); 
            
            Will give a boost-soundeffect.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetVehicleRadioEnabled(System.Int32,System.Boolean)">
            <summary>
            cant seem to enable radio on cop cars etc
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetVehicleRadioLoud(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetVehRadioStation(System.Int32,System.String)">
            <summary>
            For a full list, see here: pastebin.com/Kj9t38KF
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SkipRadioForward">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SkipToNextScriptedConversationLine">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.StartAlarm(System.String,System.Boolean)">
            <summary>
            Example:
            
            This will start the alarm at Fort Zancudo.
            
            AUDIO::START_ALARM(PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS, 1);
            
            First parameter (char) is the name of the alarm.
            Second parameter (bool) is unknown, it does not seem to make a difference if this one is 0 or 1.
            
            ----------
            
            It DOES make a difference but it has to do with the duration or something I dunno yet
            
            ----------
            
             Found in the b617d scripts:
            
             AUDIO::START_ALARM(AGENCY_HEIST_FIB_TOWER_ALARMS, 0);
             AUDIO::START_ALARM(AGENCY_HEIST_FIB_TOWER_ALARMS_UPPER, 1);
             AUDIO::START_ALARM(AGENCY_HEIST_FIB_TOWER_ALARMS_UPPER_B, 0);
             AUDIO::START_ALARM(BIG_SCORE_HEIST_VAULT_ALARMS, a_0);
             AUDIO::START_ALARM(FBI_01_MORGUE_ALARMS, 1);
             AUDIO::START_ALARM(FIB_05_BIOTECH_LAB_ALARMS, 0);
             AUDIO::START_ALARM(JEWEL_STORE_HEIST_ALARMS, 0);
             AUDIO::START_ALARM(PALETO_BAY_SCORE_ALARM, 1);
             AUDIO::START_ALARM(PALETO_BAY_SCORE_CHICKEN_FACTORY_ALARM, 0);
             AUDIO::START_ALARM(PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS, 1);
             AUDIO::START_ALARM(PORT_OF_LS_HEIST_SHIP_ALARMS, 0);
             AUDIO::START_ALARM(PRISON_ALARMS, 0);
             AUDIO::START_ALARM(PROLOGUE_VAULT_ALARMS, 0);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.StartAudioScene(System.String)">
            <summary>
            Used to prepare a scene where the surrounding sound is muted or a bit changed. This does not play any sound.
            
            List of all usable scene names found in b617d. Sorted alphabetically and identical names removed: pastebin.com/MtM9N9CC
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.StartPreloadedConversation">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.RestartScriptedConversation">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.StartScriptConversation(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.StartScriptPhoneConversation(System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.StopAlarm(System.String,System.Boolean)">
            <summary>
            Example:
            
            This will stop the alarm at Fort Zancudo.
            
            AUDIO::STOP_ALARM(PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS, 1);
            
            First parameter (char) is the name of the alarm.
            Second parameter (bool) has to be true (1) to have any effect.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.StopAllAlarms(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.StopAudioScene(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.StopAudioScenes">
            <summary>
            ??
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.StopCurrentPlayingAmbientSpeech(System.Int32)">
            <summary>
            Needs to be called every frame. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.SetPedMute(System.Int32)">
            <summary>
            Stops speech.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.StopPedRingtone(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.StopPedSpeaking(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.StopScriptedConversation(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.StopSound(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.StopSynchronizedAudioEvent(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.TriggerMusicEvent(System.String)">
            <summary>
            List of all usable event names found in b617d used with this native. Sorted alphabetically and identical names removed: pastebin.com/RzDFmB1W
            
            All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.UnfreezeRadioStation(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.ReleaseNamedScriptAudioBank(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.UnlockMissionNewsStory(System.Int32)">
            <summary>
            I see this as a native that would of been used back in GTA III when you finally unlocked the bridge to the next island and such.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.UseSirenAsHorn(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.RegisterScriptWithAudio(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.UnregisterScriptWithAudio">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xD01005D2BA2EB778(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x3D120012440E6683">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xF154B8D1775B2DEC(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x1654F24A88A8E3FE(System.String)">
            <summary>
            3 calls in the b617d scripts, removed duplicate.
            
            AUDIO::_1654F24A88A8E3FE(RADIO_16_SILVERLAKE);
            AUDIO::_1654F24A88A8E3FE(RADIO_01_CLASS_ROCK);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xDDC635D5B3262C56(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x109697E2FFBAC8A1">
            <summary>
            Not sure what this function does, but its related to the audio of the local players vehicle (Considering the surrounding natives, its probably radio related).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xC15907D667F7CFB2(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xB81CF134AEB56FFB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x2BE4BC731D039D5A(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x1C073274E065C6D2(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x062D5EAD4DA2FA6A">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xD57AAAE0E2214D11">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x5E203DA2BA15D436(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xE73364DB90778FFA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x3A48AB4445D499BE">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xAA19F5572C38B564(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x544810ED9DB6BBE6">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x5B50ABB1FE3746F4">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x40763EA7B9B783E7(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xC8EDE9BDBCCBA6D4(System.Int32@,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x8A694D7A68F8DC38(System.Int32,System.String,System.String)">
            <summary>
            One call found in the b617d scripts:
            
            AUDIO::_8A694D7A68F8DC38(NETWORK::NET_TO_PED(l_3989._f26F0/1/), CONV_INTERRUPT_QUIT_IT, LESTER);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xC265DF9FB44A9FBD(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x6F259F82D873B8B8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xC8B1B2425604CDD0">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xA097AB275061FB21">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x0626A247D2405330">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x5DB8010EE71FDEF2(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x0BE4BE946463F917(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x651D3228960D08AF(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x75773E11BA459E90(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xD2CC78CD3D0B50F9(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xEE066C7006C49C0A(System.Int32,System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xCADA5A0D0702381E(System.String,System.String)">
            <summary>
            Only call found in the b617d scripts:
            
            AUDIO::_CADA5A0D0702381E(BACK, HUD_FREEMODE_SOUNDSET);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x5B9853296731E88D(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xCA4CEA6AE0000A7E(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xFBE20329593DEC9D(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x5D2BFAAB8D956E0E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x19AF7ED9B9D23058">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x9AC92EED5E4793AB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xCE4AC0439F607045">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x18EB48CFC41F2EA0(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xB4BBFD9CD8B3922B(System.String)">
            <summary>
             Found in the b617d scripts, duplicates removed: 
            
             AUDIO::_B4BBFD9CD8B3922B(V_CARSHOWROOM_PS_WINDOW_UNBROKEN);
             AUDIO::_B4BBFD9CD8B3922B(V_CIA_PS_WINDOW_UNBROKEN);
             AUDIO::_B4BBFD9CD8B3922B(V_DLC_HEIST_APARTMENT_DOOR_CLOSED);
             AUDIO::_B4BBFD9CD8B3922B(V_FINALEBANK_PS_VAULT_INTACT);
             AUDIO::_B4BBFD9CD8B3922B(V_MICHAEL_PS_BATHROOM_WITH_WINDOW);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xD2DCCD8E16E20997(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x70B8EC8FC108A634(System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x9A53DED9921DE990(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xA5F377B175A699C5(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x12561FCBB62D5B9C(System.Int32)">
            <summary>
            p0 is usually 0. sometimes 2. Not sure what this does.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x0B568201DD99F0EB(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x61631F5DF50D1C34(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x4E404A9361F75BB2(System.String,System.String,System.Boolean)">
            <summary>
            Examples:
            
            AUDIO::_4E404A9361F75BB2(RADIO_01_CLASS_ROCK, END_CREDITS_KILL_MICHAEL, 1);
            AUDIO::_4E404A9361F75BB2(RADIO_01_CLASS_ROCK, END_CREDITS_KILL_MICHAEL, 1);
            AUDIO::_4E404A9361F75BB2(RADIO_01_CLASS_ROCK, END_CREDITS_KILL_TREVOR, 1);
            AUDIO::_4E404A9361F75BB2(RADIO_01_CLASS_ROCK, END_CREDITS_SAVE_MICHAEL_TREVOR, 1);
            AUDIO::_4E404A9361F75BB2(RADIO_01_CLASS_ROCK, OFF_ROAD_RADIO_ROCK_LIST, 1);
            AUDIO::_4E404A9361F75BB2(RADIO_06_COUNTRY, MAGDEMO2_RADIO_DINGHY, 1);
            AUDIO::_4E404A9361F75BB2(RADIO_16_SILVERLAKE, SEA_RACE_RADIO_PLAYLIST, 1);
            AUDIO::_4E404A9361F75BB2(RADIO_01_CLASS_ROCK, OFF_ROAD_RADIO_ROCK_LIST, 1);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x892B6AB8F33606F5(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x159B7318403A1CD8(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x9D3AF56E94C9AE98(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xB542DE8C3D1CB210(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xA5342D390CDA41D6(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x8BF907833BE275DE(System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x1B7ABE26CBCBF8C7(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x7CDC8C3B89F661B3(System.Int32,System.UInt32)">
            <summary>
            From the scripts:
            
            AUDIO::_7CDC8C3B89F661B3(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(PAIGE_PVG));
                            AUDIO::_7CDC8C3B89F661B3(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(TALINA_PVG));
                        AUDIO::_7CDC8C3B89F661B3(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(FEMALE_LOST_BLACK_PVG));
                        AUDIO::_7CDC8C3B89F661B3(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(FEMALE_LOST_WHITE_PVG));
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x149AEE66F0CB3A99(System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x6FDDAD856E36988A(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x044DBAD7A7FA2BE5(System.String,System.String)">
            <summary>
            Found in the b617d scripts, duplicates removed:  
            
            AUDIO::_044DBAD7A7FA2BE5(V_CARSHOWROOM_PS_WINDOW_UNBROKEN, V_CARSHOWROOM_PS_WINDOW_BROKEN);
            
             AUDIO::_044DBAD7A7FA2BE5(V_CIA_PS_WINDOW_UNBROKEN, V_CIA_PS_WINDOW_BROKEN);
            
             AUDIO::_044DBAD7A7FA2BE5(V_DLC_HEIST_APARTMENT_DOOR_CLOSED, V_DLC_HEIST_APARTMENT_DOOR_OPEN);
            
             AUDIO::_044DBAD7A7FA2BE5(V_FINALEBANK_PS_VAULT_INTACT, V_FINALEBANK_PS_VAULT_BLOWN);
            
             AUDIO::_044DBAD7A7FA2BE5(V_MICHAEL_PS_BATHROOM_WITH_WINDOW, V_MICHAEL_PS_BATHROOM_WITHOUT_WINDOW);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xDA07819E452FFE8F(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x33E3C6C6F2F0B506(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x2C96CDB04FCA358E(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xDD6BCF9E94425DF9">
            <summary>
            Tune Backwards... ?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xFF266D1D0EB1195D">
            <summary>
            Tune Forward... ?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x774BD811F656A122(System.String,System.Boolean)">
            <summary>
            6 calls in the b617d scripts, removed identical lines:
            
            AUDIO::_774BD811F656A122(RADIO_01_CLASS_ROCK, 1);
            AUDIO::_774BD811F656A122(AUDIO::GET_RADIO_STATION_NAME(10), 0);
            AUDIO::_774BD811F656A122(AUDIO::GET_RADIO_STATION_NAME(10), 1);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x06C0023BED16DD6B(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x43FA0DFC5DF87815(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xBEF34B1D9624D5DD(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x733ADF241531E5C2(System.String,System.Single)">
            <summary>
            AUDIO::_733ADF241531E5C2(inTunnel, 1.0);
            AUDIO::_733ADF241531E5C2(inTunnel, 0.0);
            
            I do not know as of yet what this does, but this was found in the scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x01BB4D577D38BD9E(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x59E7B488451F4D3A(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x58BB377BEC7CD5F4(System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xF3365489E0DD50F9(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xF1F8157B8C3F171C(System.Int32,System.String,System.String)">
            <summary>
            2 calls found in the b617d scripts:
            
            AUDIO::_F1F8157B8C3F171C(l_A42, Franklin_Bike_Rev, BIG_SCORE_3A_SOUNDS);
            AUDIO::_F1F8157B8C3F171C(l_166, Trevor_Revs_Off, PALETO_SCORE_SETUP_SOUNDS);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xC1805D05E6D4FE10(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x806058BBDC136E06">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xE4E6DD5566D28C82">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x11579D940949C49E(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x031ACB6ABA18C729(System.String,System.String)">
            <summary>
            2 calls in the b617d scripts. This line is called 2 times:
            AUDIO::_031ACB6ABA18C729(RADIO_16_SILVERLAKE, MIRRORPARK_LOCKED);
            
            Note: Another name for RADIO_16_SILVERLAKE is RADIO MIRROR PARK
            </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x0150B6FF25A9E2E5">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x7EC3C679D0E7E46B(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0xBF4DC1784BE94DFA(System.Int32,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Audio.Unknown._0x02E93C796ABD3A97(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Cam">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Cam.AddCamSplineNode(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            I filled p1-p6 (the floats) as they are as other natives with 6 floats in a row are similar and I see no other method. So if a test from anyone proves them wrong please correct.
            
            p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one
            
            p8 big values ~100 will slow down the camera movement before reaching this node
            
            p9 != 0 seems to override the rotation/pitch (bool?)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.AnimatedShakeCam(System.Int32,System.String,System.String,System.String,System.Single)">
            <summary>
            Example from michael2 script.
            
            CAM::ANIMATED_SHAKE_CAM(l_5069, shake_cam_all@, light, , 1f);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.AttachCamToEntity(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Last param determines if its relative to the Entity
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.AttachCamToPedBone(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.StopCutsceneCamShaking">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.CreateCam(System.String,System.Boolean)">
            <summary>
            DEFAULT_SCRIPTED_CAMERA
            DEFAULT_ANIMATED_CAMERA
            DEFAULT_SPLINE_CAMERA
            DEFAULT_SCRIPTED_FLY_CAMERA
            TIMED_SPLINE_CAMERA
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.CreateCamera(System.UInt32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.CreateCameraWithParams(System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Int32)">
            <summary>
            CAM::_GET_GAMEPLAY_CAM_COORDS can be used instead of posX,Y,Z
            CAM::_GET_GAMEPLAY_CAM_ROT can be used instead of rotX,Y,Z
            CAM::_80EC114669DAEFF4() can be used instead of p7 (Possible p7 is FOV parameter. )
            p8 ???
            p9 uses 2 by default
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.CreateCamWithParams(System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Int32)">
            <summary>
            camName is always set to DEFAULT_SCRIPTED_CAMERA in Rockstars scripts.
            ------------
            Camera names found in the b617d scripts:
            DEFAULT_ANIMATED_CAMERA
            DEFAULT_SCRIPTED_CAMERA
            DEFAULT_SCRIPTED_FLY_CAMERA
            DEFAULT_SPLINE_CAMERA
            ------------
            Side Note: It seems p8 is basically to represent what would be the bool p1 within CREATE_CAM native. As well as the p9 since its always 2 in scripts seems to represent what would be the last param within SET_CAM_ROT native which normally would be 2.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.CreateCinematicShot(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.DestroyAllCams(System.Boolean)">
            <summary>
            BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.DestroyCam(System.Int32,System.Boolean)">
            <summary>
            BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.DetachCam(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.DisableAimCamThisUpdate">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.DisableVehicleFirstPersonCamThisFrame">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.EnableCrosshairThisFrame">
            <summary>
            Shows the crosshair even if it wouldnt show normally. Only works for one frame, so make sure to call it repeatedly.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.DisableFirstPersonCamThisFrame">
            <summary>
            Disables first person camera for the current frame.
            
            Found in decompiled scripts:
            GRAPHICS::DRAW_DEBUG_TEXT_2D(Disabling First Person Cam, 0.5, 0.8, 0.0, 0, 0, 255, 255);
            CAM::_DE2EF5DA284CC8DF();
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.DoesCamExist(System.Int32)">
            <summary>
            Returns whether or not the passed camera handle exists.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.DoScreenFadeIn(System.Int32)">
            <summary>
            Fades the screen in.
            
            duration: The time the fade should take, in milliseconds.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.DoScreenFadeOut(System.Int32)">
            <summary>
            Fades the screen out.
            
            duration: The time the fade should take, in milliseconds.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetCamAnimCurrentPhase(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetCamCoord(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetCamFarClip(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetCamFarDof(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetCamFov(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetCamNearClip(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetCamRot(System.Int32,System.Int32)">
            <summary>
            The last parameter, as in other ROT methods, is usually 2.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetCamSplineNodeIndex(System.Int32)">
            <summary>
            I named the beginning from Any to BOOL as this native is used in an if statement as well. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetCamSplineNodePhase(System.Int32)">
            <summary>
            Im pretty sure the parameter is the camera as usual, but I am not certain so Im going to leave it as is.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetCamSplinePhase(System.Int32)">
            <summary>
            Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.
            
            (returns 1.0f when no nodes has been added, reached end of non existing spline)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetGameplayCamCoords">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam._getGameplayCamRot(System.Int32)">
            <summary>
            p0 seems to consistently be 2 across scripts
            
            Function is called faily often by CAM::CREATE_CAM_WITH_PARAMS
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetGameplayCamZoom">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetFollowPedCamZoomLevel">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetFollowPedCamViewMode">
            <summary>
            Returns
            0 - Third Person Close
            1 - Third Person Mid
            2 - Third Person Far
            4 - First Person
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetFollowVehicleCamZoomLevel">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetFollowVehicleCamViewMode">
            <summary>
            Returns the type of camera:
            
            0 - Third Person Close
            1 - Third Person Mid
            2 - Third Person Far
            4 - First Person
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetGameplayCamCoord">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetGameplayCamFov">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetGameplayCamRelativeHeading">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetGameplayCamRelativePitch">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetGameplayCamRot(System.Int32)">
            <summary>
            p0 dosent seem to change much, I tried it with 0, 1, 2:
            0-Pitch(X): -70.000092
            0-Roll(Y): -0.000001
            0-Yaw(Z): -43.886459
            1-Pitch(X): -70.000092
            1-Roll(Y): -0.000001
            1-Yaw(Z): -43.886463
            2-Pitch(X): -70.000092
            2-Roll(Y): -0.000002
            2-Yaw(Z): -43.886467
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetRenderingCam">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsAimCamActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsCamActive(System.Int32)">
            <summary>
            Returns whether or not the passed camera handle is active.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsCamInterpolating(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsCamPlayingAnim(System.Int32,System.String,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsCamRendering(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsCamShaking(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsCamSplinePaused(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsCinematicCamRendering">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsCinematicCamShaking">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsInVehicleCamDisabled">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsCinematicShotActive(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsFirstPersonAimCamActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsFollowPedCamActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsFollowVehicleCamActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsGameplayCamLookingBehind">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsGameplayCamRendering">
            <summary>
            Examples when this function will return 0 are:
            - During busted screen.
            - When player is coming out from a hospital.
            - When player is coming out from a police station.
            - When player is buying gun from AmmuNation.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsGameplayCamShaking">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsGameplayHintActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsScreenFadedIn">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsScreenFadedOut">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsScreenFadingIn">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsScreenFadingOut">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsScriptGlobalShaking">
            <summary>
            In drunk_controller.c4, sub_309
            if (CAM::_C912AF078AF19212()) {
                CAM::_1C9D7949FA533490(0);
            }
            
            What does IS_SCRIPT_GLOBAL_SHAKING mean..? :/ Is this a hash collision?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.IsSphereVisible(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.OverrideCamSplineMotionBlur(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Max value for p1 is 15.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.OverrideCamSplineVelocity(System.Int32,System.Int32,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.PlayCamAnim(System.Int32,System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Int32)">
            <summary>
            Atleast one time in a script for the zRot Rockstar uses GET_ENTITY_HEADING to help fill the parameter.
            
            p9 is unknown at this time.
            p10 throughout all the X360 Scripts is always 2.
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.PlaySynchronizedCamAnim(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Examples:
            
            CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_2734, NETWORK::_02C40BF885C567B6(l_2739), PLAYER_EXIT_L_CAM, mp_doorbell);
            
            CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_F0D7/1/, l_F4D15/1/, ah3b_attackheli_cam2, missheistfbi3b_helicrash);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.PointCamAtCoord(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.PointCamAtEntity(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            p5 always seems to be 1 i.e TRUE
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.PointCamAtPedBone(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Parameters p0-p5 seems correct. The bool p6 is unknown, but through every X360 script its always 1. Please correct p0-p5 if any prove to be wrong. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.RenderScriptCams(System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            ease - smooth transition between the cameras positions
            easeTime - Time in milliseconds for the transition to happen
            
            If you have created a script (rendering) camera, and want to go back to the 
            character (gameplay) camera, call this native with render set to 0.
            Setting ease to 1 will smooth the transition.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamActive(System.Int32,System.Boolean)">
            <summary>
            Set camera as active/inactive.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamActiveWithInterp(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Previous declaration void SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, BOOL easeLocation, BOOL easeRotation) is completely wrong. The last two params are integers not BOOLs...
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamAffectsAiming(System.Int32,System.Boolean)">
            <summary>
            Allows you to aim and shoot at the direction the camera is facing.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamAnimCurrentPhase(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamCoord(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Sets the position of the cam.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamEffect(System.Int32)">
            <summary>
            if p0 is 0, effect is cancelled
            
            if p0 is 1, effect zooms in, gradually tilts cam clockwise apx 30 degrees, wobbles slowly. Motion blur is active until cancelled.
            
            if p0 is 2, effect immediately tilts cam clockwise apx 30 degrees, begins to wobble slowly, then gradually tilts cam back to normal. The wobbling will continue until the effect is cancelled.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamDofFnumberOfLens(System.Int32,System.Single)">
            <summary>
            This native has its name defined inside its codE
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamDofFocusDistanceBias(System.Int32,System.Single)">
            <summary>
            This native has a name defined inside its code
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamDofMaxNearInFocusDistance(System.Int32,System.Single)">
            <summary>
            This native has a name defined inside its code
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamDofMaxNearInFocusDistanceBlendLevel(System.Int32,System.Single)">
            <summary>
            This native has a name defined inside its code
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamDofPlanes(System.Int32,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamDofStrength(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamFarClip(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamFarDof(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamFov(System.Int32,System.Single)">
            <summary>
            Sets the field of view of the cam.
            ---------------------------------------------
            Min: 1.0f
            Max: 130.0f
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamInheritRollVehicle(System.Int32,System.Boolean)">
            <summary>
            The native seems to only be called once.
            
            The native is used as so,
            CAM::SET_CAM_INHERIT_ROLL_VEHICLE(l_544, getElem(2, AND_525, 4));
            In the exile1 script.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamMotionBlurStrength(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamNearClip(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamNearDof(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamParams(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamRot(System.Int32,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Sets the rotation of the cam.
            Last parameter unknown.
            
            Last parameter seems to always be set to 2.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamShakeAmplitude(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamSplineDuration(System.Int32,System.Int32)">
            <summary>
            I named p1 as timeDuration as it is obvious. Im assuming tho it is ran in ms(Milliseconds) as usual.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamSplinePhase(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamUseShallowDofMode(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCinematicButtonActive(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCinematicCamShakeAmplitude(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCinematicModeActive(System.Boolean)">
            <summary>
            p0 = 0/1 or true/false
            
            It doesnt seems to work
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetGameplayCamRawYaw(System.Single)">
            <summary>
            Does nothing
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetGameplayCamRawPitch(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCameraRange(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetFollowPedCamCutsceneChat(System.String,System.Int32)">
            <summary>
            From the b617d scripts:
            
            CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT(FOLLOW_PED_ATTACHED_TO_ROPE_CAMERA, 0);
             CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT(FOLLOW_PED_ON_EXILE1_LADDER_CAMERA, 1500);
             CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT(FOLLOW_PED_SKY_DIVING_CAMERA, 0);
             CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT(FOLLOW_PED_SKY_DIVING_CAMERA, 3000);
             CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT(FOLLOW_PED_SKY_DIVING_FAMILY5_CAMERA, 0);
            CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT(FOLLOW_PED_SKY_DIVING_CAMERA, 0);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetFollowPedCamViewMode(System.Int32)">
            <summary>
            Sets the type of Player camera:
            
            0 - Third Person Close
            1 - Third Person Mid
            2 - Third Person Far
            4 - First Person
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetTimeIdleDrop(System.Boolean,System.Boolean)">
            <summary>
            hash collision?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetFollowVehicleCamZoomLevel(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetFollowVehicleCamViewMode(System.Int32)">
            <summary>
            Sets the type of Player camera in vehicles:
            
            0 - Third Person Close
            1 - Third Person Mid
            2 - Third Person Far
            4 - First Person
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.CustomMenuCoordinates(System.Single)">
            <summary>
            some camera effect that is used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetGameplayCamRelativeHeading(System.Single)">
            <summary>
            Sets the camera position relative to heading in float from -360 to +360.
            
            Heading is alwyas 0 in aiming camera.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetGameplayCamRelativePitch(System.Single,System.Single)">
            <summary>
            Sets the camera pitch.
            
            Parameters:
            x = pitches the camera on the x axis.
            Value2 = always seems to be hex 0x3F800000 (1.000000 float).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetGameplayCamShakeAmplitude(System.Single)">
            <summary>
            Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake. Used in script drunk_controller.ysc.c4 to simulate making the player drunk.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetGameplayCoordHint(System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetGameplayEntityHint(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            p6 ANDp7 - possibly length or time
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.GetIsMultiplayerBrief(System.Boolean)">
            <summary>
            Hash collision
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetGameplayHintFov(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetGameplayObjectHint(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetGameplayPedHint(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetGameplayVehicleHint(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.AnimateGameplayCamZoom(System.Single,System.Single)">
            <summary>
            Seems to animate the gameplay camera zoom.
            
            Eg. _ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1000f);
            will animate the camera zooming in from 1000 meters away.
            
            Game scripts use it like this:
            
            // Setting this to 1 prevents V key from changing zoom
            PLAYER::SET_PLAYER_FORCED_ZOOM(PLAYER::PLAYER_ID(), 1);
            
            // These restrict how far you can move cam up/down left/right
            CAM::_CLAMP_GAMEPLAY_CAM_YAW(-20f, 50f);
            CAM::_CLAMP_GAMEPLAY_CAM_PITCH(-60f, 0f);
            
            CAM::_ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1f);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.ClampGameplayCamYaw(System.Single,System.Single)">
            <summary>
            minimum: Degrees between -180f and 180f.
            maximum: Degrees between -180f and 180f.
            
            Clamps the gameplay cameras current yaw.
            
            Eg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.ClampGameplayCamPitch(System.Single,System.Single)">
            <summary>
            minimum: Degrees between -90f and 90f.
            maximum: Degrees between -90f and 90f.
            
            Clamps the gameplay cameras current pitch.
            
            Eg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetUseHiDof">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetWidescreenBorders(System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.ShakeCam(System.Int32,System.String,System.Single)">
            <summary>
            Possible shake types (updated b617d):
            
            DEATH_FAIL_IN_EFFECT_SHAKE
            DRUNK_SHAKE
            FAMILY5_DRUG_TRIP_SHAKE
            HAND_SHAKE
            JOLT_SHAKE
            LARGE_EXPLOSION_SHAKE
            MEDIUM_EXPLOSION_SHAKE
            SMALL_EXPLOSION_SHAKE
            ROAD_VIBRATION_SHAKE
            SKY_DIVING_SHAKE
            VIBRATE_SHAKE
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.ShakeCinematicCam(System.String,System.Single)">
            <summary>
            p0 argument found in the b617d scripts: DRUNK_SHAKE 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.ShakeGameplayCam(System.String,System.Single)">
            <summary>
            Possible shake types (updated b617d):
            
            DEATH_FAIL_IN_EFFECT_SHAKE
            DRUNK_SHAKE
            FAMILY5_DRUG_TRIP_SHAKE
            HAND_SHAKE
            JOLT_SHAKE
            LARGE_EXPLOSION_SHAKE
            MEDIUM_EXPLOSION_SHAKE
            SMALL_EXPLOSION_SHAKE
            ROAD_VIBRATION_SHAKE
            SKY_DIVING_SHAKE
            VIBRATE_SHAKE
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.StopCamPointing(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.StopCamShaking(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.StopCinematicCamShaking(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.StopCinematicShot(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.StopGameplayCamShaking(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.StopGameplayHint(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.RenderFirstPersonCam(System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            This native makes the gameplay camera zoom into first person/third person with a special effect.
            
            For example, if you were first person in a mission and after the cutscene ends, the camera would then zoom into the first person camera view.
            
            if (CAM::GET_FOLLOW_PED_CAM_VIEW_MODE() != 4)
                       CAM::_C819F3CBB62BF692(1, 0, 3, 0)
            
            This makes the camera zoom in to first person.
            
            --------------------------------------------
            1st Param Options: 0 or 1 (Changes quit often, toggle?)
            2nd Param Options: 0, 0f, 1f, 3.8f, 10f, 20f (Mostly 0) 
            3rd Param Options: 3, 2, 1 (Mostly 3);
            Note for the 2nd param 10f (offroad_race.c) and 3rd param 20f (range_modern.c) are the only times those 2 high floats are called.
            Note for the 3rd param 2 is only ever set in (franklin0.c), but it also sets it as 3. (0, 0, 3) OR(0, 0f, 2) OR (0, 0, 3)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.StopScriptGlobalShaking(System.Boolean)">
            <summary>
            In drunk_controller.c4, sub_309
            if (CAM::_C912AF078AF19212()) {
                CAM::_1C9D7949FA533490(0);
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.SetCamDebugName(System.Int32,System.String)">
            <summary>
            NOTE: Debugging functions are not present in the retail version of the game.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x0FB82563989CF4FB(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x0A9F2A468B328E74(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x609278246A29CA34(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x271017B9BA825366(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xC2EAE3FB8CDBED31(System.String,System.String,System.String,System.Single)">
            <summary>
            CAM::_C2EAE3FB8CDBED31(SHAKE_CAM_medium, medium, , 0.5f);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x4879E4FE39074CDF">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x62374889A4D59F72">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x49482F9FCD825AAA(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x17FCA7199A530203">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x62ECFCFDEE7885D6">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xB1381B97F70C7B30">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x59424BD75174C9B1">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x5A43C76F7FC7BA5F">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x48608C3464F58AB4(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xA41BCD7213805AAC(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x0AA27680A0BD43FA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x19CAFA3C87F7C2FF">
            <summary>
            Seems to return the current type of view
            example: // checks if youre currently in first person
            if ((CAM::_EE778F8C7E1142E2(CAM::_19CAFA3C87F7C2FF()) == 4) AND (!__463_$28ED382849B17AFC())) {
                UI::_FDEC055AB549E328();
                UI::_SET_NOTIFICATION_TEXT_ENTRY(REC_FEED_WAR);
                l_CE0/1/ = UI::_DRAW_NOTIFICATION(0, 1);
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xEE778F8C7E1142E2(System.Int32)">
            <summary>
            interprets the result of CAM::_0x19CAFA3C87F7C2FF()
            
            example: // checks if youre currently in first person
            if ((CAM::_EE778F8C7E1142E2(CAM::_19CAFA3C87F7C2FF()) == 4) AND (!__463_$28ED382849B17AFC())) {
            UI::_FDEC055AB549E328();
            UI::_SET_NOTIFICATION_TEXT_ENTRY(REC_FEED_WAR);
            l_CE0/1/ = UI::_DRAW_NOTIFICATION(0, 1);
            }
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xDFC8CBC606FDB0FC">
            <summary>
            gets some camera far clip
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x9780F32BCAF72431">
            <summary>
            gets some camera far depth of field
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x80EC114669DAEFF4">
            <summary>
            gets some camera fov
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x162F9D995753DC19">
            <summary>
            gets some camera far clip
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xD0082607100D7193">
            <summary>
            gets some camera near clip
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xA03502FC581F7D9B">
            <summary>
            gets some camera near depth of field
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x5F35F6732C3FBBA0(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x26903D9CD1175F2C(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x89215EC747DF244A(System.Single,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x149916F50C34A40D(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x7B8A361C1813FBEF">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x9E4CFFF989258472">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xF4F2C0D4EE209E20">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x74BD83EA840F6BC9">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xEAF0FA793D05C592">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xD7360051C885628B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xCA9D2AA3E326D720">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xBF72910D0F26F025">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x3044240D2E0FA842">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x705A276EBFF3133D">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x1F2300CB7FA7B7F6">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x8BFCEB5EA1B161B6">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x4008EDF7D6E48175(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x661B5C8654ADD825(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x47B595D60664CFFA(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xF55E4046F6F831DC(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xE111A7C0D200CBC5(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xA2767257A320FC82(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x83B8201ED82A9A2D(System.Int32,System.Int32,System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x7BF1A54AE67AC070(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xA6385DEB180F319F(System.Int32,System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xD1B0F412F109EA5D(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x2A2173E46DAECD12(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xDC9DA9E8789F5246">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x12DED8CA53D47EA5(System.Single)">
            <summary>
            Hardcoded to only work in multiplayer.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x0AF7B437918103B3(System.Single)">
            <summary>
            Appear to have something to do with the clipping at close range.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x2F7F2B26DD3F18EE(System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xBCFC632DB7673BF0(System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x70894BD0915C5BCA(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xCED08CBE8EBB97C7(System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x5C41E6BABC9E2112(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x11FA5D3479C7DD47(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x21E253A7F8DA5DFB(System.String)">
            <summary>
            From b617 scripts:
            
            CAM::_21E253A7F8DA5DFB(DINGHY);
            CAM::_21E253A7F8DA5DFB(ISSI2);
            CAM::_21E253A7F8DA5DFB(SPEEDO);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xC91C6C55199308CA(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x503F5920162365B2(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xC8B5C4A79CC18B94(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xE827B9382CFB41BA(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xDD79DF9F4D26E1C9">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xC8391C309684595A">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x91EF6EE6419E5B97(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xDB90C6CCA48940F1(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xFD3151CD37EA2245(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x8BBACBF51DA047A8(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x2AED6301F67007D5(System.Int32)">
            <summary>
                            if (ENTITY::DOES_ENTITY_EXIST(l_228)) {
                                CAM::_2AED6301F67007D5(l_228);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x0225778816FDC28C(System.Single)">
            <summary>
            some camera effect that is (also) used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled. Possibly a cinematic or script-cam version of _0x487A82C650EB7799
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xD1F8363DFAD03848(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x5D7B620DAE436138(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xC92717EF615B6704(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xF8BDBF3D573049A1(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xE9EA16D6E54CDCA4(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x469F2ECDEC046337(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x42156508606DE65E(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xF4C8CF9E353AFECA(System.String,System.Single)">
            <summary>
            Something to do with shake:
            CAM::_F4C8CF9E353AFECA(HAND_SHAKE, 0.2);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x247ACBC4ABBC9D1C(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x324C5AA411DA7737(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x425A920FDB9A0DDA(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x271401846BD26E92(System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x6493CF69859B116A">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0x5C48A1D6E3B33179(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cam.Unknown._0xCCD078C2665D2973(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Clock">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Clock.AddToClockTime(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Clock.AdvanceClockTimeTo(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Clock.GetClockDayOfMonth">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Clock.GetClockDayOfWeek">
            <summary>
            Gets the current day of the week.
            
            0: Sunday
            1: Monday
            2: Tuesday
            3: Wednesday
            4: Thursday
            5: Friday
            6: Saturday
            </summary>				
        </member>
        <member name="M:RAGE.Game.Clock.GetClockHours">
            <summary>
            Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Clock.GetClockMinutes">
            <summary>
            Gets the current ingame clock minute.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Clock.GetClockMonth">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Clock.GetClockSeconds">
            <summary>
            Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in GTA is only 48 minutes in real life.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Clock.GetClockYear">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Clock.GetLocalTime(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets local system time as year, month, day, hour, minute and second.
            
            Example usage:
            
            int year;
            int month;
            int day;
            int hour;
            int minute;
            int second;
            or use std::tm struct
            
            TIME::GET_LOCAL_TIME(ANDear, ANDonth, ANDay, ANDour, ANDinute, ANDecond);
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Clock.GetMillisecondsPerGameMinute">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Clock.GetPosixTime(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets system time as year, month, day, hour, minute and second.
            
            Example usage:
            
                int year;
             int month;
                int day;
              int hour;
             int minute;
               int second;
            
             TIME::GET_POSIX_TIME(ANDear, ANDonth, ANDay, ANDour, ANDinute, ANDecond);
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Clock.GetUtcTime(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets current UTC time 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Clock.PauseClock(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Clock.SetClockDate(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Clock.SetClockTime(System.Int32,System.Int32,System.Int32)">
            <summary>
            SET_CLOCK_TIME(12, 34, 56);
            </summary>				
        </member>
        <member name="T:RAGE.Game.Cutscene">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Cutscene.CanSetEnterStateForRegisteredEntity(System.String,System.UInt32)">
            <summary>
            modelHash (p1) was always 0 in R scripts
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.CanSetExitStateForCamera(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.CanSetExitStateForRegisteredEntity(System.String,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.DoesCutsceneEntityExist(System.String,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.GetCutsceneSectionPlaying">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.GetCutsceneTime">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.GetCutsceneTotalDuration">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.GetEntityIndexOfCutsceneEntity(System.String,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.GetEntityIndexOfRegisteredEntity(System.String,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.HasCutsceneFinished">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.HasCutsceneLoaded">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.HasThisCutsceneLoaded(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.IsCutsceneActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.IsCutscenePlaying">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.RegisterEntityForCutscene(System.Int32,System.String,System.Int32,System.UInt32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.RemoveCutscene">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.RequestCutscene(System.String,System.Int32)">
            <summary>
            p1: usually 8
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.RequestCutsceneEx(System.String,System.Int32,System.Int32)">
            <summary>
            Example:
            CUTSCENE::_0xC23DE0E91C30B58C(JOSH_1_INT_CONCAT, 13, 8);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.RegisterSynchronisedScriptSpeech">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.SetCutsceneFadeValues(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.SetCutsceneOrigin(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            p3 could be heading. Needs more research.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.SetCutscenePedComponentVariation(System.String,System.Int32,System.Int32,System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.SetCutscenePedPropVariation(System.String,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Thanks R! ;)
            
            if ((l_161 == 0) OR (l_161 == 2)) {
                sub_2ea27(Trying to set Jimmy prop variation);
                CUTSCENE::_0546524ADE2E9723(Jimmy_Boston, 1, 0, 0, 0);
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.SetCutsceneTriggerArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Only used twice in R scripts
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.StartCutscene(System.Int32)">
            <summary>
            some kind of flag. Usually 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.StartCutsceneAtCoords(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            p3: some kind of flag. Usually 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.StopCutscene(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.StopCutsceneImmediately">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.WasCutsceneSkipped">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0xB56BBBCC2955D9CB">
            <summary>
            Can request assets for cutscene entity? (found in decompiled scripts)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0x5EDEF0CF8C1DAB3C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0x583DF8E3D4AFBD98">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0x0ABC54DE641DC0FC(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0x708BDD8CD795B043">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0xA1C996C2A744262E(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0x4CEBC1ED31E8925E(System.String)">
            <summary>
            This function is hard-coded to always return 1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0x71B74D2AE19338D0(System.Int32)">
            <summary>
            Its 100% an IS_CUTSCENE_ native.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0xA0FE76168A189DDB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0x2F137B508DE238F2(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0xD00D76A7DFC9D852(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0x06A3524161C502BA(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0xE36A98D8AB3D3C66(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0x41FAA8FB2ECE8720(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0x4C61C75BEE8184C2(System.String,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0x20746F7B1032A3C7(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0x06EE9048FD080382(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0x011883F41211432A(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0x2A56C06EBEF2B0D9(System.String,System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0xC61B86C9F61EB404(System.Boolean)">
            <summary>
            Toggles a value (bool) for cutscenes.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0x8D9DF6ECA8768583(System.Int32)">
            <summary>
            Example of usage:
            
            v_2 = SCRIPT::_30B4FA1C82DD4B9F(); // int _GET_ID_OF_NEXT_SCRIPT_IN_ENUMERATION()
            CUTSCENE::_8D9DF6ECA8768583(v_2);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Cutscene.Unknown._0x7F96F23FA9B73327(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Datafile">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Datafile.ArrayValueAddBoolean(System.Int32@,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ArrayValueAddObject(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ArrayValueAddFloat(System.Int32@,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ArrayValueAddInteger(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ArrayValueAddString(System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ArrayValueAddVector3(System.Int32@,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ArrayValueGetBoolean(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ArrayValueGetSize(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ArrayValueGetObject(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ArrayValueGetFloat(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ArrayValueGetInteger(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ArrayValueGetString(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ArrayValueGetType(System.Int32@,System.Int32)">
            <summary>
            Types:
            1 = Boolean
            2 = Integer
            3 = Float
            4 = String
            5 = Vector3
            6 = Object
            7 = Array
            </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ArrayValueGetVector3(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ObjectValueAddArray(System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ObjectValueAddObject(System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ObjectValueGetArray(System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ObjectValueGetBoolean(System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ObjectValueGetObject(System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ObjectValueGetFloat(System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ObjectValueGetInteger(System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ObjectValueGetString(System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ObjectValueGetType(System.Int32@,System.String)">
            <summary>
            Types:
            1 = Boolean
            2 = Integer
            3 = Float
            4 = String
            5 = Vector3
            6 = Object
            7 = Array
            </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ObjectValueGetVector3(System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ObjectValueAddBoolean(System.Int32@,System.String,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ObjectValueAddFloat(System.Int32@,System.String,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ObjectValueAddInteger(System.Int32@,System.String,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ObjectValueAddString(System.Int32@,System.String,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.ObjectValueAddVector3(System.Int32@,System.String,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.DatafileCreate">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.DatafileDelete">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.DatafileGetFileDict">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.DatafileIsSavePending">
            <summary>
            Example:
            if (!DATAFILE::_BEDB96A7584AA8CF())
            {
                if (!g_109E3)
             {
                    if (((sub_d4f() == 2) == 0) AND (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()))
                  {
                        if (NETWORK::NETWORK_IS_CLOUD_AVAILABLE())
                     {
                            g_17A8B = 0;
                        }
                        if (!g_D52C)
                      {
                            sub_730();
                        }
                    }
                }
            }
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.LoadUgcFile(System.String)">
            <summary>
            Loads a User-Generated Content (UGC) file. These files can be found in GTA5\data\ugc and GTA5\common\patch\ugc. They seem to follow a naming convention, most likely of name_part.ugc. See example below for usage.
            
            Returns whether or not the file was successfully loaded.
            
            Example:
            DATAFILE::_LOAD_UGC_FILE(RockstarPlaylists) // loads rockstarplaylists_00.ugc
            </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0x6CC86E78358D5119">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0x8F5EA1C01D65A100(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0xC55854C7D7274882">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0x15FF52B809DB2353(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0xF8CC1EBE0B62E29F(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0xFCCAE5B92A830878(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0x22DA66936E0FFF37(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0x01095C95CD46B624(System.Int32)">
            <summary>
            if ((NETWORK::_597F8DBA9B206FC7()  0) AND DATAFILE::_01095C95CD46B624(0)) {
                v_10 = DATAFILE::_GET_ROOT_OBJECT();
                v_11 = DATAFILE::_OBJECT_VALUE_GET_INTEGER(v_10, pt);
                sub_20202(2, v_11);
                a_0 += 1;
            } else { 
                a_0 += 1;
            }
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0xA69AC4ADE82B57A4(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0x52818819057F2B40(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0x9CB0BFA7A9342C3D(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0x83BCCE3224735F05(System.String)">
            <summary>
            Saves a JSON file? It might even be saving it to the Rockstar Cloud, but I have no way of verifying this
            
            shrinkletter.c4, line ~378:
            DATAFILE::DATAFILE_CREATE();
            v_5 = DATAFILE::_GET_ROOT_OBJECT();
            DATAFILE::_OBJECT_VALUE_ADD_INTEGER(v_5, in, a_2);
            DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, st, AND_2._f1);
            DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, mp, AND_2._f2);
            DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, ms, AND_2._f3);
            DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, sc, AND_2._f5);
            DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, pr, AND_2._f6);
            DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, fa, AND_2._f7);
            DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, sm, AND_2._f8);
            DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, kp, AND_2._f9);
            DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, sv, AND_2._fA);
            DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, yo, AND_2._fB);
            DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, fi, AND_2._fC);
            DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, rc, AND_2._fD);
            DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, co, AND_2._fE);
            DATAFILE::_OBJECT_VALUE_ADD_INTEGER(v_5, su, a_2._fF);
            DATAFILE::_83BCCE3224735F05(gta5/psych/index.json); // saves the file?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0x2ED61456317B8178">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0x4DFDD9EB705F8140(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0xAD6875BBC0FC899C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0xC84527E235FCA219(System.String,System.Boolean,System.String,System.Int32@,System.Int32@,System.String,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0xA5EFC3E847D60507(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            NOTE: p1 might be some kind of array.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0x692D808C34A82143(System.String,System.Single,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0x648E7A5434AF7969(System.String,System.Int32@,System.Boolean,System.Int32@,System.Int32@,System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Datafile.Unknown._0x4645DE9980999E93(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            NOTE: p2 might be some kind of array.
            </summary>				
        </member>
        <member name="T:RAGE.Game.Decorator">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Decorator.DecorExistOn(System.Int32,System.String)">
            <summary>
            Returns whether or not the specified property is set for the entity.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Decorator.DecorGetBool(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Decorator.DecorGetFloat(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Decorator.DecorGetInt(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Decorator.DecorIsRegisteredAsType(System.String,System.Int32)">
            <summary>
            Is property of that type.
            
            1 - float
            2 - bool
            3 - int
            5 - time
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Decorator.DecorRegister(System.String,System.Int32)">
            <summary>
            Found this in standard_global_init.c4 line 1898
            
            void sub_523a() {
                DECORATOR::DECOR_REGISTER(Player_Vehicle, 3);
                DECORATOR::DECOR_REGISTER(PV_Slot, 3);
                DECORATOR::DECOR_REGISTER(Previous_Owner, 3);
                DECORATOR::DECOR_REGISTER(Sprayed_Vehicle_Decorator, 2);
                DECORATOR::DECOR_REGISTER(Sprayed_Vehicle_Timer_Dec, 5);
                DECORATOR::DECOR_REGISTER(Vehicle_Reward, 3);
                DECORATOR::DECOR_REGISTER(Vehicle_Reward_Teams, 3);
                DECORATOR::DECOR_REGISTER(Skill_Blocker, 2);
                DECORATOR::DECOR_REGISTER(TargetPlayerForTeam, 3);
                DECORATOR::DECOR_REGISTER(XP_Blocker, 2);
                DECORATOR::DECOR_REGISTER(CrowdControlSetUp, 3);
                DECORATOR::DECOR_REGISTER(Bought_Drugs, 2);
                DECORATOR::DECOR_REGISTER(HeroinInPossession, 1);
                DECORATOR::DECOR_REGISTER(CokeInPossession, 1);
                DECORATOR::DECOR_REGISTER(WeedInPossession, 1);
                DECORATOR::DECOR_REGISTER(MethInPossession, 1);
                DECORATOR::DECOR_REGISTER(bombdec, 3);
                DECORATOR::DECOR_REGISTER(bombdec1, 3);
                DECORATOR::DECOR_REGISTER(bombowner, 3);
                DECORATOR::DECOR_REGISTER(noPlateScan, 2);
                DECORATOR::DECOR_REGISTER(prisonBreakBoss, 2);
                DECORATOR::DECOR_REGISTER(cashondeadbody, 3);
                DECORATOR::DECOR_REGISTER(MissionType, 3);
                DECORATOR::DECOR_REGISTER(MatchId, 3);
                DECORATOR::DECOR_REGISTER(TeamId, 3);
                DECORATOR::DECOR_REGISTER(Not_Allow_As_Saved_Veh, 3);
                DECORATOR::DECOR_REGISTER(Veh_Modded_By_Player, 3);
                DECORATOR::DECOR_REGISTER(MPBitset, 3);
                DECORATOR::DECOR_REGISTER(MC_EntityID, 3);
                DECORATOR::DECOR_REGISTER(MC_ChasePedID, 3);
                DECORATOR::DECOR_REGISTER(MC_Team0_VehDeliveredRules, 3);
                DECORATOR::DECOR_REGISTER(MC_Team1_VehDeliveredRules, 3);
                DECORATOR::DECOR_REGISTER(MC_Team2_VehDeliveredRules, 3);
                DECORATOR::DECOR_REGISTER(MC_Team3_VehDeliveredRules, 3);
                DECORATOR::DECOR_REGISTER(AttributeDamage, 3);
                DECORATOR::DECOR_REGISTER(GangBackup, 3);
                DECORATOR::DECOR_REGISTER(CreatedByPegasus, 2);
                DECORATOR::DECOR_REGISTER(BeforeCorona_0, 2);
            }
            
            -----------------------------------------------------------------------
            Defines type of property for property name.
            
            1 - float,
            2 - bool,
            3 - int
            5 - time
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Decorator.DecorRegisterLock">
            <summary>
            Called after all decorator type initializations.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Decorator.DecorRemove(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Decorator.DecorSetBool(System.Int32,System.String,System.Boolean)">
            <summary>
            This function sets metadata of type bool to specified entity.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Decorator.DecorSetFloat(System.Int32,System.String,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Decorator.DecorSetInt(System.Int32,System.String,System.Int32)">
            <summary>
            Sets property to int.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Decorator.DecorSetTime(System.Int32,System.String,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Dlc">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Dlc.GetIsLoadingScreenActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Dlc.Nullify(System.Int32@,System.Int32)">
            <summary>
            Sets the value of the specified variable to 0.
            Always returns true.
            
            bool _NULLIFY(void variable, int unused)
            {
                variable = NULL;
                return true;
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Dlc.IsDlcPresent(System.UInt32)">
            <summary>
            Example:
            DLC2::IS_DLC_PRESENT($\mpbusiness2\);
            ($ = gethashkey)
            
            bruteforce these:
            0xB119F6D
            0x96F02EE6
            </summary>				
        </member>
        <member name="M:RAGE.Game.Dlc.LoadMpDlcMaps">
            <summary>
            This loads the GTA:O dlc map parts (high end garages, apartments).
            Works in singleplayer.
            In order to use GTA:O heist IPLs you have to call this native with the following params: _9BAE5AD2508DF078(1);
            
            console hash: 0xC65586A9
            </summary>				
        </member>
        <member name="M:RAGE.Game.Dlc.LoadSpDlcMaps">
            <summary>
            Unloads GROUP_MAP (GTAO/MP) DLC data and loads GROUP_MAP_SP DLC. Neither are loaded by default, 0888C3502DBBEEF5 is a cognate to this function and loads MP DLC (and unloads SP DLC by extension).
            
            The original (and wrong) definition is below:
            
            This unload the GTA:O DLC map parts (like high end garages/apartments).
            Works in singleplayer.
            
            console hash: 0x8BF60FC3
            </summary>				
        </member>
        <member name="M:RAGE.Game.Dlc.Unknown._0x241FCA5B1AA14F75">
            <summary>
            Console Hash: 0x0AF83036
            Only used once in scripts, in maintransition.
            
            maintransition.c4, line ~82432:
            if (PED::_7350823473013C02(PLAYER::PLAYER_PED_ID()) AND (DECORATOR::_241FCA5B1AA14F75() == 0)) {
                g_2542A5 = a_1; // g_2542A5 used in building_controller.ysc for IPL stuff?
                return 1;
            }
            
            Likely used solely for the players ped. The function its in seems to only be used for initialization/quitting. Called among natives to discard scaleforms, disable frontend, fading in/out, etc. Neighboring strings to some calls include HUD_JOINING, HUD_QUITTING.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Dlc.Unknown._0x8D30F648014A92B5">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Dlc.Unknown._0xF2E07819EF1A5289">
            <summary>
            MulleDK19: This function is hard-coded to always return 1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Dlc.Unknown._0xA213B11DFF526300">
            <summary>
            MulleDK19: This function is hard-coded to always return 1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Dlc.Unknown._0x9489659372A81585">
            <summary>
            MulleDK19: This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="T:RAGE.Game.Entity">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Entity.ApplyForceToEntity(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Documented here:
            gtaforums.com/topic/885669-precisely-define-object-physics/
            gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/
            
            forceFlags:
            First bit (lowest): Strong force flag, factor 100
            Second bit: Unkown flag
            Third bit: Momentum flag=1 (vector (x,y,z) is a momentum, more research needed)
            If higher bits are unequal 0 the function doesnt applay any forces at all.
            (As integer possible values are 0-7)
            
            0: weak force
            1: strong force
            2: same as 0 (2nd bit?)
            3: same as 1
            4: weak momentum
            5: strong momentum
            6: same as 4
            7: same as 5
            
            isLocal: vector defined in local (body-fixed) coordinate frame
            isMassRel: if true the force gets multiplied with the objects mass (this is why it was known as highForce) and different objects will have the same acceleration.
            
            p8 !!! Whenever I set this !=0, my script stopped.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.ApplyForceToEntityCenterOfMass(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            p6/relative - makes the xyz force not relative to world coords, but to something else
            p7/highForce - setting false will make the force really low
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.AttachEntityToEntity(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Attaches entity1 to bone (boneIndex) of entity2.
            
            boneIndex - this is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use the index for attaching to specific bones. entity1 will be attached to entity2s centre if bone index given doesnt correspond to bone indexes for that entity type.
            
            useSoftPinning - if set to false attached entity will not detach when fixed
            collision - controls collision between the two entities (FALSE disables collision).
            isPed - pitch doesnt work when false and roll will only work on negative numbers (only peds)
            vertexIndex - position of vertex
            fixedRot - if false it ignores entity vector 
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.AttachEntityToEntityPhysically(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            breakForce is the amount of force required to break the bond.
            p14 - is always 1 in scripts
            p15 - is 1 or 0 in scripts - unknoun what it does
            p16 - controls collision between the two entities (FALSE disables collision).
            p17 - do not teleport entity to be attached to the position of the bone Index of the target entity (if 1, entity will not be teleported to target bone)
            p18 - is always 2 in scripts.
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.ClearEntityLastDamageEntity(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.CreateForcedObject(System.Single,System.Single,System.Single,System.Int32,System.UInt32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.CreateModelHide(System.Single,System.Single,System.Single,System.Single,System.UInt32,System.Boolean)">
            <summary>
            p5 = sets as true in scripts
            Same as the comment for CREATE_MODEL_SWAP unless for some reason p5 affects it this only works with objects as well.
            
            Network players do not see changes done with this.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.CreateModelHideExcludingScriptObjects(System.Single,System.Single,System.Single,System.Single,System.UInt32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.CreateModelSwap(System.Single,System.Single,System.Single,System.Single,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Only works with objects!
            Network players do not see changes done with this.
            - Did ya try modifying p6 lol
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.DeleteEntity(System.Int32@)">
            <summary>
            Deletes the specified entity, then sets the handle pointed to by the pointer to NULL.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.DetachEntity(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            p1 and p2 have no effect 
            maybe a quick disassembly will tell us what they do
            
            if p2 is set to true, the both entities wont collide with the other until the distance between them is above 4 meters.
            
            
            p1?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.DoesEntityBelongToThisScript(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.DoesEntityExist(System.Int32)">
            <summary>
            Checks if the Entity exists
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.DoesEntityHaveDrawable(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.DoesEntityHavePhysics(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.FindAnimEventPhase(System.String,System.String,System.String,System.Int32@,System.Int32@)">
            <summary>
            In the script player_scene_t_bbfight.c4:
            if (ENTITY::FIND_ANIM_EVENT_PHASE(AND_16E, AND_19Fv_4/16/, v_9, AND_A, AND_B))
            -- AND_16E (p0) is requested as an anim dictionary earlier in the script.
            -- AND_19Fv_4/16/ (p1) is used in other natives in the script as the animation param.
            -- v_9 (p2) is instantiated as victim_fall; Im guessing thats another anim
            --v_A and v_B (p3 ANDp4) are both set as -1.0, but v_A is used immediately after this native for: 
            if (v_A  ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(...))
            Both v_A and v_B are seemingly used to contain both Vector3s and floats, so I cant say what either really is other than that they are both output parameters. p4 looks more like a Vector3 though
            -alphazolam
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.ForceEntityAiAndAnimationUpdate(System.Int32)">
            <summary>
            Based on carmod_shop script decompile this takes a vehicle parameter. It is called when repair is done on initial enter.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.FreezeEntityPosition(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetAnimDuration(System.String,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetCollisionNormalOfLastHitForEntity(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityAlpha(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityAnimCurrentTime(System.Int32,System.String,System.String)">
            <summary>
            Returns a float value representing animations current playtime with respect to its total playtime. This value increasing in a range from 0 to 1 and wrap back to 0 when it reach 1.
            
            Example:
            0.000000 - mark the starting of animation.
            0.500000 - mark the midpoint of the animation.
            1.000000 - mark the end of animation.
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityAnimTotalTime(System.Int32,System.String,System.String)">
            <summary>
            Returns a float value representing animations total playtime in milliseconds.
            
            Example:
            GET_ENTITY_ANIM_TOTAL_TIME(PLAYER_ID(),amb@world_human_yoga@female@base,base_b) 
            return 20800.000000
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityAttachedTo(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityBoneIndexByName(System.Int32,System.String)">
            <summary>
            Returns the index of the bone. If the bone was not found, -1 will be returned. 
            
            list:
            pastebin.com/D7JMnX1g
            
            BoneNames:
              chassis,
              windscreen,
               seat_pside_r,
             seat_dside_r,
             bodyshell,
                suspension_lm,
                suspension_lr,
                platelight,
               attach_female,
                attach_male,
              bonnet,
               boot,
             chassis_dummy,  //Center of the dummy
             chassis_Control,    //Not found yet
               door_dside_f,   //Door left, front
                door_dside_r,   //Door left, back
             door_pside_f,   //Door right, front
               door_pside_r,   //Door right, back
                Gun_GripR,
                windscreen_f,
             platelight, //Position where the light above the numberplate is located
               VFX_Emitter,
              window_lf,  //Window left, front
              window_lr,  //Window left, back
               window_rf,  //Window right, front
             window_rr,  //Window right, back
              engine, //Position of the engine
              gun_ammo,
             ROPE_ATTATCH,   //Not misspelled. In script finale_heist2b.c4.
                wheel_lf,   //Wheel left, front
               wheel_lr,   //Wheel left, back
                wheel_rf,   //Wheel right, front
              wheel_rr,   //Wheel right, back
               exhaust,    //Exhaust. shows only the position of the stock-exhaust
               overheat,   //A position on the engine(not exactly sure, how to name it)
              misc_e, //Not a car-bone.
             seat_dside_f,   //Driver-seat
             seat_pside_f,   //Seat next to driver
             Gun_Nuzzle,
               seat_r
            
            I doubt that the function is case-sensitive, since I found a Chassis and a chassis. - Just tested: Definitely not case-sensitive.
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityCollisionDisabled(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityCoords(System.Int32,System.Boolean)">
            <summary>
            p1 = !IS_ENTITY_DEAD
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityForwardVector(System.Int32)">
            <summary>
            Gets the entitys forward vector.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityForwardX(System.Int32)">
            <summary>
            Gets the X-component of the entitys forward vector.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityForwardY(System.Int32)">
            <summary>
            Gets the Y-component of the entitys forward vector.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityHeading(System.Int32)">
            <summary>
            Returns the heading of the entity in degrees. Also know as the Yaw of an entity.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityPhysicsHeading(System.Int32)">
            <summary>
            Gets the heading of the entity physics in degrees, which tends to be more accurate than just GET_ENTITY_HEADING. This can be clearly seen while, for example, ragdolling a ped/player.
            
            NOTE: The name and description of this native are based on independent research. If you find this native to be more suitable under a different name and/or described differently, please feel free to do so.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityHealth(System.Int32)">
            <summary>
            Returns an integer value of entitys current health.
            
            Example of range for ped:
            - Player 0 to 200
            - Ped 100 to 200
            - Vehicle 0 to 1000
            - Object 0 to 1000
            
            Health is actually a float value but this native casts it to int.
            In order to get the actual value, do:
            float health = (float )(entityAddress + 0x280);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityHeight(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityHeightAboveGround(System.Int32)">
            <summary>
            Return height (z-dimension) above ground. 
            Example: The pilot in a titan plane is 1.844176 above ground.
            
            How can i convert it to meters?
            Everything seems to be in meters, probably this too.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityLodDist(System.Int32)">
            <summary>
            Returns the LOD distance of an entity.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityMatrix(System.Int32,RAGE.Vector3,RAGE.Vector3,RAGE.Vector3,RAGE.Vector3)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityMaxHealth(System.Int32)">
            <summary>
            Return an integer value of entitys maximum health.
            
            Example:
            - Player = 200
            - Ped = 150
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityModel(System.Int32)">
            <summary>
            Returns the model hash from the entity
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityPitch(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityPopulationType(System.Int32)">
            <summary>
            Returns range from 0-10
            
            --------------------------------------------------------------
            
            The type name can be retrieved by using this:
            
            typedef LPSTR(__fastcall GetEntityPopulationTypeName_t)(unsigned __int16 entityPopulationType, bool scriptName);
               GetEntityPopulationTypeName_t GetEntityPopulationTypeName = (GetEntityPopulationTypeName_t)FindPattern(44 0F B7 C1 4C 8D 0D ?? ?? ?? ?? 41 83 F8 07);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityQuaternion(System.Int32,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            w is the correct parameter name!
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityRoll(System.Int32)">
            <summary>
            Displays the current ROLL axis of the entity -180.0000/180.0000+
            (Sideways Roll) such as a vehicle tipped on its side
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityRotation(System.Int32,System.Int32)">
            <summary>
            rotationOrder refers to the order yaw pitch roll is applied
            value ranges from 0 to 5. What you use for rotationOrder when getting must be the same as rotationOrder when setting the rotation. 
            Unsure what value corresponds to what rotation order, more testing will be needed for that.
            ------
            rotationOrder is usually 2 in scripts
            ------
            ENTITY::GET_ENTITY_ROTATION(Any p0, false or true);
            if false than return from -180 to 180
            if true than return from -90 to 90
            
            ---
            
            As said above, the value of p1 affects the outcome. R uses 1 and 2 instead of 0 and 1, so I marked it as an int.
            
            What it returns is the yaw on the z part of the vector, which makes sense considering R considers z as vertical. Heres a picture for those of you who dont understand pitch, yaw, and roll:
            
            www.allstar.fiu.edu/aero/images/pic5-1.gif
            
            I dont know why it returns a Vec3, but sometimes the values x and y go negative, yet theyre always zero. Just use GET_ENTITY_PITCH and GET_ENTITY_ROLL for pitch and roll.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityRotationVelocity(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityScript(System.Int32,System.Int32@)">
            <summary>
            All ambient entities in-world seem to have the same value for the second argument (Any script), depending on when the scripthook was activated/re-activated. Ive seen numbers from ~5 to almost 70 when the value was translated with to_string. The function return value seems to always be 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntitySpeed(System.Int32)">
            <summary>
            result is in meters per second
            
            ------------------------------------------------------------
            So would the conversion to mph and km/h, be along the lines of this.
            
            float speed = GET_ENTITY_SPEED(veh);
            float kmh = (speed  3.6);
            float mph = (speed  2.236936);
            ------------------------------------------------------------
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntitySpeedVector(System.Int32,System.Boolean)">
            <summary>
            Relative can be used for getting speed relative to the frame of the vehicle, to determine for example, if you are going in reverse (-y speed) or not (+y speed). 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntitySubmergedLevel(System.Int32)">
            <summary>
            Get how much of the entity is submerged.  1.0f is whole entity.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityType(System.Int32)">
            <summary>
            Returns:
            0 = no entity
            1 = ped
            2 = vehicle
            3 = object
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityUprightValue(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetEntityVelocity(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetLastMaterialHitByEntity(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetNearestPlayerToEntity(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetNearestPlayerToEntityOnTeam(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetOffsetFromEntityGivenWorldCoords(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Converts world coords (posX - Z) to coords relative to the entity
            
            Example:
            posX is given as 50
            entitys x coord is 40
            the returned x coord will then be 10 or -10, not sure havent used this in a while (think it is 10 though).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetOffsetFromEntityInWorldCoords(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Offset values are relative to the entity.
            
            x = left/right
            y = forward/backward
            z = up/down
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetObjectIndexFromEntityIndex(System.Int32)">
            <summary>
            Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetPedIndexFromEntityIndex(System.Int32)">
            <summary>
            Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetVehicleIndexFromEntityIndex(System.Int32)">
            <summary>
            Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.GetWorldPositionOfEntityBone(System.Int32,System.Int32)">
            <summary>
            Returns the coordinates of an entity-bone.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.HasAnimEventFired(System.Int32,System.UInt32)">
            <summary>
            if (ENTITY::HAS_ANIM_EVENT_FIRED(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(CreateObject)))
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.HasCollisionLoadedAroundEntity(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.HasEntityAnimFinished(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            P3 is always 3 as far as i cant tell
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.HasEntityBeenDamagedByAnyObject(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.HasEntityBeenDamagedByAnyPed(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.HasEntityBeenDamagedByAnyVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.HasEntityBeenDamagedByEntity(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Entity 1 = Victim
            Entity 2 = Attacker
            
            p2 seems to always be 1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.HasEntityClearLosToEntity(System.Int32,System.Int32,System.Int32)">
            <summary>
            traceType is always 17 in the scripts.
            
            There is other codes used for traceType:
            19 - in jewelry_prep1a
            126 - in am_hunt_the_beast
            256 AND287 - in fm_mission_controller
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.HasEntityClearLosToEntityInFront(System.Int32,System.Int32)">
            <summary>
            Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
            This is one of the most CPU demanding BOOL natives in the game; avoid calling this in things like nested for-loops
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.HasEntityCollidedWithAnything(System.Int32)">
            <summary>
            Called on tick.
            Tested with vehicles, returns true whenever the vehicle is touching any entity.
            
            Note: for vehicles, the wheels can touch the ground and it will still return false, but if the body of the vehicle touches the ground, it will return true.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsAnEntity(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityAnObject(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityAttached(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityAttachedToAnyObject(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityAttachedToAnyPed(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityAttachedToAnyVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityAttachedToEntity(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityAtCoord(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Checks if entity is within x/y/zSize distance of x/y/z. 
            
            Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityAtEntity(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Checks if entity1 is within the box defined by x/y/zSize of entity2.
            
            Last three parameters are almost alwasy p5 = 0, p6 = 1, p7 = 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityAMissionEntity(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityAPed(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityAVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityDead(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityInAir(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityInAngledArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Creates a spherical cone at origin that extends to surface with the angle specified. Then returns true if the entity is inside the spherical cone
            
            Angle is measured in degrees.
            These values are constant, most likely bogus:
            p8 = 0, p9 = 1, p10 = 0
            
            This method can also take two float3 instead of 6 floats.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityInArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityInWater(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityInZone(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityOccluded(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityOnScreen(System.Int32)">
            <summary>
            Returns true if the entity is in between the minimum and maximum values for the 2d screen coords. 
            This means that it will return true even if the entity is behind a wall for example, as long as youre looking at their location. 
            Chipping
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityPlayingAnim(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            See also PED::IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM 0x6EC47A344923E1ED 0x3C30B447
            
            Taken from ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), creatures@shark@move, attack_player, 3)
            
            p4 is always 3 in the scripts.
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityStatic(System.Int32)">
            <summary>
            a static ped will not react to natives like APPLY_FORCE_TO_ENTITY or SET_ENTITY_VELOCITY and oftentimes will not react to task-natives like AI::TASK_COMBAT_PED. The only way I know of to make one of these peds react is to ragdoll them (or sometimes to use CLEAR_PED_TASKS_IMMEDIATELY(). Static peds include almost all far-away peds, beach-combers, peds in certain scenarios, peds crossing a crosswalk, peds walking to get back into their cars, and others. If anyone knows how to make a ped non-static without ragdolling them, please edit this with the solution.
            
            how can I make an entity static???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityTouchingEntity(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityTouchingModel(System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityUpright(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityUpsidedown(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityVisible(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityVisibleToScript(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.IsEntityWaitingForWorldCollision(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.PlayEntityAnim(System.Int32,System.String,System.String,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Int32)">
            <summary>
            delta and bitset are guessed fields. They are based on the fact that most of the calls have 0 or nil field types passed in.
            
            The only time bitset has a value is 0x4000 and the only time delta has a value is during stealth with usually 1.0f values.
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.PlaySynchronizedEntityAnim(System.Int32,System.Int32,System.String,System.String,System.Single,System.Single,System.Int32,System.Single)">
            <summary>
            p4 and p7 are usually 1000.0f.
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.PlaySynchronizedMapEntityAnim(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Single,System.Single,System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.ProcessEntityAttachments(System.Int32)">
            <summary>
            Called to update entity attachments.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.RemoveForcedObject(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.RemoveModelHide(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.RemoveModelSwap(System.Single,System.Single,System.Single,System.Single,System.UInt32,System.UInt32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.ResetEntityAlpha(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityAlpha(System.Int32,System.Int32,System.Boolean)">
            <summary>
            skin - everything alpha except skin
            Set entity alpha level. Ranging from 0 to 255 but chnages occur after every 20 percent (after every 51).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityAlwaysPrerender(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityAnimCurrentTime(System.Int32,System.String,System.String,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityAnimSpeed(System.Int32,System.String,System.String,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityAsMissionEntity(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Makes the specified entity (ped, vehicle or object) persistent. Persistent entities will not automatically be removed by the engine.
            
            p1 has no effect when either its on or off 
            maybe a quick disassembly will tell us what it does
            
            p2 has no effect when either its on or off 
            maybe a quick disassembly will tell us what it does
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityCanBeDamaged(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityCanBeDamagedByRelationshipGroup(System.Int32,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityCanBeTargetedWithoutLos(System.Int32,System.Boolean)">
            <summary>
            Sets whether the entity can be targeted without being in line-of-sight.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityCollision(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityCoords(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            p7 is always 1 in the scripts. Set to 1, an area around the destination coords for the moved entity is cleared from other entities. 
             
            Often ends with 1, 0, 0, 1); in the scripts. It works. 
            
            Axis - Invert Axis Flags
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityCoordsNoOffset(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Axis - Invert Axis Flags
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityCoords2(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            does the same as SET_ENTITY_COORDS.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityDynamic(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityHasGravity(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityHeading(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityHealth(System.Int32,System.Int32)">
            <summary>
            health = 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityInvincible(System.Int32,System.Boolean)">
            <summary>
            Sets a ped or an object totally invincible. It doesnt take any kind of damage. Peds will not ragdoll on explosions and the tazer animation wont apply either.
            
            If you use this for a ped and you want Ragdoll to stay enabled, then do:
            (DWORD )(pedAddress + 0x188) OR (1  9);
            
            Use this if you want to get the invincibility status:
              bool IsPedInvincible(Ped ped)
             {
                 auto addr = getScriptHandleBaseAddress(ped);    
            
                    if (addr)
                 {
                     DWORD flag = (DWORD )(addr + 0x188);
                        return ((flag AND(1  8)) != 0) OR ((flag AND(1  9)) != 0);
                  }
            
                   return false;
             }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityIsTargetPriority(System.Int32,System.Boolean,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityLights(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityLoadCollisionFlag(System.Int32,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityLodDist(System.Int32,System.Int32)">
            <summary>
            LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityMaxHealth(System.Int32,System.Int32)">
            <summary>
            For instance: ENTITY::SET_ENTITY_MAX_HEALTH(PLAYER::PLAYER_PED_ID(), 200); // director_mode.c4: 67849
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityMaxSpeed(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityMotionBlur(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityNoCollisionEntity(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Calling this function, regardless of the unknown value, disabled collision between two entities.
            
            Importance of entity1 and 2 order is unclear.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityOnlyDamagedByPlayer(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityOnlyDamagedByRelationshipGroup(System.Int32,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityProofs(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Enable / disable each type of damage.
            
            Cant get drownProof to work.
            --------------
            p7 is to to 1 in am_mp_property_ext/int: entity::set_entity_proofs(uParam0-f_19, true, true, true, true, true, true, 1, true);
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityQuaternion(System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            w is the correct parameter name!
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityRecordsCollisions(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityRenderScorched(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityRotation(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Boolean)">
            <summary>
            rotationOrder refers to the order yaw pitch roll is applied
            value ranges from 0 to 5. What you use for rotationOrder when setting must be the same as rotationOrder when getting the rotation. 
            Unsure what value corresponds to what rotation order, more testing will be needed for that.
            For the most part R uses 1 or 2 as the order.
            p5 is usually set as true
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntitySomething(System.Int32,System.Boolean)">
            <summary>
            what does this native do?
            
            bool IsEntitySomething(Entity entity)
            {
                auto addr = getScriptHandleBaseAddress(entity);
               printf(addr: 0x%X \n, addr);
            
                if (addr)
             {
                 DWORD flag = (DWORD )(addr + 0x48D);
                    printf(flag: 0x%X \n, flag);
            
                    return ((flag AND(1  3)) != 0) OR ((flag AND(1  30)) != 0);
             }
            
               return false;
            }
            
            wot ?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityTrafficlightOverride(System.Int32,System.Int32)">
            <summary>
            Example here: www.gtaforums.com/topic/830463-help-with-turning-lights-green-and-causing-peds-to-crash-into-each-other/#entry1068211340
            
            0 = green
            1 = red
            2 = yellow
            changing lights may not change the behavior of vehicles
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityVelocity(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Note that the third parameter(denoted as z) is up and down with positive numbers encouraging upwards movement.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityVisible(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            unk was always 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetEntityAsNoLongerNeeded(System.Int32@)">
            <summary>
            Marks the specified entity (ped, vehicle or object) as no longer needed.
            Entities marked as no longer needed, will be deleted as the engine sees fit.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetPedAsNoLongerNeeded(System.Int32@)">
            <summary>
            This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetVehicleAsNoLongerNeeded(System.Int32@)">
            <summary>
            This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.SetObjectAsNoLongerNeeded(System.Int32@)">
            <summary>
            This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.StopEntityAnim(System.Int32,System.String,System.String,System.Single)">
            <summary>
            
            
            RAGEPluginHook list: docs.ragepluginhook.net/html/62951c37-a440-478c-b389-c471230ddfc5.htm
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.StopSynchronizedEntityAnim(System.Int32,System.Single,System.Boolean)">
            <summary>
            p1 sync task id?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.StopSynchronizedMapEntityAnim(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.WouldEntityBeOccluded(System.UInt32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            First parameter was previously an Entity but after further research it is definitely a hash.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0x5C48B75732C8456C(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0xFD1695C5D3B05439(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0x6CE177D014502E8A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0xB328DCC3A3AA401B(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0x46F8696933A63C9B(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0xCE6294A232D03786(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0xD95CC5D2AB15A09F(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0x1F922734E259BD26(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0x490861B88F4FD846(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0x36F32DE87082343E(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0xE12ABE5E3A389A6C(System.Int32,System.Boolean)">
            <summary>
            p1 always false.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0xA80AE305E0A3044F(System.Int32,System.Boolean)">
            <summary>
            p1 always false.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0x68B562E124CC0AEF(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0xB17BC6453F6CF5AC(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0x352E2B5CF420BF3B(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0x9EBC85ED0FFFE51C(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            p2 - mainly set as false in scripts
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0x78E8E3A640178255(System.Int32)">
            <summary>
            Related to cutscene entities. Unsure about the use.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0x2C2E3DC128F44309(System.Int32,System.Boolean)">
            <summary>
            SET_ENTITY_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0x694E00132F2823ED(System.Int32,System.Boolean)">
            <summary>
            what does it do?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0x5C3B791D580E0BC2(System.Int32,System.Single)">
            <summary>
            Only called once in the scripts.
            
            Related to weapon objects.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0x1A092BB0C3808B96(System.Int32,System.Boolean)">
            <summary>
            SET_ENTITY_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0xC34BC448DA29F5E9(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0xCEA7C8E1B48FF68C(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0xD7B80E7C3BEFC396(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Entity.Unknown._0xDC6F8601FAF2E893(System.Int32,System.Boolean)">
            <summary>
            SET_ENTITY_
            
            x360 Hash: 0xA0466A69
            
            Only called within 1 script for x360. fm_mission_controller and it used on an object. 
            
            Ran after these 2 natives,
            set_object_targettable(uParam0, 0);
            set_entity_invincible(uParam0, 1);
            </summary>				
        </member>
        <member name="T:RAGE.Game.Event">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Event.AddShockingEventAtPosition(System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            duration is float here
            
            Event types- camx.me/gtav/tasks/shockingevents.txt
            </summary>				
        </member>
        <member name="M:RAGE.Game.Event.AddShockingEventForEntity(System.Int32,System.Int32,System.Single)">
            <summary>
            duration is float here
            
            Event types - camx.me/gtav/tasks/shockingevents.txt
            </summary>				
        </member>
        <member name="M:RAGE.Game.Event.BlockDecisionMakerEvent(System.UInt32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Event.ClearDecisionMakerEventResponse(System.UInt32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Event.IsShockingEventInSphere(System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Some events that i found, not sure about them, but seems to have logic based on my tests:
            
                    82 - dead body
                    86 - explosion
                    87 - fire
                    88 - shooting, fire extinguisher in use
                    89 - shooting
                    93 - ped using horn
                    95 - ped receiving melee attack
                    102 - living ped receiving shot
                    104 - player thrown grenade, tear gas, smoke grenade, jerry can dropping gasoline
                    105 - melee attack against veh
                    106 - player running
                    108 - vehicle theft
                    112 - melee attack
                    113 - veh rollover ped
                    114 - dead ped receiving shot
                    116 - aiming at ped
                    121 - armed
            
            
            Here is full dump of shocking event types from the exe camx.me/gtav/tasks/shockingevents.txt 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Event.RemoveAllShockingEvents(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Event.RemoveShockingEvent(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Event.RemoveShockingEventSpawnBlockingAreas">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Event.SetDecisionMaker(System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Event.SuppressAgitationEventsNextFrame">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Event.SuppressShockingEventsNextFrame">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Event.SuppressShockingEventTypeNextFrame(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Event.UnblockDecisionMakerEvent(System.UInt32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Files">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Files.GetDlcVehicleData(System.Int32,System.Int32@)">
            <summary>
            dlcVehicleIndex takes a number from 0 - GET_NUM_DLC_VEHICLES() - 1.
            outData is a struct of 3 8-byte items.
            The Second item in the struct (Hash )(outData + 1) is the vehicle hash.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetDlcVehicleFlags(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetDlcVehicleModel(System.Int32)">
            <summary>
            dlcVehicleIndex is 0 to GET_NUM_DLC_VEHICLS() - 1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetDlcWeaponComponentData(System.Int32,System.Int32,System.Int32@)">
            <summary>
            p0 seems to be the weapon index
            p1 seems to be the weapon component index
            struct DlcComponentData{
            int attachBone;
            int padding1;
            int bActiveByDefault;
            int padding2;
            int unk;
            int padding3;
            int componentHash;
            int padding4;
            int unk2;
            int padding5;
            int componentCost;
            int padding6;
            char nameLabel64;
            char descLabel64;
            };
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetDlcWeaponData(System.Int32,System.Int32@)">
            <summary>
            
            dlcWeaponIndex takes a number from 0 - GET_NUM_DLC_WEAPONS() - 1.
            struct DlcWeaponData
            {
            int emptyCheck; //use DLC1::_IS_DLC_DATA_EMPTY on this
            int padding1;
            int weaponHash;
            int padding2;
            int unk;
            int padding3;
            int weaponCost;
            int padding4;
            int ammoCost;
            int padding5;
            int ammoType;
            int padding6;
            int defaultClipSize;
            int padding7;
            char nameLabel64;
            char descLabel64;
            char desc2Label64; // usually the + name
            char upperCaseNameLabel64;
            };
            </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetForcedComponent(System.UInt32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetHashNameForComponent(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetHashNameForProp(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetNumDlcVehicles">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetNumDlcWeapons">
            <summary>
            Gets the total number of DLC weapons.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetNumDlcWeaponComponents(System.Int32)">
            <summary>
            Allowed Values from 0 - DLC1::GET_NUM_DLC_WEAPONS() - 1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetNumDecorations(System.Int32)">
            <summary>
            only documented to be continued...
            </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetNumForcedComponents(System.UInt32)">
            <summary>
            Returns number of possible values of the componentId argument of GET_FORCED_COMPONENT.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetShopPedComponent(System.UInt32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetShopPedOutfit(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetPropFromOutfit(System.Int32,System.Int32,System.Int32@)">
            <summary>
            outfit = a structure passing though it - see GET_SHOP_PED_QUERY_OUTFIT
            slot - outfit slot
            item - hold 3 ints in a struct, you can use Vector3 structure
            
            GET_SHOP_PED_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetShopPedOutfitLocate(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetShopPedQueryComponent(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetShopPedQueryOutfit(System.Int32,System.Int32@)">
            <summary>
            struct Outfit_s
             {
                 int mask, torso, pants, parachute, shoes, misc1, tops1, armour, crew, tops2, hat, glasses, earpiece;
                  int maskTexture, torsoTexture, pantsTexture, parachuteTexture, shoesTexture, misc1Texture, tops1Texture, 
                     armourTexture, crewTexture, tops2Texture, hatTexture, glassesTexture, earpieceTexture;
                };
            </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetShopPedQueryProp(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetVariantComponent(System.UInt32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.InitShopPedComponent(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.InitShopPedProp(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.IsDlcDataEmpty(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.IsDlcVehicleMod(System.Int32)">
            <summary>
            Use _GET_VEHICLE_MOD_DATA for modData
            </summary>				
        </member>
        <member name="M:RAGE.Game.Files.GetNumPropsFromOutfit(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            character is 0 for Michael, 1 for Franklin, 2 for Trevor, 3 for freemode male, and 4 for freemode female.
            
            componentId is between 0 and 11 and corresponds to the usual component slots.
            
            p1 could be the outfit number; unsure.
            
            p2 is usually -1; unknown function.
            
            p3 appears to be a boolean flag; unknown function.
            
            p4 is usually -1; unknown function.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Files.Unknown._0x341DE7ED1D2A1BFD(System.UInt32,System.UInt32,System.Int32)">
            <summary>
            6,000+ calls from scripts, all with either 0 or 1 for p2, thats a boolean in my book
            
            ---
             ^ The last one is the componentId
            iVar8 = dlc1::get_hash_name_for_component(iParam0, 8, ped::get_ped_drawable_variation(iParam0, 8), ped::get_ped_texture_variation(iParam0, 8));
                             if (dlc1::_0x341DE7ED1D2A1BFD(iVar8, 240476421, 8))
            </summary>				
        </member>
        <member name="M:RAGE.Game.Files.Unknown._0xC098810437312FFF(System.Int32)">
            <summary>
            Use _GET_VEHICLE_MOD_DATA for modData
            
            Appears to be a GET_DLC_VEHICLE_MOD_ native.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Files.Unknown._0xE1CA84EBF72E691D(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.Unknown._0x017568A8182D98A6(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.Unknown._0xC17AD0E5752BECDA(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.Unknown._0xD40AAC51E8E4C663(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.Unknown._0xA9F9C2E0FDE11CBB(System.Int32,System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.Unknown._0x5D5CAFF661DDF6FC(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.Unknown._0xFF56381874F82086(System.Int32,System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.Unknown._0xD81B7F27BC773E66(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.Unknown._0x50F457823CE6EB5F(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Files.Unknown._0xF3FBE2D50A6A8C28(System.Int32,System.Boolean)">
            <summary>
            characters
            
            0: Michael
            1: Franklin
            2: Trevor
            3: MPMale
            4: MPFemale
            </summary>				
        </member>
        <member name="T:RAGE.Game.Fire">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Fire.AddExplosion(System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Boolean,System.Single,System.Boolean)">
            <summary>
            BOOL isAudible = If explosion makes a sound.
            BOOL isInvisible = If the explosion is invisible or not.
            
            enum ExplosionTypes
            {
                EXPLOSION_GRENADE,
                EXPLOSION_GRENADELAUNCHER,
                EXPLOSION_STICKYBOMB,
                EXPLOSION_MOLOTOV,
                EXPLOSION_ROCKET,
                EXPLOSION_TANKSHELL,
                EXPLOSION_HI_OCTANE,
                EXPLOSION_CAR,
                EXPLOSION_PLANE,
                EXPLOSION_PETROL_PUMP,
                EXPLOSION_BIKE,
                EXPLOSION_DIR_STEAM,
                EXPLOSION_DIR_FLAME,
                EXPLOSION_DIR_WATER_HYDRANT,
                EXPLOSION_DIR_GAS_CANISTER,
                EXPLOSION_BOAT,
                EXPLOSION_SHIP_DESTROY,
                EXPLOSION_TRUCK,
                EXPLOSION_BULLET,
                EXPLOSION_SMOKEGRENADELAUNCHER,
                EXPLOSION_SMOKEGRENADE,
                EXPLOSION_BZGAS,
                EXPLOSION_FLARE,
                EXPLOSION_GAS_CANISTER,
                EXPLOSION_EXTINGUISHER,
                EXPLOSION_PROGRAMMABLEAR,
                EXPLOSION_TRAIN,
                EXPLOSION_BARREL,
                EXPLOSION_PROPANE,
                EXPLOSION_BLIMP,
                EXPLOSION_DIR_FLAME_EXPLODE,
                EXPLOSION_TANKER,
                EXPLOSION_PLANE_ROCKET,
                EXPLOSION_VEHICLE_BULLET,
                EXPLOSION_GAS_TANK,
                EXPLOSION_BIRD_CRAP
            };
            </summary>				
        </member>
        <member name="M:RAGE.Game.Fire.AddExplosionWithUserVfx(System.Single,System.Single,System.Single,System.Int32,System.UInt32,System.Single,System.Boolean,System.Boolean,System.Single)">
            <summary>
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Fire.AddOwnedExplosion(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Boolean,System.Single)">
            <summary>
            BOOL isAudible = If explosion makes a sound.
            BOOL isInvisible = If the explosion is invisible or not.
            
            enum ExplosionTypes
            {
                EXPLOSION_GRENADE,
                EXPLOSION_GRENADELAUNCHER,
                EXPLOSION_STICKYBOMB,
                EXPLOSION_MOLOTOV,
                EXPLOSION_ROCKET,
                EXPLOSION_TANKSHELL,
                EXPLOSION_HI_OCTANE,
                EXPLOSION_CAR,
                EXPLOSION_PLANE,
                EXPLOSION_PETROL_PUMP,
                EXPLOSION_BIKE,
                EXPLOSION_DIR_STEAM,
                EXPLOSION_DIR_FLAME,
                EXPLOSION_DIR_WATER_HYDRANT,
                EXPLOSION_DIR_GAS_CANISTER,
                EXPLOSION_BOAT,
                EXPLOSION_SHIP_DESTROY,
                EXPLOSION_TRUCK,
                EXPLOSION_BULLET,
                EXPLOSION_SMOKEGRENADELAUNCHER,
                EXPLOSION_SMOKEGRENADE,
                EXPLOSION_BZGAS,
                EXPLOSION_FLARE,
                EXPLOSION_GAS_CANISTER,
                EXPLOSION_EXTINGUISHER,
                EXPLOSION_PROGRAMMABLEAR,
                EXPLOSION_TRAIN,
                EXPLOSION_BARREL,
                EXPLOSION_PROPANE,
                EXPLOSION_BLIMP,
                EXPLOSION_DIR_FLAME_EXPLODE,
                EXPLOSION_TANKER,
                EXPLOSION_PLANE_ROCKET,
                EXPLOSION_VEHICLE_BULLET,
                EXPLOSION_GAS_TANK,
                EXPLOSION_BIRD_CRAP
            };
            </summary>				
        </member>
        <member name="M:RAGE.Game.Fire.GetClosestFirePos(RAGE.Vector3,System.Single,System.Single,System.Single)">
            <summary>
            Returns TRUE if it found something. FALSE if not.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Fire.GetNumberOfFiresInRange(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Fire.GetPedInsideExplosionArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns a handle to the first entity within the a circle spawned inside the 2 points from a radius. It could return a ped or an entity, but the scripts expect a ped, but still check if its a ped.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Fire.IsEntityOnFire(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Fire.IsExplosionInAngledArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Fire.IsExplosionInArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Fire.IsExplosionInSphere(System.Int32,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Fire.RemoveScriptFire(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Fire.StartEntityFire(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Fire.StartScriptFire(System.Single,System.Single,System.Single,System.Int32,System.Boolean)">
            <summary>
            Starts a fire:
            
            xyz: Location of fire
            maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.
            isGasFire: Whether or not the fire is powered by gasoline.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Fire.StopEntityFire(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Fire.StopFireInRange(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Fire.Unknown._0x6070104B699B2EF4(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Graphics">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Graphics.AddDecal(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            decal types:
            
            public enum DecalTypes
            {
                splatters_blood = 1010,
                splatters_blood_dir = 1015,
                splatters_blood_mist = 1017,
                splatters_mud = 1020,
                splatters_paint = 1030,
                splatters_water = 1040,
                splatters_water_hydrant = 1050,
                splatters_blood2 = 1110,
                weapImpact_metal = 4010,
                weapImpact_concrete = 4020,
                weapImpact_mattress = 4030,
                weapImpact_mud = 4032,
                weapImpact_wood = 4050,
                weapImpact_sand = 4053,
                weapImpact_cardboard = 4040,
                weapImpact_melee_glass = 4100,
                weapImpact_glass_blood = 4102,
                weapImpact_glass_blood2 = 4104,
                weapImpact_shotgun_paper = 4200,
                weapImpact_shotgun_mattress,
                weapImpact_shotgun_metal,
                weapImpact_shotgun_wood,
                weapImpact_shotgun_dirt,
                weapImpact_shotgun_tvscreen,
                weapImpact_shotgun_tvscreen2,
                weapImpact_shotgun_tvscreen3,
                weapImpact_melee_concrete = 4310,
                weapImpact_melee_wood = 4312,
                weapImpact_melee_metal = 4314,
                burn1 = 4421,
                burn2,
                burn3,
                burn4,
                burn5,
                bang_concrete_bang = 5000,
                bang_concrete_bang2,
                bang_bullet_bang,
                bang_bullet_bang2 = 5004,
                bang_glass = 5031,
                bang_glass2,
                solidPool_water = 9000,
                solidPool_blood,
                solidPool_oil,
                solidPool_petrol,
                solidPool_mud,
                porousPool_water,
                porousPool_blood,
                porousPool_oil,
                porousPool_petrol,
                porousPool_mud,
                porousPool_water_ped_drip,
                liquidTrail_water = 9050
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.AddEntityIcon(System.Int32,System.String)">
            <summary>
            Example:
            GRAPHICS::ADD_ENTITY_ICON(a_0, MP_Arrow);
            
            I tried this and nothing happened...
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.AddPetrolDecal(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.AddClanDecalToVehicle(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            Now has 15 parameters, previous declaration:
            BOOL _0x428BDCB9DA58DA53(Any p0, Any p1, Any p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float p12, Any p13)
            
            boneIndex is always chassis_dummy in the scripts. The x/y/z params are location relative to the chassis bone. They are usually rotations and measurements. Havent reversed which are what yet.
            
            Scale is how big the decal will be.
            
            p13 is always 0.
            
            For alpha, 200 seems to match what the game is doing, I think. I dont have access to the new scripts to see what this parameter is, but based on guessing this seems (kind of) accurate.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.GetScreenEffectIsActive(System.String)">
            <summary>
            Returns whether the specified screen effect is active.
            See the effects list in _START_SCREEN_EFFECT
            
            Example and list of screen FX: www.pastebin.com/dafBAjs0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.StartScreenEffect(System.String,System.Int32,System.Boolean)">
            <summary>
            playLength - is how long to play the effect for in milliseconds. If 0, it plays the default length
            if loop is true, the effect wont stop until you call _STOP_SCREEN_EFFECT on it. (only loopable effects)
            
            Example and list of screen FX: www.pastebin.com/dafBAjs0
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.StopScreenEffect(System.String)">
            <summary>
            Example and list of screen FX: www.pastebin.com/dafBAjs0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.StopAllScreenEffects">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.AttachTvAudioToEntity(System.Int32)">
            <summary>
            Might be more appropriate in AUDIO?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.PushScaleformMovieFunction(System.Int32,System.String)">
            <summary>
            Push a function from the Scaleform onto the stack
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.PushScaleformMovieFunctionN(System.String)">
            <summary>
            Possibly calls global Scaleform functions - needs more research!
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.PushScaleformMovieFunctionFromHudComponent(System.Int32,System.String)">
            <summary>
            Pushes a function from the Hud component Scaleform onto the stack. Same behavior as GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION, just a hud component id instead of a Scaleform.
            
            Known components:
            19 - MP_RANK_BAR
            20 - HUD_DIRECTOR_MODE
            
            This native requires more research - all information can be found inside of hud.gfx. Using a decompiler, the different components are located under scripts\__Packages\com\rockstargames\gtav\hud\hudComponents and scripts\__Packages\com\rockstargames\gtav\Multiplayer.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.BeginTextCommandScaleformString(System.String)">
            <summary>
            Called prior to adding a text component to the UI. After doing so, GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING is called.
            
            Examples:
            GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(NUMBER);
            UI::ADD_TEXT_COMPONENT_INTEGER(GAMEPLAY::ABSI(a_1));
            GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
            
            GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(STRING);
            UI::_ADD_TEXT_COMPONENT_STRING(a_2);
            GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
            
            GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(STRTNM2);
            UI::_0x17299B63C7683A2B(v_3);
            UI::_0x17299B63C7683A2B(v_4);
            GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
            
            GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(STRTNM1);
            UI::_0x17299B63C7683A2B(v_3);
            GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.CallScaleformMovieMethod(System.Int32,System.String)">
            <summary>
            Calls the Scaleform function.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.CallScaleformMovieFunctionFloatParams(System.Int32,System.String,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calls the Scaleform function and passes the parameters as floats.
            
            The number of parameters passed to the function varies, so the end of the parameter list is represented by -1.0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.CallScaleformMovieFunctionMixedParams(System.Int32,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Calls the Scaleform function and passes both float and string parameters (in their respective order).
            
            The number of parameters passed to the function varies, so the end of the float parameters is represented by -1.0, and the end of the string parameters is represented by 0 (NULL).
            
            NOTE: The order of parameters in the function prototype is important! All float parameters must come first, followed by the string parameters.
            
            Examples:
            // function MY_FUNCTION(floatParam1, floatParam2, stringParam)
            GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, MY_FUNCTION, 10.0, 20.0, -1.0, -1.0, -1.0, String param, 0, 0, 0, 0);
            
            // function MY_FUNCTION_2(floatParam, stringParam1, stringParam2)
            GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, MY_FUNCTION_2, 10.0, -1.0, -1.0, -1.0, -1.0, String param #1, String param #2, 0, 0, 0);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.CallScaleformMovieFunctionStringParams(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Calls the Scaleform function and passes the parameters as strings.
            
            The number of parameters passed to the function varies, so the end of the parameter list is represented by 0 (NULL).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetFarShadowsSuppressed(System.Boolean)">
            <summary>
            When this is set to ON, shadows only draw as you get nearer.
            
            When OFF, they draw from a further distance.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.ClearDrawOrigin">
            <summary>
            Resets the screens draw-origin which was changed by the function GRAPHICS::SET_DRAW_ORIGIN(...) back to x=0,y=0.
            
            See GRAPHICS::SET_DRAW_ORIGIN(...) for further information.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.ClearTimecycleModifier">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.CreateCheckpoint(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a checkpoint. Returns the handle of the checkpoint.
            
            20/03/17 : Attention, checkpoints are already handled by the game itself, so you must not loop it like markers.
            
            Parameters:
             type - The type of checkpoint to create. See below for a list of checkpoint types.
             pos1 - The position of the checkpoint.
             pos2 - The position of the next checkpoint to point to.
             radius - The radius of the checkpoint.
             color - The color of the checkpoint.
             reserved - Special parameter, see below for details. Usually set to 0 in the scripts.
            
            Checkpoint types:
            0-4---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
            5-9---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
            10-14-------Ring: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
            15-19-------1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker      
            20-24-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker 
            25-29-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker    
            30-34-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker 
            35-38-------Ring: Airplane Up, Left, Right, UpsideDown
            39----------?
            40----------Ring: just a ring
            41----------?
            42-44-------Cylinder w/ number (uses reserved parameter)
            45-47-------Cylinder no arrow or number
            
            If using type 42-44, reserved sets number / number and shape to display
            
            0-99------------Just numbers (0-99)
            100-109-----------------Arrow (0-9)
            110-119------------Two arrows (0-9)
            120-129----------Three arrows (0-9)
            130-139----------------Circle (0-9)
            140-149------------CycleArrow (0-9)
            150-159----------------Circle (0-9)
            160-169----Circle  w/ pointer (0-9)
            170-179-------Perforated ring (0-9)
            180-189----------------Sphere (0-9)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.CreateTrackedPoint">
            <summary>
            Creates a tracked point, useful for checking the visibility of a 3D point on screen.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DeleteCheckpoint(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DestroyTrackedPoint(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetParticleFxBloodScale(System.Boolean)">
            <summary>
            hash collision
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DisableVehicleDistantlights(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DoesParticleFxLoopedExist(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DoesVehicleHaveDecal(System.Int32,System.Int32)">
            <summary>
            This function is called before ADD_CLAN_DECAL_TO_VEHICLE to see if it needs to run. IDK if its for clan decal or not, but the 2nd parameter might be decal index? Its always passed 0. Not sure what this function really does. But it does return 0 if the clan tag is not on, and 1 if it is.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawBox(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            x,y,z = start pos
            x2,y2,z2 = end pos
            
            Draws a 3D Box between the two x,y,z coords.
            --------------
            Keep in mind that the edges of the box do only align to the worlds base-vectors. Therefore something like rotation cannot be applied. That means this function is pretty much useless, unless you want a static unicolor box somewhere.
            I recommend using a predefined function to call this.
            VB.NET
            Public Sub DrawBox(a As Vector3, b As Vector3, col As Color)
                Function.Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A)
            End Sub
            
            C#
            public void DrawBox(Vector3 a, Vector3 b, Color col)
            {
                Function.Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A);
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawLightWithRange(System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawLightWithRangeAndShadow(System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawLine(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a depth-tested line from one point to another.
            ----------------
            x1, y1, z1 : Coordinates for the first point
            x2, y2, z2 : Coordinates for the second point
            r, g, b, alpha : Color with RGBA-Values
            I recommend using a predefined function to call this.
            VB.NET
            Public Sub DrawLine(from As Vector3, to As Vector3, col As Color)
                Function.Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, to.X, to.Y, to.Z, col.R, col.G, col.B, col.A)
            End Sub
            
            C#
            public void DrawLine(Vector3 from, Vector3 to, Color col)
            {
                Function.Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, to.X, to.Y, to.Z, col.R, col.G, col.B, col.A);
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawMarker(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            enum MarkerTypes
            {
                MarkerTypeUpsideDownCone = 0,
             MarkerTypeVerticalCylinder = 1,
               MarkerTypeThickChevronUp = 2,
             MarkerTypeThinChevronUp = 3,
              MarkerTypeCheckeredFlagRect = 4,
              MarkerTypeCheckeredFlagCircle = 5,
                MarkerTypeVerticleCircle = 6,
             MarkerTypePlaneModel = 7,
             MarkerTypeLostMCDark = 8,
             MarkerTypeLostMCLight = 9,
                MarkerTypeNumber0 = 10,
               MarkerTypeNumber1 = 11,
               MarkerTypeNumber2 = 12,
               MarkerTypeNumber3 = 13,
               MarkerTypeNumber4 = 14,
               MarkerTypeNumber5 = 15,
               MarkerTypeNumber6 = 16,
               MarkerTypeNumber7 = 17,
               MarkerTypeNumber8 = 18,
               MarkerTypeNumber9 = 19,
               MarkerTypeChevronUpx1 = 20,
               MarkerTypeChevronUpx2 = 21,
               MarkerTypeChevronUpx3 = 22,
               MarkerTypeHorizontalCircleFat = 23,
               MarkerTypeReplayIcon = 24,
                MarkerTypeHorizontalCircleSkinny = 25,
                MarkerTypeHorizontalCircleSkinny_Arrow = 26,
              MarkerTypeHorizontalSplitArrowCircle = 27,
                MarkerTypeDebugSphere = 28,
               MarkerTypeDallorSign = 29,
                MarkerTypeHorizontalBars = 30,
                MarkerTypeWolfHead = 31
            };
            
            dirX/Y/Z represent a heading on each axis in which the marker should face, alternatively you can rotate each axis independently with rotX/Y/Z (and set dirX/Y/Z all to 0).
            
            faceCamera - Rotates only the y-axis (the heading) towards the camera
            
            p19 - no effect, default value in script is 2
            
            rotate - Rotates only on the y-axis (the heading)
            
            textureDict - Name of texture dictionary to load texture from (e.g. GolfPutting)
            
            textureName - Name of texture inside dictionary to load (e.g. PuttingMarker)
            
            drawOnEnts - Draws the marker onto any entities that intersect it
            
            basically what he said, except textureDict and textureName are totally not const char, or if so, then they are always set to 0/NULL/nullptr in every script I checked, eg:
            
            bj.c: graphics::draw_marker(6, vParam0, 0f, 0f, 1f, 0f, 0f, 0f, 4f, 4f, 4f, 240, 200, 80, iVar1, 0, 0, 2, 0, 0, 0, false);
            
            his is what I used to draw an amber downward pointing chevron V, has to be redrawn every frame.  The 180 is for 180 degrees rotation around the Y axis, the 50 is alpha, assuming max is 100, but it will accept 255.
            
            GRAPHICS::DRAW_MARKER(2, v.x, v.y, v.z + 2, 0, 0, 0, 0, 180, 0, 2, 2, 2, 255, 128, 0, 50, 0, 1, 1, 0, 0, 0, 0);
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawPoly(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            x/y/z - Location of a vertex (in world coords), presumably.
            ----------------
            x1, y1, z1     : Coordinates for the first point
            x2, y2, z2     : Coordinates for the second point
            x3, y3, z3     : Coordinates for the third point
            r, g, b, alpha : Color with RGBA-Values
            
            Keep in mind that only one side of the drawn triangle is visible: Its the side, in which the vector-product of the vectors heads to: (b-a)x(c-a) Or (b-a)x(c-b).
            But be aware: The function seems to work somehow differently. I have trouble having them drawn in rotated orientation. Try it yourself and if you somehow succeed, please edit this and post your solution.
            I recommend using a predefined function to call this.
            VB.NET
            Public Sub DrawPoly(a As Vector3, b As Vector3, c As Vector3, col As Color)
                Function.Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A)
            End Sub
            
            C#
            public void DrawPoly(Vector3 a, Vector3 b, Vector3 c, Color col)
            {
                Function.Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A);
            }
            BTW: Intersecting triangles are not supported: They overlap in the order they were called.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawRect(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle on the screen.
            
            -x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)
            
            -y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)
            
            -width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)
            
            -height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)
            
            -R: Red part of the color. (0-255)
            
            -G: Green part of the color. (0-255)
            
            -B: Blue part of the color. (0-255)
            
            -A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)
            
            The total number of rectangles to be drawn in one frame is apparently limited to 399.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawScaleformMovie(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawScaleformMovie3d(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawScaleformMovie3dNonAdditive(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            what the heck does this one do differently from the one above?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawScaleformMovieFullscreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            unk is not used so no need
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawScaleformMovieFullscreenMasked(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawSpotLightWithShadow(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawSpotLight(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Parameters:
             pos - coordinate where the spotlight is located
             dir - the direction vector the spotlight should aim at from its current position
             r,g,b - color of the spotlight
             distance - the maximum distance the light can reach
             brightness - the brightness of the light
             roundness - smoothness of the circle edge
             radius - the radius size of the spotlight
             falloff - the falloff size of the lights edge (example: www.i.imgur.com/DemAWeO.jpg)
            
            Example in C# (spotlight aims at the closest vehicle):
            Vector3 myPos = Game.Player.Character.Position;
            Vehicle nearest = World.GetClosestVehicle(myPos , 1000f);
            Vector3 destinationCoords = nearest.Position;
            Vector3 dirVector = destinationCoords - myPos;
            dirVector.Normalize();
            Function.Call(Hash.DRAW_SPOT_LIGHT, pos.X, pos.Y, pos.Z, dirVector.X, dirVector.Y, dirVector.Z, 255, 255, 255, 100.0f, 1f, 0.0f, 13.0f, 1f);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawSprite(System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a 2D sprite on the screen.
            
            Parameters:
            textureDict - Name of texture dictionary to load texture from (e.g. CommonMenu, MPWeaponsCommon, etc.)
            
            textureName - Name of texture to load from texture dictionary (e.g. last_team_standing_icon, tennis_icon, etc.)
            
            screenX/Y - Screen offset (0.5 = center)
            scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)
            
            heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
            
            red,green,blue - Sprite color (default = 255/255/255)
            
            alpha - opacity level
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawTvChannel(System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            All calls to this native are preceded by calls to GRAPHICS::_0x61BB1D9B3A95D802 and GRAPHICS::_0xC6372ECD45D73BCD, respectively.
            
            act_cinema.ysc, line 1483:
            UI::SET_HUD_COMPONENT_POSITION(15, 0.0, -0.0375);
            UI::SET_TEXT_RENDER_ID(l_AE);
            GRAPHICS::_0x61BB1D9B3A95D802(4);
            GRAPHICS::_0xC6372ECD45D73BCD(1);
            if (GRAPHICS::_0x0AD973CA1E077B60(${movie_arthouse})) {
                GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 0.7375, 1.0, 0.0, 255, 255, 255, 255);
            } else { 
                GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);
            }
            
            am_mp_property_int.ysc, line 102545:
            if (ENTITY::DOES_ENTITY_EXIST(a_2._f3)) {
                if (UI::IS_NAMED_RENDERTARGET_LINKED(ENTITY::GET_ENTITY_MODEL(a_2._f3))) {
                    UI::SET_TEXT_RENDER_ID(a_2._f1);
                    GRAPHICS::_0x61BB1D9B3A95D802(4);
                    GRAPHICS::_0xC6372ECD45D73BCD(1);
                    GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);
                    if (GRAPHICS::GET_TV_CHANNEL() == -1) {
                        sub_a8fa5(a_2, 1);
                    } else { 
                        sub_a8fa5(a_2, 1);
                        GRAPHICS::ATTACH_TV_AUDIO_TO_ENTITY(a_2._f3);
                    }
                    UI::SET_TEXT_RENDER_ID(UI::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID());
                }
            }
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.EnableAlienBloodVfx(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.EnableClownBloodVfx(System.Boolean)">
            <summary>
            Creates cartoon effect when Michel smokes the weed
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.EnableMovieSubtitles(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.PopScaleformMovieFunctionVoid">
            <summary>
            Pops and calls the Scaleform function on the stack
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.PopScaleformMovieFunction">
            <summary>
            Pops and calls the Scaleform movie on the stack. Returns data from the function (not sure if this is a string).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.EndTextCommandScaleformString">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.EndTextCommandScaleformString2">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.FadeDecalsInRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fades nearby decals within the range specified
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.GetActiveScreenResolution(System.Int32@,System.Int32@)">
            <summary>
            Returns current screen resolution.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.GetAspectRatio(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.GetDecalWashLevel(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.GetIsHidef">
            <summary>
            false = Any resolution  1280x720
            true = Any resolution = 1280x720
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.GetIsWidescreen">
            <summary>
            Setting Aspect Ratio Manually in game will return:
            
            false - for Narrow format Aspect Ratios (3:2, 4:3, 5:4, etc. )
            true - for Wide format Aspect Ratios (5:3, 16:9, 16:10, etc. )
            
            Setting Aspect Ratio to Auto in game will return false or true based on the actual set Resolution Ratio.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.ReturnTwo(System.Int32)">
            <summary>
            It returns two lol
            
            li r3, 2
            blr
            
            thats all it does.
            
            mov dword ptr rax, 2
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.GetSafeZoneSize">
            <summary>
            Gets the scale of safe zone. if the safe zone size scale is max, it will return 1.0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SittingTv(System.Int32)">
            <summary>
            Unsurprisingly, this native is incorrectly named. Instead, this returns the name of the scaleform movie.
            
            HASH COLLISION. PLEASE REMOVE NATIVE NAME.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.IsParticleFxDelayedBlink">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.GetScreenCoordFromWorldCoord(System.Single,System.Single,System.Single,System.Single@,System.Single@)">
            <summary>
            Convert a world coordinate into its relative screen coordinate.  (WorldToScreen)
            
            Returns a boolean; whether or not the operation was successful. It will return false if the coordinates given are not visible to the rendering camera.
            
            
            For .NET users...
            
            VB:
            Public Shared Function World3DToScreen2d(pos as vector3) As Vector2
            
                    Dim x2dp, y2dp As New Native.OutputArgument
            
                    Native.Function.Call(Of Boolean)(Native.Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.x, pos.y, pos.z, x2dp, y2dp)
                    Return New Vector2(x2dp.GetResult(Of Single), y2dp.GetResult(Of Single))
                  
                End Function
            
            C#:
            Vector2 World3DToScreen2d(Vector3 pos)
                {
                    var x2dp = new OutputArgument();
                    var y2dp = new OutputArgument();
            
                    Function.Callbool(Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.X, pos.Y, pos.Z, x2dp, y2dp);
                    return new Vector2(x2dp.GetResultfloat(), y2dp.GetResultfloat());
                }
            //USE VERY SMALL VALUES FOR THE SCALE OF RECTS/TEXT because it is dramatically larger on screen than in 3D, e.g 0.05 small.
            
            Used to be called _WORLD3D_TO_SCREEN2D
            
            I thought we lost you from the scene forever. It does seem however that calling SET_DRAW_ORIGIN then your natives, then ending it. Seems to work better for certain things such as keeping boxes around people for a predator missile e.g.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.GetScreenResolution(System.Int32@,System.Int32@)">
            <summary>
            int screenresx,screenresy;
            GET_SCREEN_RESOLUTION(ANDcreenresx,ANDcreenresy);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.GetTextureResolution(System.String,System.String)">
            <summary>
            Returns the texture resolution of the passed texture dict+name.
            
            Note: Most texture resolutions are doubled compared to the console version of the game.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.GetTimecycleModifierIndex">
            <summary>
            Only use for this in the PC scripts is:
            
            if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)
            
            For a full list, see here: pastebin.com/cnk7FTF2
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.GetTvChannel">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.GetTvVolume">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.IsNightvisionActive">
            <summary>
            Gets whether or not NIGHTVISION is Active.
            
            Note:  When nightvision is actually active, this native will return TRUE!
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.IsSeethroughActive">
            <summary>
            Returns whether or not SEETHROUGH is active.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.HasScaleformContainerMovieLoadedIntoParent(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.HasNamedScaleformMovieLoaded(System.String)">
            <summary>
            Pretty sure its the real name (not 100% sure so I added the _ prefix); can someone else confirm it?
            
            Only values used in the scripts are:
            
            heist_mp
            heistmap_mp
            instructional_buttons
            heist_pre
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.HasScaleformMovieLoaded(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.HasHudScaleformLoaded(System.Int32)">
            <summary>
            Check to see if hud component Scaleform has loaded?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.HasStreamedTextureDictLoaded(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.IsDecalAlive(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.IsTrackedPointVisible(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.LoadTvChannel(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.LoadMovieMeshSet(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.MoveVehicleDecals(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.PopTimecycleModifier">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.PushTimecycleModifier">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.ReleaseMovieMeshSet(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.RemoveDecal(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.RemoveDecalsFromObject(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.RemoveDecalsFromObjectFacing(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.RemoveDecalsFromVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.RemoveDecalsInRange(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.RemoveParticleFx(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.RemoveParticleFxFromEntity(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.RemoveParticleFxInRange(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.RequestScaleformMovie(System.String)">
            <summary>
            Gets a new native after almost every update.
            
            Update 1.0.393.2
            0x67D02A194A2FC2BD
            
            Update 1.0.463.1
            0xC97D787CE7726A2F
            
            Update 1.0.505.2
            0x36ECDA4DD9A3F08D
            
            Update 1.0.573.1
            0xE3C796DC28BC3254
            
            Update 1.0.678.1
            0x2F14983962462691
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.RequestScaleformMovieInstance(System.String)">
            <summary>
            Also used by 0x67D02A194A2FC2BD
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.RequestScaleformMovieInteractive(System.String)">
            <summary>
            Similar to REQUEST_SCALEFORM_MOVIE, but seems to be some kind of interactive scaleform movie?
            
            These seem to be the only scaleforms ever requested by this native:
            breaking_news
            desktop_pc
            ECG_MONITOR
            Hacking_PC
            TEETH_PULLING
            
            Note: Unless this hash is out-of-order, this native is next-gen only.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.RequestHudScaleform(System.Int32)">
            <summary>
            http://gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/?p=1068285912
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.RequestStreamedTextureDict(System.String,System.Boolean)">
            <summary>
            last param isnt a toggle
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.ResetParticleFxAssetOldToNew(System.String)">
            <summary>
            console hash: 0x9E8D8B72
            Resets the effect of _SET_PARTICLE_FX_ASSET_OLD_TO_NEW
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.ScreenDrawPositionEnd">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.PushScaleformMovieFunctionParameterBool(System.Boolean)">
            <summary>
            Pushes a boolean for the Scaleform function onto the stack.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.PushScaleformMovieFunctionParameterFloat(System.Single)">
            <summary>
            Pushes a float for the Scaleform function onto the stack.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.PushScaleformMovieFunctionParameterInt(System.Int32)">
            <summary>
            Pushes an integer for the Scaleform function onto the stack.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.PushScaleformMovieFunctionParameterString(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetBlackout(System.Boolean)">
            <summary>
            Disables all emissive textures and lights like city lights, car lights, cop car lights. Particles still emit light
            
            Used in Humane Labs Heist for EMP.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetCheckpointCylinderHeight(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Sets the cylinder height of the checkpoint.
            
            Parameters:
             nearHeight - The height of the checkpoint when inside of the radius.
             farHeight - The height of the checkpoint when outside of the radius.
             radius - The radius of the checkpoint.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetCheckpointIconRgba(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the checkpoint icon color.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetCheckpointRgba(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the checkpoint color.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetDrawOrigin(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Sets the on-screen drawing origin for draw-functions (which is normally x=0,y=0 in the upper left corner of the screen) to a world coordinate.
            From now on, the screen coordinate which displays the given world coordinate on the screen is seen as x=0,y=0.
            
            Example in C#:
            Vector3 boneCoord = somePed.GetBoneCoord(Bone.SKEL_Head);
            Function.Call(Hash.SET_DRAW_ORIGIN, boneCoord.X, boneCoord.Y, boneCoord.Z, 0);
            Function.Call(Hash.DRAW_SPRITE, helicopterhud, hud_corner, -0.01, -0.015, 0.013, 0.013, 0.0, 255, 0, 0, 200);
            Function.Call(Hash.DRAW_SPRITE, helicopterhud, hud_corner, 0.01, -0.015, 0.013, 0.013, 90.0, 255, 0, 0, 200);
            Function.Call(Hash.DRAW_SPRITE, helicopterhud, hud_corner, -0.01, 0.015, 0.013, 0.013, 270.0, 255, 0, 0, 200);
            Function.Call(Hash.DRAW_SPRITE, helicopterhud, hud_corner, 0.01, 0.015, 0.013, 0.013, 180.0, 255, 0, 0, 200);
            Function.Call(Hash.CLEAR_DRAW_ORIGIN);
            
            Result: www11.pic-upload.de/19.06.15/bkqohvil2uao.jpg
            If the pedestrian starts walking around now, the sprites are always around her head, no matter where the head is displayed on the screen.
            
            This function also effects the drawing of texts and other UI-elements.
            The effect can be reset by calling GRAPHICS::CLEAR_DRAW_ORIGIN().
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetEntityIconColor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetEntityIconVisibility(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetFlash(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Purpose of p0 and p1 unknown.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetNightvision(System.Boolean)">
            <summary>
            Enables Night Vision.
            
            Example:
            C#: Function.Call(Hash.SET_NIGHTVISION, true);
            C++: GRAPHICS::SET_NIGHTVISION(true);
            
            BOOL toggle:
            true = turns night vision on for your player.
            false = turns night vision off for your player.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetNoiseoveride(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetNoisinessoveride(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetParticleFxCamInsideNonplayerVehicle(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetParticleFxCamInsideVehicle(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetParticleFxLoopedAlpha(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetParticleFxLoopedColour(System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            only works on some fxs
            
            p4 = 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetParticleFxLoopedEvolution(System.Int32,System.String,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetParticleFxLoopedRange(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetParticleFxLoopedOffsets(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetParticleFxLoopedScale(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetParticleFxNonLoopedAlpha(System.Single)">
            <summary>
            Usage example for C#:
            
                    Function.Call(Hash.SET_PARTICLE_FX_NON_LOOPED_ALPHA, new InputArgument { 0.1f });
            
            Note: the argument alpha ranges from 0.0f-1.0f !
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetParticleFxNonLoopedColour(System.Single,System.Single,System.Single)">
            <summary>
            only works on some fxs
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetParticleFxAssetOldToNew(System.String,System.String)">
            <summary>
            console hash: 0xC92719A7
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetParticleFxShootoutBoat(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetScaleformMovieAsNoLongerNeeded(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetScaleformMovieToUseSystemTime(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.ScreenDrawPositionBegin(System.Int32,System.Int32)">
            <summary>
            Seems to move all the drawn text on the screen to given coordinates.
            It also removed all the drawn sprites of my screen so not to sure what the exact function is.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.ScreenDrawPositionRatio(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Set2dLayer(System.Int32)">
            <summary>
            Called before drawing stuff.
            
            Examples:
            GRAPHICS::_61BB1D9B3A95D802(7);
            GRAPHICS::DRAW_RECT(0.5, 0.5, 3.0, 3.0, v_4, v_5, v_6, a_0._f172, 0);
            
            GRAPHICS::_61BB1D9B3A95D802(1);
            GRAPHICS::DRAW_RECT(0.5, 0.5, 1.5, 1.5, 0, 0, 0, 255, 0);
            
            Appears to be the layer its drawn on 
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetSeethrough(System.Boolean)">
            <summary>
            Toggles Heatvision on/off.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetStreamedTextureDictAsNoLongerNeeded(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetTimecycleModifier(System.String)">
            <summary>
            Loads the specified timecycle modifier. Modifiers are defined separately in another file (e.g. timecycle_mods_1.xml)
            
            Parameters:
            modifierName - The modifier to load (e.g. V_FIB_IT3, scanline_cam, etc.)
            
            For a full list, see here: pastebin.com/kVPwMemE
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetTimecycleModifierStrength(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetTrackedPointInfo(System.Int32,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetTransitionTimecycleModifier(System.String,System.Single)">
            <summary>
            For a full list, see here: pastebin.com/kVPwMemE
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetTvAudioFrontend(System.Boolean)">
            <summary>
            Might be more appropriate in AUDIO?
            
            Rockstar made it like this.
            
            Probably changes tvs from being a 3d audio to being global audio
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetTvChannel(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetTvVolume(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.StartParticleFxLoopedOnEntity2(System.String,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            network fx
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.StartParticleFxLoopedOnEntityBone2(System.String,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            network fx
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.StartParticleFxNonLoopedAtCoord2(System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            network fx
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.StartParticleFxNonLoopedOnEntity2(System.String,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            network fx
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.StartParticleFxNonLoopedOnPedBone2(System.String,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            network fx
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.StartParticleFxLoopedAtCoord(System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            GRAPHICS::START_PARTICLE_FX_LOOPED_AT_COORD(scr_fbi_falling_debris, 93.7743f, -749.4572f, 70.86904f, 0f, 0f, 0f, 0x3F800000, 0, 0, 0, 0)
            
            
            p11 seems to be always 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.StartParticleFxLoopedOnEntity(System.String,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            list: pastebin.com/N9unUFWY
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.StartParticleFxLoopedOnEntityBone(System.String,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.StartParticleFxLoopedOnPedBone(System.String,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.StartParticleFxNonLoopedAtCoord(System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            GRAPHICS::START_PARTICLE_FX_NON_LOOPED_AT_COORD(scr_paleto_roof_impact, -140.8576f, 6420.789f, 41.1391f, 0f, 0f, 267.3957f, 0x3F800000, 0, 0, 0);
            
            Axis - Invert Axis Flags
            
            list: pastebin.com/N9unUFWY
            
            
            -------------------------------------------------------------------
            C#
            
            Function.Callint(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, = you are calling this function.
            
            char effectname = This is an in-game effect name, for e.g. scr_fbi4_trucks_crash is used to give the effects when truck crashes etc
            
            float x, y, z pos = this one is Simple, you just have to declare, where do you want this effect to take place at, so declare the ordinates
            
            float xrot, yrot, zrot = Again simple? just mention the value in case if you want the effect to rotate.
            
            float scale = is declare the scale of the effect, this may vary as per the effects for e.g 1.0f
            
            bool xaxis, yaxis, zaxis = To bool the axis values.
            
            example:
            Function.Callint(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, scr_fbi4_trucks_crash, GTA.Game.Player.Character.Position.X, GTA.Game.Player.Character.Position.Y, GTA.Game.Player.Character.Position.Z + 4f, 0, 0, 0, 5.5f, 0, 0, 0);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.StartParticleFxNonLoopedOnEntity(System.String,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Starts a particle effect on an entity for example your player.
            List: pastebin.com/N9unUFWY
            
            Example:
            C#:
            Function.Call(Hash.REQUEST_NAMED_PTFX_ASSET, scr_rcbarry2);                     Function.Call(Hash._SET_PTFX_ASSET_NEXT_CALL, scr_rcbarry2);                             Function.Call(Hash.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY, scr_clown_appears, Game.Player.Character, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 1.0, false, false, false);
            
            Internally this calls the same function as GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE
            however it uses -1 for the specified bone index, so it should be possible to start a non looped fx on an entity bone using that native
            
            -can confirm START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE does NOT work on vehicle bones.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.StartParticleFxNonLoopedOnPedBone(System.String,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(scr_sh_bong_smoke, PLAYER::PLAYER_PED_ID(), -0.025f, 0.13f, 0f, 0f, 0f, 0f, 31086, 0x3F800000, 0, 0, 0);
            
            Axis - Invert Axis Flags
            
            list: pastebin.com/N9unUFWY
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.StopParticleFxLooped(System.Int32,System.Boolean)">
            <summary>
            p1 is always 0 in the native scripts
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetFrozenRenderingDisabled(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.TransitionToBlurred(System.Single)">
            <summary>
            time in ms to transition to fully blurred screen
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.TransitionFromBlurred(System.Single)">
            <summary>
            time in ms to transition from fully blurred to normal
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.UseParticleFxAssetNextCall(System.String)">
            <summary>
             From the b678d decompiled scripts:
            
             GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(FM_Mission_Controler);
             GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(scr_apartment_mp);
             GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(scr_indep_fireworks);
             GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(scr_mp_cig_plane);
             GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(scr_mp_creator);
             GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(scr_ornate_heist);
             GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(scr_prison_break_heist_station);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetForcePedFootstepsTracks(System.Boolean)">
            <summary>
            Forces footstep tracks on all surfaces.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetForceVehicleTrails(System.Boolean)">
            <summary>
            Forces vehicle trails on all surfaces.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.WashDecalsFromVehicle(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.WashDecalsInRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.GetMaximumNumberOfPhotos">
            <summary>
            This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.SetDebugLinesAndSpheresDrawingActive(System.Boolean)">
            <summary>
            NOTE: Debugging functions are not present in the retail version of the game.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawDebugLineWithTwoColours(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            NOTE: Debugging functions are not present in the retail version of the game.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawDebugSphere(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            NOTE: Debugging functions are not present in the retail version of the game.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawDebugBox(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            NOTE: Debugging functions are not present in the retail version of the game.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawDebugCross(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            NOTE: Debugging functions are not present in the retail version of the game.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawDebugText(System.String,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            NOTE: Debugging functions are not present in the retail version of the game.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.DrawDebugText2d(System.String,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            NOTE: Debugging functions are not present in the retail version of the game.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x82ACC484FFA3B05F(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x967278682CB6967A(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x1A8E2C8B9CF4549C(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xEFABC7722293DA7C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xE35B38A27E8E7179(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xD2209BE128B5418C(System.String)">
            <summary>
            SwitchHUDFranklinOut,
            SwitchHUDMichaelOut,
            SwitchHUDOut,
            SwitchHUDTrevorOut,
            SwitchOpenFranklinOut,
            SwitchOpenMichaelIn,
            SwitchOpenNeutral
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x759650634F07B6B4(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x7FA5D82B8F58EC06">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xB9449845F73F5E9C(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xA67C35C56EB1BD9D">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x1DD2139A9A20DCE8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x27CB772218215325">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x0AE73D8DF3A762B2(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x03FC694AE06C5A20">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x6DDBF9DFFC4AC080(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x259BA6D4E6F808F1(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xD2936CAB8B58FCBD(System.Int32,System.Boolean,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x5F0F3F56635809EF(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xD39D13C9FEBF0511(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x02AC28F3A01FA04A(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x5E9DAF5A20F15908(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x25FC3E33A31AD0C9(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xB11D94BC55F41932(System.String)">
            <summary>
            Has something to do with player switch.
            
            Only possible values:
            - CSM_ST_BOX3x3
            - CSM_ST_BOX4x4
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x36F6626459D91457(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x15E33297C3E8DC60(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x92CCC17A7A2285DA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x2A251AA48B2B46DB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x4AF92ACD3141D96C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xBEB3D46BB7F043C0(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x0E4299C549F0D1F1(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xC35A6D07C93802B2">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x2BF72AD5B41AA739">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x3669F1B198DCAA4F">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x1612C45F9E3E0D44">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xEFD97FF47B745B8D(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xDE81239437E8C5A8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x02369D5C8A51FDCF(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x5E657EF1099EDD65(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x22A249A53034450A(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x1072F115DAB0717E(System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xE82728F0DE75D13A(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x799017F9E3B10112(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x2BC54A8188768488(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x29280002282F1928(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x736D7AA1B750856B(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x2C328AF17210F009(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x74C180030FDE4B69(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x5DEBD9C4DC995692">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x0A123435A26C36CD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xC9B18B4619F48F7B(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x814AF7DCAACC597B(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xBA0127DA25FD54C9(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x9B079E5221D984D3(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xDC459CFA0CCE245B(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xD801CC02177FA3F1">
            <summary>
            4 matches across 2 scripts.
            
            appcamera:
            called after UI::HIDE_HUD_AND_RADAR_THIS_FRAME() and before GRAPHICS::0x108F36CC();
            
            cellphone_controller:
            called after GRAPHICS::0xE9F2B68F(0, 0) and before GRAPHICS::0x108F36CC();
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x6A12D88881435DCA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x0A46AF8A78DC5E0A">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x346EF3ECAAAB149E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x473151EBC762C6DA">
            <summary>
            Returns an unknown value (dword_142317A08 in b944).
            Used in appcamera.ysc and maintransition.ysc
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xBB0527EC6341496D">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x2F09F7976C512404(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            only documented. to be continued...
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x393BD2275CEB7793">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xDC54A7AF8B3A14EF">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xE59343E9E96529E7">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x35FB78DC42B7BD21">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xD80A80346A45D761(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x2DE7EFA66B906036(System.Int32)">
            <summary>
            Needs a bit more research, but it seems to return an int.
            
            agency_heist3b.ysc, line 71836:
            if (CONTROLS::IS_CONTROL_JUST_PRESSED(2, 201) OR CONTROLS::IS_CONTROL_JUST_PRESSED(2, 237)) {
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(l_46, SET_INPUT_EVENT_SELECT);
                l_45 = GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION();
            }
            if (GRAPHICS::_0x768FF8961BA904D6(l_45)) {
                v_13 = GRAPHICS::_0x2DE7EFA66B906036(l_45);
                if (v_13 == 6) {
                    sub_73269(a_0);
                }
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xB2EBE8CBC58B90E9">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x6DD8F5AA635EB4B2(System.Single,System.Single,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xCB82A0BF0E3E3265(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x5B0316762AFD4A64">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x1670F8D05056F257(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x0C0C4E81E1AC60A0">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xF5BED327CEA362B1(System.Int32)">
            <summary>
            3 matches across 3 scripts. First 2 were 0, 3rd was 1. Possibly a bool.
            appcamera, appmedia, and cellphone_controller.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x0D6CA79EEEBD8CA3">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x90A78ECAA4E78453">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x459FD2C8D0AB78BC">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xEB3DAC2C86001E5E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xFE26117A5841B2FF(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xA4819F5E23E2FFAD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xA4664972A9B8F8BA(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x12995F2E53FFA601(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Only used in the golf and golf_mp script
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xA51C4B86B71652AE(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x06F761EA47C1D3ED(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xB1BB03742917A5D6(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            12 matches across 4 scripts. All 4 scripts were job creators.
            
            type ranged from 0 - 2.
            p4 was always 0.2f. Likely scale.
            assuming p5 - p8 is RGBA, the graphic is always yellow (255, 255, 0, 255).
            
            Tested but noticed nothing.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xC0416B061F2B7E5E(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x312342E1A4874F3F(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            p8 seems to always be false.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x2485D34E50A22E84(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x9CFDD90B2B844BF7(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Only appeared in Golf ANDGolf_mp. Parameters were all ptrs
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xDBAA5EC848BA2D46(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x851CD923176EBA7C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x302C91AB2D477F7E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x6D955F6A9E0295B1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x768FF8961BA904D6(System.Int32)">
            <summary>
            Seems to take data that is returned from _POP_SCALEFORM_MOVIE_FUNCTION and checks to see if its not null/empty.
            
            agency_heist3b.ysc, line 71836:
            if (CONTROLS::IS_CONTROL_JUST_PRESSED(2, 201) OR CONTROLS::IS_CONTROL_JUST_PRESSED(2, 237)) {
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(l_46, SET_INPUT_EVENT_SELECT);
                l_45 = GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION();
            }
            if (GRAPHICS::_0x768FF8961BA904D6(l_45)) {
                v_13 = GRAPHICS::_0x2DE7EFA66B906036(l_45);
                if (v_13 == 6) {
                    sub_73269(a_0);
                }
            }
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x7B226C785A52A0A9">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x4862437A486F91B0(System.Int32@,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xEFB55E7C25D3B3BE">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x1600FD8CF72EBC12(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x2A2A52824DB96700(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x95EB5E34F821BABE(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xD1C7CB175E012964(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x8A35C742130C6080(System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xBCEDB009461DA156">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x27FEB5254759CDE3(System.String,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x7AC24EAB6D74118D(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xD7021272EB0A451E(System.String)">
            <summary>
            Only one match in the scripts:
            
            GRAPHICS::_D7021272EB0A451E(int_carrier_hanger);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x0218BA067D249DEA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x649C97D52332341A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x14FC5833464340A8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xAE51BC858F32BA66(System.Int32,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x2C42340F916C5930(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x9B6E70C5CEEF4EEB(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x2A893980E96B659A(System.Int32)">
            <summary>
            2 matches across 2 scripts. Only showed in appcamera ANDappmedia. Both were 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xA44FF770DFBC5DAE">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xF44A5456AC3F4F97(System.Int32)">
            <summary>
            Another function related to HUD scaleforms
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xD2300034310557E4(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x03300B57FCAC6DDB(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x98EDF76A7271E4F2">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x65E7E78842E74CDB(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xE3E2C1B4C59DBC77(System.Int32)">
            <summary>
            Sets an unknown value related to timecycles.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xE1C8709406F2C41C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x3DEC726C25A11BAC(System.Int32)">
            <summary>
            1 match in 1 script. cellphone_controller.
            p0 is -1 in scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xEC52C631A1831C03(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x77FE3402004CD1B0(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xE83A3E3557A56640(System.String)">
            <summary>
            This method is the equivalent to PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_STRING when using it to add a new button (like INSTRUCTIONAL_BUTTONS).
            
            When switching with a controller, the icons update and become the controllers icons.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x70A64C0234EF522C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x1086127B3A63505E(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x9D75795B9DC6EBBF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xA78DE25577300BA1(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xD7D0B00177485411(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x1636D7FC127B10D2(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x19E50EB6E33E1D28(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x0C8FAC83902A62DF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xFEBFBFDFB66039DE(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xFF5992E1C9E65D05(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x23BA6B0C2AD7B0D3(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xF51D36185993515D(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            This does not move an existing checkpoint... so wtf.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x615D3925E87A3B26(System.Int32)">
            <summary>
            Unknown. Called after creating a checkpoint (type: 51) in the creators.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x3C788E7F6438754D(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xDB1EA9411C8911EC(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x4B5B4DA5D79F1943(System.Int32,System.Single)">
            <summary>
            p0 - Scale? Looks to be a normalized value (0.0 - 1.0)
            
            offroad_races.c4, line ~67407:
            a_3._f7 = GRAPHICS::CREATE_CHECKPOINT(v_D, v_A, a_4, a_7, v_E, v_F, v_10, sub_62b2(v_A, 220, 255), 0);
            UI::GET_HUD_COLOUR(134, AND_E, AND_F, AND_10, AND_11);
            GRAPHICS::_SET_CHECKPOINT_ICON_RGBA(a_3._f7, v_E, v_F, v_10, sub_62b2(v_A, 70, 210));
            GRAPHICS::_4B5B4DA5D79F1943(a_3._f7, 0.95);
            GRAPHICS::SET_CHECKPOINT_CYLINDER_HEIGHT(a_3._f7, 4.0, 4.0, 100.0);
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x44621483FF966526(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xBBF327DED94E4DEB(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x46D1A61A21F566FC(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xC5C8F970D4EDFF71(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x4B5CFC83122DF602">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xD9454B5752C857DC">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x27CFB1B1E078CB2D">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xE2892E7E55D7073A(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xEF398BEEE4EF45F9(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x5096FD9CCB49056D(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x6A51F78772175A51(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xBA3D65906822BED5(System.Boolean,System.Boolean,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Every p2 - p5 occurrence was 0f.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x9641588DAB93B4B5(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xB569F41F3E7E83A4(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xB3C641F3630BF6DA(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xBF59707B3E5ED531(System.String)">
            <summary>
            Something to do with timecycles.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x54E22EA2C1956A8D(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x908311265D42A820(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xBB90E12CAC1DAB25(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x27E32866E9A5C416(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xCA4AE345A153D573(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x949F397A288B28B3(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xBA3D194057C79A7B(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x8CDE909A0370BB3A(System.Boolean)">
            <summary>
            console hash: 0x19EC0001
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x2B40A97646381508(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xBDEB86F4D5809204(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x32F34FF7F617643B(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xE6A9F00D4240B519(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xC6372ECD45D73BCD(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x5DBF05DB5926D089(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x1BBC135A4D25EDDE(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x1CBA05AE7BD7EE05(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xF7B38B8305F1FE8B(System.Int32,System.String,System.Boolean)">
            <summary>
            SET_TV_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x2201C576FACAEBE8(System.Int32,System.String,System.Int32)">
            <summary>
            SET_TV_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xD1C55B110E4DF534(System.Int32)">
            <summary>
            SET_TV_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xF78B803082D4386F(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xA46B73FAA3460AE1(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x99AC7F0D8B9C893D(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xA356990E161C9E65(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x5CE62918F8D703C7(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Only called in golf and golf_mp
            parameters used are 
            GRAPHICS::_0x5CE62918F8D703C7(255, 0, 0, 64, 255, 255, 255, 5, 255, 255, 0, 64);
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x1C4FC5752BCD8E48(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xE63D7C6EECECB66B(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x98C4FE6EC34154CA(System.String,System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Its called after 0xD3A10FC7FD8D98CD and 0xF1CEA8A4198D8E9A
            
            p0 was always CELEBRATION_WINNER
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x7A42B2E236E71415">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xD3A10FC7FD8D98CD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x108BE26959A9D9BB(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xF1CEA8A4198D8E9A(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xB7ED70C49521A61D(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xDEADC0DEDEADC0DE(System.Int32)">
            <summary>
            Only found twice in decompiled scripts. Something to do with an entity/object?
            
            On a side note, its very interesting how the hash for this native is DEADC0DE - this is usually used as padding for initializing a buffer of some sort. I wonder if this native is actually dead?
            
            carmod_shop.ysc, line 9520:
            if (ENTITY::DOES_ENTITY_EXIST(l_324._f6)) {
                GRAPHICS::_0xDEADC0DEDEADC0DE(l_324._f6);
            }
            
            fm_mission_controller.ysc, line 189641:
            if (GAMEPLAY::IS_BIT_SET(g_1870E1._f7B64a_0/104/._f25, 28)) {
                GRAPHICS::_0xDEADC0DEDEADC0DE(NETWORK::NET_TO_OBJ(l_4064._f26A._f87a_0/1/));
                if (!GAMEPLAY::IS_BIT_SET(g_1870E1._f7B64a_0/104/._f25, 31)) {
                    if (!ENTITY::IS_ENTITY_DEAD(v_7)) {
                        AUDIO::PLAY_SOUND_FROM_ENTITY(-1, EMP_Vehicle_Hum, v_7, DLC_HEIST_BIOLAB_DELIVER_EMP_SOUNDS, 0, 0);
                        GAMEPLAY::SET_BIT(AND_1870E1._f7B64a_0/104/._f25, 31);
                    }
                }
            }
            
            Console Hash: 0xC12AC47A
            
            ----------
            
            Its most likely named UPDATE_ (like UPDATE_ENTITY_SHIT_OR_SOMETHING).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xCA465D9CC0D231BA(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xE791DF1F73ED2C8B(System.Int32)">
            <summary>
            This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xEC72C258667BE5EA(System.Int32)">
            <summary>
            This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0xBE197EAA669238F4(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x7FDFADE676AA3CB0(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Graphics.Unknown._0x61F95E5BB3E0A8C6(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Interior">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Interior.EnableInteriorProp(System.Int32,System.String)">
            <summary>
            More info: http://gtaforums.com/topic/836367-adding-props-to-interiors/
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.AddPickupToInteriorRoomByName(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.CapInterior(System.Int32,System.Boolean)">
            <summary>
            Does something similar to INTERIOR::DISABLE_INTERIOR
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.ClearRoomForEntity(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.DisableInteriorProp(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.DisableInterior(System.Int32,System.Boolean)">
            <summary>
            Example: 
            This removes the interior from the strip club and when trying to walk inside the player just falls:
            
            INTERIOR::DISABLE_INTERIOR(118018, true);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.HideMapObjectThisFrame(System.UInt32)">
            <summary>
            This is the native that is used to hide the exterior of GTA Online apartment buildings when you are inside an apartment.
            
            More info: http://gtaforums.com/topic/836301-hiding-gta-online-apartment-exteriors/
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.ForceRoomForEntity(System.Int32,System.Int32,System.UInt32)">
            <summary>
            Does anyone know what this does? I know online modding isnt generally supported especially by the owner of this db, but I first thought this could be used to force ourselves into someones apartment, but I see now that isnt possible.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.GetInteriorAtCoords(System.Single,System.Single,System.Single)">
            <summary>
            Returns interior ID from specified coordinates. If coordinates are outside, then it returns 0.
            
            Example for VB.NET
            Dim interiorID As Integer = Native.Function.Call(Of Integer)(Hash.GET_INTERIOR_AT_COORDS, X, Y, Z)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.GetInteriorAtCoordsWithType(System.Single,System.Single,System.Single,System.String)">
            <summary>
            Returns the interior ID representing the requested interior at that location (if found?). The supplied interior string is not the same as the one used to load the interior.
            
            Use: INTERIOR::UNPIN_INTERIOR(INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(x, y, z, interior))
            
            Interior types include: V_Michael, V_Franklins, V_Franklinshouse, etc.. you can find them in the scripts.
            
            Not a very useful native as you could just use GET_INTERIOR_AT_COORDS instead and get the same result, without even having to specify the interior type.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.UnkGetInteriorAtCoords(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Returns the interior ID at the given coords, but only if the unknown variable is set to 0, otherwise it will return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.GetInteriorFromCollision(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.GetInteriorFromEntity(System.Int32)">
            <summary>
            Returns the handle of the interior that the entity is in. Returns 0 if outside.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.GetInteriorGroupId(System.Int32)">
            <summary>
            Returns the group ID of the specified interior. For example, regular interiors have group 0, subway interiors have group 1. There are a few other groups too.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.GetKeyForEntityInRoom(System.Int32)">
            <summary>
            Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.GetOffsetFromInteriorInWorldCoords(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.GetRoomKeyFromGameplayCam">
            <summary>
            Returns the room hash key from the current gameplay cam.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.GetRoomKeyFromEntity(System.Int32)">
            <summary>
            Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.AreCoordsCollidingWithExterior(System.Single,System.Single,System.Single)">
            <summary>
            Returns true if the coords are colliding with the outdoors, and false if they collide with an interior.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.IsInteriorCapped(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.IsInteriorDisabled(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.IsInteriorPropEnabled(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.IsInteriorReady(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.IsInteriorScene">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.IsValidInterior(System.Int32)">
            <summary>
            Return if interior is valid.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.LoadInterior(System.Int32)">
            <summary>
            Load interior
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.RefreshInterior(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.SetInteriorPropColor(System.Int32,System.String,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.UnpinInterior(System.Int32)">
            <summary>
            Does something similar to INTERIOR::DISABLE_INTERIOR.
            
            You dont fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.Unknown._0x483ACA1176CA93F1">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.Unknown._0x23B59D8912F94246">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.Unknown._0x9E6542F0CE8E70A3(System.Boolean)">
            <summary>
            Only found 4 times in Rockstar scripts.
            Clearly has something to do with Cutscenes.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.Unknown._0x50C375537449F369(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.Unknown._0x920D853F3E17F1DA(System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.Unknown._0x82EBB79E258FA2B7(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.Unknown._0x4C2330E61D3DEB56(System.Int32)">
            <summary>
            Only used once in the entire game scripts, probably useless. Always returns 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.Unknown._0x7241CCB7D020DB69(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.Unknown._0x405DC2AEF6AF95B9(System.UInt32)">
            <summary>
            Usage: INTERIOR::_0x405DC2AEF6AF95B9(INTERIOR::GET_KEY_FOR_ENTITY_IN_ROOM(PLAYER::PLAYER_PED_ID()));
            </summary>				
        </member>
        <member name="M:RAGE.Game.Interior.Unknown._0xAF348AFCB575A441(System.String)">
            <summary>
            Exemple of use(carmod_shop.c4)
             INTERIOR::_AF348AFCB575A441(V_CarModRoom);
            </summary>				
        </member>
        <member name="T:RAGE.Game.Itemset">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Itemset.AddToItemset(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Itemset.CleanItemset(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Itemset.CreateItemset(RAGE.Vector3)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Itemset.DestroyItemset(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Itemset.GetIndexedItemInItemset(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Itemset.GetItemsetSize(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Itemset.IsInItemset(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Itemset.IsItemsetValid(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Itemset.RemoveFromItemset(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Loading">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Loading.IsUiLoadingMultiplayer">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Loading.IsInLoadingScreen(System.Boolean)">
            <summary>
            Only occurrence was false, in maintransition.
            
            -Something related to UI loading screens for multiplayer
            </summary>				
        </member>
        <member name="M:RAGE.Game.Loading.Unknown._0x8AA464D4E0F6ACCD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Loading.Unknown._0xEF7D17BC6C85264C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Loading.Unknown._0xC7E7181C09F33B69(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Loading.Unknown._0xB0C56BD3D808D863(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Loading.Unknown._0xFA1E0E893D915215(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Loading.Unknown._0xF2CA003F167E21D2">
            <summary>
            MulleDK19: This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="T:RAGE.Game.Locale">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Locale.GetCurrentLanguageId">
            <summary>
            american = 0
            french = 1 
            german = 2
            italian =3
            spanish = 4
            portuguese = 5
            polish = 6
            russian = 7
            korean = 8
            chinese = 9
            japanese = 10
            mexican = 11
            </summary>				
        </member>
        <member name="M:RAGE.Game.Locale.GetUserLanguageId">
            <summary>
            Returns the users defined langauge as ID 
            
            english: 12
            french = 7
            german = 22
            italian = 21
            japanese = 9
            korean = 17
            portuguese = 16
            spanish = 10
            russian = 25
            </summary>				
        </member>
        <member name="M:RAGE.Game.Locale.Unknown._0x497420E022796B3F">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Misc">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Misc.Absf(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Absi(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Acos(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.AddHospitalRestart(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Returns the index of the newly created hospital spawn point.
            
            p3 might be radius?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.AddPoliceRestart(System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.AddStuntJump(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.AddStuntJumpAngled(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.AreStringsEqual(System.String,System.String)">
            <summary>
            is this like strcmp??
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Asin(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Atan2(System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Atan(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.BeginReplayStats(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.CancelStuntJump">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ClearAngledAreaOfVehicles(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ClearArea(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Example: CLEAR_AREA(0, 0, 0, 30, true, false, false, false);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ClearAreaOfEverything(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            GAMEPLAY::_0x957838AAF91BD12D(x, y, z, radius, false, false, false, false); seem to make all objects go away, peds, vehicles etc. All booleans set to true doesnt seem to change anything. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ClearAreaOfCops(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            flags appears to always be 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ClearAreaOfObjects(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            I looked through the PC scripts that this site provides you with a link to find. It shows the last param mainly uses, (0, 2, 6, 16, and 17) so I am going to assume it is a type of flag. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ClearAreaOfPeds(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Example:       CLEAR_AREA_OF_PEDS(0, 0, 0, 10000, 1);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ClearAreaOfProjectiles(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            flags is usually 0 in the scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ClearAreaOfVehicles(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Example:         CLEAR_AREA_OF_VEHICLES(0, 0, 0, 10000, false, false, false, false, false);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ClearBit(System.Int32@,System.Int32)">
            <summary>
            This sets bit offset of address to off.
            
            Example:
            GAMEPLAY::CLEAR_BIT(ANDitAddress, 1);
            
            To check if this bit has been enabled:
            GAMEPLAY::IS_BIT_SET(bitAddress, 1); // will return 0 afterwards
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ClearOverrideWeather">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ClearReplayStats">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetNextRespawnToCustom">
            <summary>
            Sets the next spawn location to the position supplied to _SET_CUSTOM_RESPAWN_POSITION. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ClearWeatherTypePersist">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.CompareStrings(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Compares two strings up to a specified number of characters.
            
            Parameters:
            str1 - String to be compared.
            str2 - String to be compared.
            matchCase - Comparison will be case-sensitive.
            maxLength - Maximum number of characters to compare. A value of -1 indicates an infinite length.
            
            Returns:
            A value indicating the relationship between the strings:
            0 - The first non-matching character in str1 is less than the one in str2. (e.g. A  B, so result = -1)
            0 - The contents of both strings are equal.
            0 - The first non-matching character in str1 is less than the one in str2. (e.g. B  A, so result = 1)
            
            Examples:
            GAMEPLAY::COMPARE_STRINGS(STRING, string, false, -1); // 0; equal
            GAMEPLAY::COMPARE_STRINGS(TESTING, test, false, 4); // 0; equal
            GAMEPLAY::COMPARE_STRINGS(R2D2, R2xx, false, 2); // 0; equal
            GAMEPLAY::COMPARE_STRINGS(foo, bar, false, -1); // 4; f  b
            GAMEPLAY::COMPARE_STRINGS(A, A, true, 1); // 0; equal
            
            When comparing case-sensitive strings, lower-case characters are greater than upper-case characters:
            GAMEPLAY::COMPARE_STRINGS(A, a, true, 1); // -1; A  a
            GAMEPLAY::COMPARE_STRINGS(a, A, true, 1); // 1; a  A
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.CreateIncident(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32@,System.Int32)">
            <summary>
            p0 could be type
            
            =====================================================
            enum IncidentTypes{
                FireDepartment = 3,
                Paramedics = 5,
                Police = 7,
                PedsInCavalcades = 11, 
                Merryweather = 14
            };
            
            As for the police incident, it will call police cars to you, but unlike PedsInCavalcades ANDMerryweather they wont start shooting at you unless you shoot first or shoot at them. The top 2 however seem to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I found out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 param I cant say is radius, but for the pedsInCavalcades and Merryweather R uses 0.0f and for the top 3 (Emergency Services) they use 3.0f. 
            
            Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course not IV).
            
            Side Note 2: I say it breaks as if you call this proper,
            if(CREATE_INCIDENT) etc it will return false if you do as I said above.
            =====================================================
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.CreateIncidentWithEntity(System.Int32,System.Int32,System.Int32,System.Single,System.Int32@,System.Int32)">
            <summary>
            p0 could be type (valueused in scripts: 14, 7, 5, 3, 11)
            p1 is a return from get_player_ped() in am_gang_call.c, but player_ped_id() in other (non am) scripts.
            p3 is usually 0f or 3f
            
            =====================================================
            enum IncidentTypes{
                FireDepartment = 3,
                Paramedics = 5,
                Police = 7,
                PedsInCavalcades = 11, 
                Merryweather = 14
            };
            
            As for the police incident, it will call police cars to you, but unlike PedsInCavalcades ANDMerryweather they wont start shooting at you unless you shoot first or shoot at them. The top 2 however seem to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I found out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 param I cant say is radius, but for the pedsInCavalcades and Merryweather R uses 0.0f and for the top 3 (Emergency Services) they use 3.0f. 
            
            Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course not IV).
            
            Side Note 2: I say it breaks as if you call this proper,
            if(CREATE_INCIDENT) etc it will return false if you do as I said above.
            =====================================================
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.DeleteIncident(System.Int32)">
            <summary>
            Delete an incident with a given id.
            
            =======================================================
            Correction, I have change this to int, instead of int
            as it doesnt use a pointer to the createdIncident.
            If you try it you will crash (or) freeze.
            =======================================================
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.DeleteStuntJump(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.DisableHospitalRestart(System.Int32,System.Boolean)">
            <summary>
            The game by default has 5 hospital respawn points. Disabling them all will cause the player to respawn at the last position they were.
            
            
            Doesnt work....
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.DisablePoliceRestart(System.Int32,System.Boolean)">
            <summary>
            Disables the spawn point at the police house on the specified index.
            
            policeIndex: The police house index.
            toggle: true to enable the spawn point, false to disable.
            
            - Nacorpio
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.DisableStuntJumpSet(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.DisplayOnscreenKeyboard(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            sfink: note, p0 is set to 6 for PC platform in at least 1 script, or to `unk::_get_ui_language_id() == 0` otherwise.
            
            NOTE: windowTitle uses text labels, and an invalid value will display nothing.
            
            www.gtaforums.com/topic/788343-vrel-script-hook-v/?p=1067380474
            
            windowTitles
            -----------------
            CELL_EMAIL_BOD  =   Enter your Eyefind message
            CELL_EMAIL_BODE =   Message too long. Try again
            CELL_EMAIL_BODF    =   Forbidden message. Try again
            CELL_EMAIL_SOD    =   Enter your Eyefind subject
            CELL_EMAIL_SODE =   Subject too long. Try again
            CELL_EMAIL_SODF    =   Forbidden text. Try again
            CELL_EMASH_BOD   =   Enter your Eyefind message
            CELL_EMASH_BODE =   Message too long. Try again
            CELL_EMASH_BODF    =   Forbidden message. Try again
            CELL_EMASH_SOD    =   Enter your Eyefind subject
            CELL_EMASH_SODE =   Subject too long. Try again
            CELL_EMASH_SODF    =   Forbidden Text. Try again
            FMMC_KEY_TIP10   =   Enter Synopsis
            FMMC_KEY_TIP12  =   Enter Custom Team Name
            FMMC_KEY_TIP12F =   Forbidden Text. Try again
            FMMC_KEY_TIP12N  =   Custom Team Name
            FMMC_KEY_TIP8 =   Enter Message
            FMMC_KEY_TIP8F   =   Forbidden Text. Try again
            FMMC_KEY_TIP8FS  =   Invalid Message. Try again
            FMMC_KEY_TIP8S  =   Enter Message
            FMMC_KEY_TIP9    =   Enter Outfit Name
            FMMC_KEY_TIP9F   =   Invalid Outfit Name. Try again
            FMMC_KEY_TIP9N  =   Outfit Name
            PM_NAME_CHALL  =   Enter Challenge Name
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.DisplayOnscreenKeyboard2(System.Int32,System.String,System.Int32@,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            only documented to be continued...
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.DoAutoSave">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.EnableDispatchService(System.Int32,System.Boolean)">
            <summary>
            Directly from R:
            enum eDispatchType : UINT16
            {
                DT_PoliceAutomobile = 1,
                DT_PoliceHelicopter = 2,
                DT_FireDepartment = 3,
                DT_SwatAutomobile = 4,
                DT_AmbulanceDepartment = 5,
                DT_PoliceRiders = 6,
                DT_PoliceVehicleRequest = 7,
                DT_PoliceRoadBlock = 8,
                DT_PoliceAutomobileWaitPulledOver = 9,
                DT_PoliceAutomobileWaitCruising = 10,
                DT_Gangs = 11,
                DT_SwatHelicopter = 12,
                DT_PoliceBoat = 13,
                DT_ArmyVehicle = 14,
                DT_BikerBackup = 15
            };
            
            By making toggle false it disables the dispatch.
            
            curious if this is what they used when you toggled on and off cops in a GTA IV freemode you hosted. Sad they got rid of the option to make a private session without cops.
            Also on x360 seems with or without neverWanted on, setting these to all false in SP of course doesnt seem to work. I would understand getting stars, but cops are still dispatched and combat you.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.EnableStuntJumpSet(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.EnableTennisMode(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Makes the ped jump around like theyre in a tennis match
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.EndReplayStats">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.FindSpawnPointInDirection(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,RAGE.Vector3)">
            <summary>
            Finds a position ahead of the player by predicting the players next actions.
            The positions match path finding node positions.
            When roads diverge, the position may rapidly change between two or more positions. This is due to the engine not being certain of which path the player will take.
            
            =======================================================
            I may sort this with alter research, but if someone
            already knows please tell what the difference in 
            X2, Y2, Z2 is. I doubt its rotation. Is it like 
            checkpoints where X1, Y1, Z1 is your/a position and
            X2, Y2, Z2 is a given position ahead of that position?
            =======================================================
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ResetLocalplayerState">
            <summary>
            Sets the localplayer playerinfo state back to playing (State 0)
            
            States are:
            -1: Invalid
            0: Playing
            1: Died
            2: Arrested
            3: Failed Mission
            4: Left Game
            5: Respawn
            6: In MP Cutscene
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.CreateLightningThunder">
            <summary>
            creates single lightning+thunder at random position
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetAllocatedStackSize">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetAngleBetween2dVectors(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetBitsInRange(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetCloudHatOpacity">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetGlobalCharBuffer">
            <summary>
            Returns a global c-style string buffer that is used internally by the game 
            
            nope, it returns a reference to an empty string, the same empty string thats used by 1687 internal gta functions.   if it was used in a script (and i cannot find an instance of it being used), it would be as the source for a StringCopy or somesuch.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetWeatherTypeTransition(System.Int32@,System.Int32@,System.Single@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetDistanceBetweenCoords(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.
            
            Consider using this faster native instead: SYSTEM::VDIST - DVIST always takes in consideration the 3D coordinates.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetFakeWantedLevel">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetFrameCount">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetFrameTime">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetGameTimer">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetGroundCoordsWhileInAir(System.Single,System.Single,System.Single,System.Single@,RAGE.Vector3)">
            <summary>
            only documented to be continued...
            
            Vector3 func_164(Vector3 vParam0, Vector3 vParam1)
            {
              return vParam0.y  vParam1.z - vParam0.z  vParam1.y, vParam0.z  vParam1.x - vParam0.x  vParam1.z, vParam0.x  vParam1.y - vParam0.y  vParam1.x;
            }
            float func_67(vector3 vParam0, vector3 vParam1)
            {
                return vParam0.x  vParam1.x + vParam0.y  vParam1.y + vParam0.z  vParam1.z;
            }
            float p3; Vector3 p4;
            _GET_GROUND_COORDS_WHILE_IN_AIR(coords0to.x, coords0to.y, coords0to.z, AND3, AND4);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetGroundZFor3dCoord(System.Single,System.Single,System.Single,System.Single@,System.Boolean)">
            <summary>
            Gets the ground elevation at the specified position. Note that if the specified position is below ground level, the function will output zero!
            
            x: Position on the X-axis to get ground elevation at.
            y: Position on the Y-axis to get ground elevation at.
            z: Position on the Z-axis to get ground elevation at.
            groundZ: The ground elevation at the specified position.
            unk: Nearly always 0, very rarely 1 in the scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetHashKey(System.String)">
            <summary>
            This native converts its past string to hash. It is hashed using jenkins one at a time method.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetHeadingFromVector2d(System.Single,System.Single)">
            <summary>
            dx = x1 - x2
            dy = y1 - y2
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetIndexOfCurrentLevel">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetMissionFlag">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetModelDimensions(System.UInt32,RAGE.Vector3,RAGE.Vector3)">
            <summary>
            Gets the dimensions of a model.
            
            Calculate (maximum - minimum) to get the size, in which case, Y will be how long the model is.
            
            Example from the scripts: GAMEPLAY::GET_MODEL_DIMENSIONS(ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), AND_1A, AND_17);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetNextWeatherTypeHashName">
            <summary>
            Returns weather name hash
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetFreeStackSlotsCount(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetNumberOfDispatchedUnitsForPlayer(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetOnscreenKeyboardResult">
            <summary>
            Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetPrevWeatherTypeHashName">
            <summary>
            Returns current weather name hash
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetProfileSetting(System.Int32)">
            <summary>
            anyone have a settingid dump?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetRainLevel">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetRandomEventFlag">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetRandomFloatInRange(System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetRandomIntInRange(System.Int32,System.Int32)">
            <summary>
            Another extremely useful native.
            
            You can use it simply like:
            if (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 2))
            
            and the if-statement will count it as false only if the random int is 0. That means there is a one in three chance of it being false. Put a ! in front and it means there is a one in three chance of it being true.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetSnowLevel">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetWindDirection">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.GetWindSpeed">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.HasBulletImpactedInArea(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            p3 - possibly radius?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.HasBulletImpactedInBox(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.HasButtonCombinationJustBeenEntered(System.UInt32,System.Int32)">
            <summary>
            This native appears on the cheat_controller script and tracks a combination of buttons, which may be used to toggle cheats in-game. Credits to ThreeSocks for the info. The hash contains the combination, while the amount represents the amount of buttons used in a combination. The following page can be used to make a button combination: gta5offset.com/ts/hash/
            
            INT_SCORES_SCORTED was a hash collision
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.HasCheatStringJustBeenEntered(System.UInt32)">
            <summary>
            Get inputted Cheat code, for example:
            
            while (TRUE)
            {
                if (GAMEPLAY::_557E43C447E700A8(${fugitive}))
                {
                   // Do something.
                }
                SYSTEM::WAIT(0);
            }
            
            Calling this will also set the last saved string hash to zero.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsPcVersion">
            <summary>
            PC
            
            MulleDK19: This function is hard-coded to always return 1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IgnoreNextRestart(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsAreaOccupied(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsAutoSaveInProgress">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsBitSet(System.Int32,System.Int32)">
            <summary>
            Returns bits boolean state from offset of address.
            
            Example:
            GAMEPLAY::IS_BIT_SET(bitAddress, 1);
            
            To enable and disable bits, see:
            GAMEPLAY::SET_BIT(ANDitAddress, 1);   // enable
            GAMEPLAY::CLEAR_BIT(ANDitAddress, 1); // disable
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsBulletInAngledArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsBulletInArea(System.Single,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsBulletInBox(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsIncidentValid(System.Int32)">
            <summary>
            =======================================================
            Correction, I have change this to int, instead of int
            as it doesnt use a pointer to the createdIncident.
            If you try it you will crash (or) freeze.
            =======================================================
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsMemoryCardInUse">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsMinigameInProgress">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsNextWeatherType(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsPointObscuredByAMissionEntity(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsPositionOccupied(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsPrevWeatherType(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsProjectileInArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.
            
            - Nacorpio
            
            
            ownedByPlayer = only projectiles fired by the player will be detected.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsProjectileTypeInAngledArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsProjectileTypeInArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean)">
            <summary>
            Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a rectangle.
            
            Note: This native hasnt been tested yet.
            
            - Nacorpio
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsSniperBulletInArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Determines whether there is a sniper bullet within the specified coordinates. The coordinates form a rectangle.
            
            - Nacorpio
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsStringNull(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsStringNullOrEmpty(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsStuntJumpInProgress">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsStuntJumpMessageShowing">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsTennisMode(System.Int32)">
            <summary>
            Return whether tennis mode is active or not.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsThisAMinigameScript">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetCloudHatTransition(System.String,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.NetworkSetScriptIsSafeForNetworkGame">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.OverrideSaveHouse(System.Boolean,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.DisableAutomaticRespawn(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.PopulateNow">
            <summary>
            spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ForceSocialClubUpdate">
            <summary>
            Exits the game and downloads a fresh social club update on next restart.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.RegisterFloatToSave(System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.RegisterIntToSave(System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.RegisterEnumToSave(System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.RegisterBoolToSave(System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.RegisterSaveHouse(System.Single,System.Single,System.Single,System.Single,System.Int32@,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.RegisterTextLabelToSave(System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.RemoveDispatchSpawnBlockingArea(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ResetDispatchIdealSpawnDistance">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ResetDispatchSpawnBlockingAreas">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetBit(System.Int32@,System.Int32)">
            <summary>
            This sets bit offset of address to on.
            
            The offsets used are different bits to be toggled on and off, typically there is only one address used in a script.
            
            Example:
            GAMEPLAY::SET_BIT(ANDitAddress, 1);
            
            To check if this bit has been enabled:
            GAMEPLAY::IS_BIT_SET(bitAddress, 1); // will return 1 afterwards
            
            Please note, this method may assign a value to address when used.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetBitsInRange(System.Int32@,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetCloudHatOpacity(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetCreditsActive(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetWeatherTypeTransition(System.UInt32,System.UInt32,System.Single)">
            <summary>
            Mixes two weather types. If percentWeather2 is set to 0.0f, then the weather will be entirely of weatherType1, if it is set to 1.0f it will be entirely of weatherType2. If its set somewhere in between, there will be a mixture of weather behaviors. To test, try this in the RPH console, and change the float to different values between 0 and 1:
            
            execute NativeFunction.Natives.x578C752848ECFA0C(Game.GetHashKey(RAIN), Game.GetHashKey(SMOG), 0.50f);
            
            Note that unlike most of the other weather natives, this native takes the hash of the weather name, not the plain string. These are the weather names and their hashes:
            
            CLEAR  0x36A83D84
            EXTRASUNNY  0x97AA0A79
            CLOUDS  0x30FDAF5C
            OVERCAST    0xBB898D2D
            RAIN    0x54A69840
            CLEARING    0x6DB1A50D
            THUNDER 0xB677829F
            SMOG    0x10DCF4B5
            FOGGY   0xAE737644
            XMAS    0xAAC9C895
            SNOWLIGHT   0x23FB812B
            BLIZZARD    0x27EA2814
            
            
            
            
            
            / OLD INVALID INFO BELOW /
            Not tested. Based purely on disassembly. Instantly sets the weather to sourceWeather, then transitions to targetWeather over the specified transitionTime in seconds.
            
            If an invalid hash is specified for sourceWeather, the current weather type will be used.
            If an invalid hash is specified for targetWeather, the next weather type will be used.
            If an invalid hash is specified for both sourceWeather and targetWeather, the function just changes the transition time of the current transition.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetDispatchIdealSpawnDistance(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetDispatchTimeBetweenSpawnAttempts(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetDispatchTimeBetweenSpawnAttemptsMultiplier(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetExplosiveAmmoThisFrame(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetExplosiveMeleeThisFrame(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetFadeInAfterDeathArrest(System.Boolean)">
            <summary>
            Sets whether the game should fade in after the player dies or is arrested.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetFadeInAfterLoad(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetFadeOutAfterArrest(System.Boolean)">
            <summary>
            Sets whether the game should fade out after the player is arrested.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetFadeOutAfterDeath(System.Boolean)">
            <summary>
            Sets whether the game should fade out after the player dies.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetFakeWantedLevel(System.Int32)">
            <summary>
            Sets a visually fake wanted level on the user interface. Used by Rockstars scripts to override regular wanted levels and make custom ones while the real wanted level and multipliers are ignored.
            
            Max is 5, anything above this makes it just 5. Also the mini-map gets the red ANDblue flashing effect. I wish I could use this to fake I had 6 stars like a few of the old GTAs
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetFireAmmoThisFrame(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetGamePaused(System.Boolean)">
            <summary>
            Make sure to call this from the correct thread if youre using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused which means you will lose control and the game remains in paused mode until you exit GTA5.exe
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetGravityLevel(System.Int32)">
            <summary>
            level can be from 0 to 3
            0: 9.8 - normal
            1: 2.4 - low
            2: 0.1 - very low
            3: 0.0 - off
            
            //SuckMyCoke
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetUnkMapFlag(System.Int32)">
            <summary>
            Sets an unknown flag used by CScene in determining which entities from CMapData scene nodes to draw, similar to 9BAE5AD2508DF078.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.UseFreemodeMapBehavior(System.Boolean)">
            <summary>
            Formerly known as _LOWER_MAP_PROP_DENSITY and wrongly due to idiots as _ENABLE_MP_DLC_MAPS.
            Sets the maximum prop density and changes a loading screen flag from loading story mode to loading GTA Online. Does not touch DLC map data at all.
            
            In fact, I doubt this changes the flag whatsoever, thats the OTHER native idiots use together with this that does so, this one only causes a loading screen to show as it reloads map data.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetMinigameInProgress(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetMissionFlag(System.Boolean)">
            <summary>
            If true, the player cant save the game. 
            
            
            If the parameter is true, sets the mission flag to true, if the parameter is false, the function does nothing at all.
            
            ^ also, if the mission flag is already set, the function does nothing at all
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetOverrideWeather(System.String)">
            <summary>
            Appears to have an optional bool parameter that is unused in the scripts.
            
            If you pass true, something will be set to zero.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ShowPedInPauseMenu(System.Boolean)">
            <summary>
            If toggle is true, the peds head is shown in the pause menu
            If toggle is false, the peds head is not shown in the pause menu
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetRainFxIntensity(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetRandomEventFlag(System.Boolean)">
            <summary>
            If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.
            Does nothing if the mission flag is set.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetRandomSeed(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetRandomWeatherType">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetCustomRespawnPosition(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Specifies a custom respawn position to be used in conjunction with _SET_NEXT_RESPAWN_TO_CUSTOM
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetSaveHouse(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetSaveMenuActive(System.Boolean)">
            <summary>
            The bool is not a toggle!!!
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetSuperJumpThisFrame(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetThisScriptCanBePaused(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetThisScriptCanRemoveBlipsCreatedByAnyScript(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetTimeScale(System.Single)">
            <summary>
            Maximum value is 1.
            At a value of 0 the game will still run at a minimum time scale.
            
            Slow Motion 1: 0.6
            Slow Motion 2: 0.4
            Slow Motion 3: 0.2
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetWeatherTypeNow(System.String)">
            <summary>
            The following weatherTypes are used in the scripts:
            CLEAR
            EXTRASUNNY
            CLOUDS
            OVERCAST
            RAIN
            CLEARING
            THUNDER
            SMOG
            FOGGY
            XMAS
            SNOWLIGHT
            BLIZZARD
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetWeatherTypeNowPersist(System.String)">
            <summary>
            The following weatherTypes are used in the scripts:
            CLEAR
            EXTRASUNNY
            CLOUDS
            OVERCAST
            RAIN
            CLEARING
            THUNDER
            SMOG
            FOGGY
            XMAS
            SNOWLIGHT
            BLIZZARD
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetWeatherTypeOverTime(System.String,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetWeatherTypePersist(System.String)">
            <summary>
            The following weatherTypes are used in the scripts:
            CLEAR
            EXTRASUNNY
            CLOUDS
            OVERCAST
            RAIN
            CLEARING
            THUNDER
            SMOG
            FOGGY
            XMAS
            SNOWLIGHT
            BLIZZARD
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetWind(System.Single)">
            <summary>
            Sets the the raw wind speed value.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetWindDirection(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.SetWindSpeed(System.Single)">
            <summary>
            Using this native will clamp the wind speed value to a range of 0.0- 12.0. Using SET_WIND sets the same value but without the restriction.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ShootSingleBulletBetweenCoords(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.UInt32,System.Int32,System.Boolean,System.Boolean,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ShootSingleVehicleBulletBetweenCoords(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.UInt32,System.Int32,System.Boolean,System.Boolean,System.Single,System.Int32,System.Int32)">
            <summary>
            entity - entity to ignore
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ShootSingleAirstrikeBulletBetweenCoords(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.UInt32,System.Int32,System.Boolean,System.Boolean,System.Single,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Since latest patches has 18 parameters.
            
            entity - entity to ignore
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.StartSaveArray(System.Int32@,System.Int32,System.String)">
            <summary>
            Second parameter might be length.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.StartSaveData(System.Int32@,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.StartSaveStruct(System.Int32@,System.Int32,System.String)">
            <summary>
            Second parameter might be length.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.StopSaveData">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.StopSaveStruct">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.StopSaveArray">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.StringToInt(System.String,System.Int32@)">
            <summary>
            Returns false if its a null or empty string or if the string is too long. outInteger will be set to -999 in that case.
            
            If all checks have passed successfully, the return value will be set to whatever strtol(string, 0i64, 10); returns.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Tan(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.TerminateAllScriptsWithThisName(System.String)">
            <summary>
            For a full list, see here: pastebin.com/yLNWicUi
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.ClearCloudHat">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.UpdateOnscreenKeyboard">
            <summary>
            Returns the current status of the onscreen keyboard, and updates the output.
            
            Status Codes:
            
            0 - User still editing
            1 - User has finished editing
            2 - User has canceled editing
            3 - Keyboard isnt active
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.UsingMissionCreator(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsSniperInverted">
            <summary>
            This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsOrbisVersion">
            <summary>
            PS4
            
            MulleDK19: This function is hard-coded to always return 0.
            
            Force67: I patched return result and got this : i.imgur.com/hUn7zSj.jpg
            
            translate please?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsDurangoVersion">
            <summary>
            XBOX ONE
            
            MulleDK19: This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsXbox360Version">
            <summary>
            XBOX 360
            
            MulleDK19: This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsPs3Version">
            <summary>
            PS3
            
            MulleDK19: This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsAussieVersion">
            <summary>
            if (GAMEPLAY::IS_AUSSIE_VERSION()) {
                sub_127a9(AND_31, 1024); // l_31 OR 1024
                l_129 = 3;
                sub_129d2(AUSSIE VERSION IS TRUE!?!?!); // DEBUG
            }
            
            Used to block some of the prostitute stuff due to laws in Australia.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.IsFrontendFading">
            <summary>
            This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xA6A12939F16D85BE(System.UInt32,System.Boolean)">
            <summary>
            Appears to remove stealth kill action from memory
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x918C7B2D2FF3928B(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x2D4259F1FEB81DA9(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x67F6413D3220E18D(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x32C7A7E8C43A1F80(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x69FE6DC87BD2A5E9(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xB8721407EE9C3FF6(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xDEA36202FC3382DF(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x5AA3BEFA29F03AD4">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x9B2BD3773123EA2F(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x58A39BE597CE99CD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xC79AE21974B01FB2">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x06462A961E94B67C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x7EC6F9A478A6A512">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xB3CD58CCA6CDA852">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x0CF97F497FE7D048(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x213AEB2B90CBA7AC(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x1327E2FE9746BAEE(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x171BAFB3C60389F4(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xB335F761606DB47C(System.Int32@,System.Int32@,System.Int32,System.Boolean)">
            <summary>
            This line found 48 times in the scripts:
            
            GAMEPLAY::_B335F761606DB47C(AND_4, AND_7, a_0, v_A);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x4750FC27570311EC">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x1B2366C3F2A5C8DF">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xD10282B6E3751BA0">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x21C235BC64831E5A(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x8D7A43EC6A5FEA45(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xDFB4138EEFED7B81(System.Int32,System.UInt32,System.Single,System.Int32@,System.Boolean)">
            <summary>
            From a quick disassembly I can say that this has something to do with weapons.
            
            Added params according to what I could see in IDA.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x9E82F0F362881B29(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x6E04F06094C87047">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x9689123E3F213AA5">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xF56DFB7B61BE7276(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x996DD1E1E02F1008">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x82FDE6A57EE4EE44(System.Int32,System.UInt32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            only documented to be continued...
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x7F8F6405F4777AF6(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x8098C8D6597AAE18(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xDC9274A7EF6B2867">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x5B1F2E327B6B6FE1">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x2B626A0150E4D449">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xA4A0065E39C9F25C(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xA09F896CE912481F(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x397BAA01068BAA96">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x2B5E102E4A42F2BF">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xE599A503B3837E1B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x19BFED045C647C49(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x17DF68D720AA77F8(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xE95B0C7D5BA3B96B(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x6856EC3D35C81EA4">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x14832BF2ABA53FC5">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x2107A3773771186D">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x6FDDF453C0C756EC">
            <summary>
            - if (GAMEPLAY::_6FDDF453C0C756EC() OR GAMEPLAY::IS_PC_VERSION()) {
            
            - if (((!g_1) AND (!GAMEPLAY::IS_PC_VERSION())) AND GAMEPLAY::_6FDDF453C0C756EC()) {
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xE8B9C0EC9E183F35">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x075F1D57402C93BA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xD642319C54AADEB6">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x8D74E26F54B4E5C3(System.String)">
            <summary>
            GAMEPLAY::_8D74E26F54B4E5C3();
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xA049A5BE0F04F2F8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x34318593248C8FB2(System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x3BBBD13E5041A79E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x3ED1438C1F5C6612(System.Int32)">
            <summary>
            p0 was always 2 in R scripts.
            Called before calling DISPLAY_ONSCREEN_KEYBOARD if the input needs to be saved.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x8FA9C42FC5D7C64B(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xE266ED23311F24D4(System.Int32,System.Int32@,System.Int32@,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xABB2FA71C83A1B72">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x684A41975F077262">
            <summary>
            example:
            
             if (GAMEPLAY::_684A41975F077262()) {
                    (a_0) = GAMEPLAY::_ABB2FA71C83A1B72();
                } else { 
                    (a_0) = -1;
                }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x11B56FBBF7224868(System.String)">
            <summary>
            Found in the scripts:
            
            GAMEPLAY::_11B56FBBF7224868(CONTRAILS);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xE3D969D2785FFB5E">
            <summary>
            sets something to 1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x72DE52178C291CB5">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x44A0BDC559B35F6E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xEB2104E905C6F2E9">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xA735353C77334EA0(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x6F7794F28C6B2535(System.Int32@,System.String)">
            <summary>
            Seems to have the same functionality as REGISTER_TEXT_LABEL_TO_SAVE?
            
            GAMEPLAY::_6F7794F28C6B2535(AND_0._f1, tlPlateText);
            GAMEPLAY::_6F7794F28C6B2535(AND_0._f1C, tlPlateText_pending);
            GAMEPLAY::_6F7794F28C6B2535(AND_0._f10B, tlCarAppPlateText);
            
            tl prefix sounds like Text Label
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x48F069265A0E4BEC(System.Int32@,System.String)">
            <summary>
            Only found 3 times in decompiled scripts. Not a whole lot to go off of.
            
            GAMEPLAY::_48F069265A0E4BEC(a_0, Movie_Name_For_This_Player);
            GAMEPLAY::_48F069265A0E4BEC(AND_0._fB, Ringtone_For_This_Player);
            GAMEPLAY::_48F069265A0E4BEC(AND_0._f1EC4._f12v_A/6/, AND_13); // where v_13 is MPATMLOGSCRS0 thru MPATMLOGSCRS15
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x8269816F6CFD40F8(System.Int32@,System.String)">
            <summary>
            Only found 2 times in decompiled scripts. Not a whole lot to go off of.
            
            GAMEPLAY::_8269816F6CFD40F8(AND_0._f1F5A._f60/8/, TEMPSTAT_LABEL); // gets saved in a struct called g_SaveData_STRING_ScriptSaves
            GAMEPLAY::_8269816F6CFD40F8(AND_0._f4B4v_1A/8/, AND_5); // where v_5 is Name0 thru Name9, gets saved in a struct called OUTFIT_Name
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xFAA457EF263E8763(System.Int32@,System.String)">
            <summary>
            Another unknown label type...
            
            GAMEPLAY::_FAA457EF263E8763(a_0, Thumb_label);
            GAMEPLAY::_FAA457EF263E8763(AND_0._f10, Photo_label);
            GAMEPLAY::_FAA457EF263E8763(a_0, GXTlabel);
            GAMEPLAY::_FAA457EF263E8763(AND_0._f21, StringComp);
            GAMEPLAY::_FAA457EF263E8763(AND_0._f43, SecondStringComp);
            GAMEPLAY::_FAA457EF263E8763(AND_0._f53, ThirdStringComp);
            GAMEPLAY::_FAA457EF263E8763(AND_0._f32, SenderStringComp);
            GAMEPLAY::_FAA457EF263E8763(AND_0._f726v_1A/16/, AND_20); // where v_20 is LastJobTL_0_1 thru LastJobTL_2_1, gets saved in a struct called LAST_JobGamer_TL
            GAMEPLAY::_FAA457EF263E8763(AND_0._f4B, PAID_PLAYER);
            GAMEPLAY::_FAA457EF263E8763(AND_0._f5B, RADIO_STATION);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xB129E447A2EDA4BF(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xE6869BECDD8F2403(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xEB2DB0CAD13154B3(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x437138B6A830166A">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xD9F692D349249528">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xE574A662ACAEFBB1">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x37DEB0AA183FB6D8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x8EF5573A1F801A5C(System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x0A60017F841A54F2(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x1BB299305C3E8C13(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x1FF6BF9A63E5757F">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x438822C279B73B93(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x02DEAAC8F8EA7FE7(System.String)">
            <summary>
            Found in the scripts:
            
            GAMEPLAY::_02DEAAC8F8EA7FE7();
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xB51B9AB9EF81868C(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xD10F442036302D50(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xA1183BCFEE0F93D1(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xD261BA3E7E998072(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xB08B85D860E7BA3C(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x9D8D44ADBBA61EF2(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x2587A48BC88DFADF(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x65D2EBB47E1CEC21(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xD79185689F8FD5DF(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x54F157E0336A3822(System.Int32,System.String,System.Single)">
            <summary>
            From the scripts:
            
            GAMEPLAY::_54F157E0336A3822(sub_aa49(a_0), ForcedStopDirection, v_E);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x6F2135B6129620C1(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xFB00CA71DA386228">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xE532EC1A63231B4F(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xD3D15555431AB793">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xF2F6A2FA49278625(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x92790862E36C2ADA">
            <summary>
            I can 100% confirm this is some kind of START_ native.
            
            Next character in the name is either C, D or E.
            
            Used only once in the scripts (benchmark.ysc).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xC7DB36C24634F52B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x1EAE0A6E978894A2(System.Int32,System.Boolean)">
            <summary>
            Unsure about the use of this native but heres an example:
            
            void sub_8709() {
                GAMEPLAY::_1EAE0A6E978894A2(0, 1);
                GAMEPLAY::_1EAE0A6E978894A2(1, 1);
                GAMEPLAY::_1EAE0A6E978894A2(2, 1);
                GAMEPLAY::_1EAE0A6E978894A2(3, 1);
                GAMEPLAY::_1EAE0A6E978894A2(4, 1);
                GAMEPLAY::_1EAE0A6E978894A2(5, 1);
                GAMEPLAY::_1EAE0A6E978894A2(6, 1);
                GAMEPLAY::_1EAE0A6E978894A2(7, 1);
                GAMEPLAY::_1EAE0A6E978894A2(8, 1);
            }
            
            So it appears that p0 ranges from 0 to 8.
            
            ENABLE_DISPATCH_SERVICE, seems to have a similar layout.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xFB80AB299D2EE1BD(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xEA2F2061875EED90">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xA74802FB8D0B7814(System.String,System.Single)">
            <summary>
            Called 4 times in the b617d scripts:
            GAMEPLAY::_A74802FB8D0B7814(CONTRAILS, 0);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x693478ACBD7F18E7">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xA8434F1DFF41D6E7(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xC3C221ADDDE31A11(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x31727907B2C43C55(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x405591EC8FD9096D(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xB3E6360DDE733E82(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xF751B16FB32ABC1D(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x7C9C0B1EEB1F9072(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xB9854DFDE0D833D6(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x9F5E6BB6B34540DA(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x6216B116083A7CB4(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xB8F87EAD7533B176(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xA7A1127490312C36(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xC3EAD29AB273ECE8(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xC54A08C85AE4D410(System.Single)">
            <summary>
            This seems to edit the water wave, intensity around your current location.
            
            0.0f = Normal
            1.0f = So Calm and Smooth, a boat will stay still.
            3.0f = Really Intense.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x4DCDF92BF64236CD(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x31125FD509D9043F(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xEBD3205A207939ED(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x97E7E2C04245115B(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xEB078CA2B5E82ADD(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x703CC7F60CBB2B57(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x8951EB9C6906D3C8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0xBA4B8D83BDC75551(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Misc.Unknown._0x23227DF0B2115469">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Mobile">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Mobile.CanPhoneBeSeenOnScreen">
            <summary>
            This one is weird and seems to return a TRUE state regardless of whether the phone is visible on screen or tucked away.
            
            
            I can confirm the above. This function is hard-coded to always return 1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.CellCamActivate(System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.DisablePhoneThisFrame(System.Boolean)">
            <summary>
            Disables the phone up-button, oddly enough. 
            i.e.: When the phone is out, and this method is called with false as its parameter, the phone will not be able to scroll up. However, when you use the down arrow key, its functionality still, works on the phone. 
            
            When the phone is not out, and this method is called with false as its parameter, you will not be able to bring up the phone. Although the up arrow key still works for whatever functionality its used for, just not for the phone.
            
            This can be used for creating menus when trying to disable the phone from being used. 
            
            You do not have to call the function again with false as a parameter, as soon as the function stops being called, the phone will again be usable.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.CellCamIsCharVisibleNoFaceCheck(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.SetPhoneLean(System.Boolean)">
            <summary>
            if the bool Toggle is true so the phone is lean.
            if the bool Toggle is false so the phone is not lean.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.MoveFinger(System.Int32)">
            <summary>
            For move the finger of player, the value of int goes 1 at 5.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.CreateMobilePhone(System.Int32)">
            <summary>
            Creates a mobile phone of the specified type.
            
            Possible phone types:
            
            0 - Default phone / Michaels phone
            1 - Trevors phone
            2 - Franklins phone
            4 - Prologue phone
            
            These values represent bit flags, so a value of 3 would toggle Trevor and Franklins phones together, causing unexpected behavior and most likely crash the game.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.DestroyMobilePhone">
            <summary>
            Destroys the currently active mobile phone.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.GetMobilePhonePosition(RAGE.Vector3)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.GetMobilePhoneRenderId(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.GetMobilePhoneRotation(RAGE.Vector3,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.ScriptIsMovingMobilePhoneOffscreen(System.Boolean)">
            <summary>
            If bool Toggle = true so the mobile is hide to screen.
            If bool Toggle = false so the mobile is show to screen.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.SetMobilePhonePosition(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.SetMobilePhoneRotation(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Last parameter is unknown and always zero.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.SetMobilePhoneScale(System.Single)">
            <summary>
            The minimum/default is 500.0f. If you plan to make it bigger set its position as well. Also this seems to need to be called in a loop as when you close the phone the scale is reset. If not in a loop youd need to call it everytime before you re-open the phone.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.Unknown._0xA2CCBE62CD4C91A4(System.Int32@)">
            <summary>
            Needs more research. If the phone_cam12 filter is applied, this function is called with TRUE; otherwise, FALSE.
            
            Example (XBOX 360):
            
            // check current filter selection
            if (GAMEPLAY::ARE_STRINGS_EQUAL(getElem(g_2471024, AND_17, 4), phone_cam12) != 0)
            {
                MOBILE::_0xC273BB4D(0); // FALSE
            }
            else
            {
                MOBILE::_0xC273BB4D(1); // TRUE
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.Unknown._0xAC2890471901861C(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.Unknown._0x466DA42C89865553(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.Unknown._0xF1E22DC13F5EEBAD(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.Unknown._0xD6ADE981781FCA09(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.Unknown._0x53F4892D18EC90A4(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.Unknown._0x15E69E2802C24B8D(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.Unknown._0x1B0B4AEED5B9B41C(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.Unknown._0x3117D84EFA60F77B(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Mobile.Unknown._0x375A706A5C2FD084(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Netcash">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkBuyAirstrike(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            p1 = 0 (always)
            p2 = 1 (always)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkBuyBounty(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            p1 is just an assumption. p2 was false and p3 was true.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkBuyFairgroundRide(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            The first parameter is the amount spent which is store in a global when this native is called. The global returns 10. Which is the price for both rides.
            
            The last 3 parameters are, 
            2,0,1 in the am_ferriswheel.c
            1,0,1 in the am_rollercoaster.c
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkBuyHealthcare(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkBuyHeliStrike(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            p1 = 0 (always)
            p2 = 1 (always)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkBuyItem(System.Int32,System.UInt32,System.Int32,System.Int32,System.Boolean,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkBuyProperty(System.Single,System.UInt32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkCanBet(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkCanReceivePlayerCash(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkCanSpendMoney(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkClearCharacterWallet(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkDeleteCharacter(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Note the 2nd parameters are always 1, 0. I have a feeling it deals with your money, wallet, bank. So when you delete the character it of course wipes the wallet cash at that time. So if that was the case, it would be eg, NETWORK_DELETE_CHARACTER(characterIndex, deleteWalletCash, deleteBankCash);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromAiTargetKill(System.Int32,System.Int32)">
            <summary>
            DSPORT
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromAmbientJob(System.Int32,System.String,System.Int32@)">
            <summary>
            Example for p1: AM_DISTRACT_COPS
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromBendJob(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromBetting(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromBounty(System.Int32,System.Int32@,System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromChallengeWin(System.Int32,System.Int32@,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromCrateDrop(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromDailyObjectives(System.Int32,System.String,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromGangattackPickup(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromHoldups(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromImportExport(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromJob(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromJobBonus(System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromNotBadsport(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromPersonalVehicle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Now has 9 parameters.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromPickup(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromProperty(System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromArmourTruck(System.Int32)">
            <summary>
            For the money bags that drop a max of $40,000. Often called 40k bags.
            
            Most likely NETWORK_EARN_FROM_ROB
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromRockstar(System.Int32)">
            <summary>
            This merely adds an entry in the Network Transaction Log; 
            it does not grant cash to the player (on PC).
            
            Max value for amount is 9999999.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkEarnFromVehicle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Now has 8 params.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkGetBankBalanceString">
            <summary>
            Console Hash: Probably 0xAA7EA3BD
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkGetVcBalance">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkGetVcBankBalance">
            <summary>
            From what I can see in ida, I believe it retrieves the players online bank balance.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkGetVcWalletBalance(System.Int32)">
            <summary>
            From what I understand, it retrieves STAT_WALLET_BALANCE for the specified character (-1 means use MPPLY_LAST_MP_CHAR)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkGivePlayerJobshareCash(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkInitializeCash(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkMoneyCanBet(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkPayEmployeeWage(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkPayMatchEntryFee(System.Int32,System.Int32@,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkPayUtilityBill(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkReceivePlayerJobshareCash(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkRefundCash(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            index
            -------
            See function sub_1005 in am_boat_taxi.ysc
            
            context
            ----------
            BACKUP_VAGOS
            BACKUP_LOST
            BACKUP_FAMILIES
            HIRE_MUGGER
            HIRE_MERCENARY
            BUY_CARDROPOFF
            HELI_PICKUP
            BOAT_PICKUP
            CLEAR_WANTED
            HEAD_2_HEAD
            CHALLENGE
            SHARE_LAST_JOB
            DEFAULT
            
            reason
            ---------
            NOTREACHTARGET
            TARGET_ESCAPE
            DELIVERY_FAIL
            NOT_USED
            TEAM_QUIT
            SERVER_ERROR
            RECEIVE_LJ_L
            CHALLENGE_PLAYER_LEFT
            DEFAULT
            
            unk
            -----
            Unknown bool value
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentAmmoDrop(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentArrestBail(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentBankInterest">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentBetting(System.Int32,System.Int32,System.Int32@,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentBoatPickup(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentBounty(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentBullShark(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentBuyOfftheradar(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentBuyPassiveMode(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentBuyRevealPlayers(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentBuyWantedlevel(System.Int32,System.Int32@,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentCallPlayer(System.Int32,System.Int32@,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentCarwash(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentCashDrop(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentCinema(System.Int32,System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentFromRockstar(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentHeliPickup(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentHireMercenary(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentHireMugger(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Only used once in a script (am_contact_requests)
            p1 = 0
            p2 = 1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentHoldups(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentInStripclub(System.Int32,System.Boolean,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentNoCops(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentPayVehicleInsurancePremium(System.Int32,System.UInt32,System.Int32@,System.Boolean,System.Boolean)">
            <summary>
            According to how I understood this in the freemode script alone,
            The first parameter is determined by a function named, func_5749 within the freemode script which has a list of all the vehicles and a set price to return which some vehicles deals with globals as well. So the first parameter is basically the set in stone insurance cost its gonna charge you for that specific vehicle model.
            
            The second parameter whoever put it was right, they call GET_ENTITY_MODEL with the vehicle as the paremeter.
            
            The third parameter is the network handle as they call their little struct13 func or atleast how the script decompiled it to look which in lamens terms just returns the network handle of the previous owner based on DECOR_GET_INT(vehicle, Previous_Owner).
            
            The fourth parameter is a bool that returns true/false depending on if your bank balance is greater then 0.
            
            The fifth and last parameter is a bool that returns true/false depending on if you have the money for the car based on the cost returned by func_5749. In the freemode script eg,
            bool hasTheMoney = NETWORKCASH::_GET_BANK_BALANCE()  carCost.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentPlayerHealthcare(System.Int32,System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentProstitutes(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentRequestHeist(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentRequestJob(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentRobbedByMugger(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentTaxi(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.NetworkSpentTelescope(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.ProcessCashGift(System.Int32@,System.Int32@,System.String)">
            <summary>
            This isnt a hash collision.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x9777734DAD16992F">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xE260E0BB9CD995AC(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xE154B48B68EF72BC(System.Int32)">
            <summary>
            This function is hard-coded to always return 1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x6FCF8DDEA146C45B(System.Int32)">
            <summary>
            This function is hard-coded to always return 1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xA3EDDAA42411D3B9">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x30FD873ECE50E9F6(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xD987F2489969668C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x75AF80E61248EEBD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xC62DD18375C99130">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x1C2473301B1C66BA">
            <summary>
            NETWORK_CAN_R??? or NETWORK_CAN_S???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x7303E27CC6532080(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32@,System.Int32)">
            <summary>
            NETWORK_CAN_R??? or NETWORK_CAN_S???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x18B7AE224B087E26">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x0CB1BE0633C024A8(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x08B0CA7A6AB3AC32(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x8586789730B10CAF(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xECA658CE2A4E5A72(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x84C0116D012E8FC2(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x31BA138F6304FB9F(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xC8407624CEF2354B(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x9251B6ABF2D0A5B4(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x6B7E4FB50D5F3D65(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xEDEAD9A91EC768B3(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x3E4ADAFF1830F146">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xCDA1C62BE2777802(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x55A1E095DB052FA5(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xDEE612F2D71B0308(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x35F8DA0E8A31EF1B(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x005ACA7100BD101D(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x7C4FCCD2E4DEB394">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xA31FD6A0865B6D14">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xDC18531D7019A535(System.Int32,System.Int32)">
            <summary>
            probably 0x3461981 on console
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xED5AB8860415BABA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x08E8EEADFD0DC4A0">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x5D1E75F91C07DEE5">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xFB2456B2040A6A67">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x4F54F3B6C202FB4E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x13A8DE2FD77D04F3">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xEA560AC9EEB1E19B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x700AF71AE615E6DD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xF9B10B529DCFB33B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x821418C727FCACD7(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x08A1B82B91900682(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xDBC966A01C02BCA7(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x5D97630A8A0EF123(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xFFBE02CD385356BD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x12D148D26538D0F9(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xAC272C0AE01B4BD8(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x5F456788B05FAEAC(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x5182A339A3474510(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xB1F1346FD57685D7">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xB18AC2ECBB15CB6A">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xC1952F3773BA18FE(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x28F174A67B8D0C2F">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x5BCDE0F640C773D2(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xD7CCCBA28C4ECAF0(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xE7DF4E0545DFB56E(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xE8B0B270B6E7C76E(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x05F04155A226FBBF(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x0035BB914316F1E3(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x0FE8E1FCD2B86B33(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xB49ECA122467D05F(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x112209CE0290C03A(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xE23ADC6FCB1F29AE(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x0D30EB83668E63C5(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xED5FD7AF10F5E262(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x6FD97159FE3C971A(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x998E18CEB44487FC(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xCCB339CC970452DA(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x33981D6804E62F49(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xB4C2EC463672474E(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x69EF772B192614C1(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xBD0EFB25CCA8F97A(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xFC4EE00A7B3BFB76(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xA51B086B0B2C0F7A(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x2FAB6614CE22E196(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x675D19C6067CAE08(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xFA07759E6FDDD7CF(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x615EB504B0788DAF(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x4128464231E3CA0B(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x2AFC2D19B50797F2(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x8E243837643D9583(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x365E877C61D6988B(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xA95F667A755725DA(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x0C82D21A77C22D49(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xA75CCF58A60A5FD1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xD99DB210089617FE(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xF70EFA14FE091429(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0x9B5016A6433A68C5">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netcash.Unknown._0xCD0F5B5D932AE473">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Netshop">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopBasketAddItem(System.Int32@,System.Int32)">
            <summary>
            p0 is pointer to a script array
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopBasketApplyServerData(System.Int32,System.Int32@)">
            <summary>
            p0 = unk3::_network_shop_basket_apply_server_data(Global_2590199iParam0 /76/, ANDVar6); = script array
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopBasketEnd">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopBasketIsFull">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopBasketStart(System.Int32@,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopBeginService(System.Int32@,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            int netShop = 2147483647;
            UNK3::_NETWORK_SHOP_BEGIN_SERVICE(ANDetShop, 1474183246, 1982688246, 1445302971, 90000000, 4);
            if (!UNK3::_NETWORK_SHOP_CHECKOUT_START(netShop)) {
            showNotification(Transaction failed!);
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopDoesItemExist(System.String)">
            <summary>
            Belongs in UNK3, non-hashed version of 0x247F0F73A182EA0B
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopDoesItemExistHash(System.UInt32)">
            <summary>
            ex.:
            
            v_15 = sub_10cc8(VEHICLE::GET_VEHICLE_WHEEL_TYPE(a_2));
            if (!MOBILE::_247F0F73A182EA0B(v_15)) {
                return 1;
            }
            
            Belongs in UNK3, hashed version of 0xBD4D7EAF8A30F637
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopCheckoutStart(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopDeleteSetTelemetryNonceSeed">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopEndService(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopGetPrice(System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            bool is always true in game scripts
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopGetTransactionsDisabled">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopGetTransactionsEnabledForCharacter(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopSessionApplyReceivedData(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopSetTelemetryNonceSeed(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopStartSession(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkTransferBankToWallet(System.Int32,System.Int32)">
            <summary>
            used in atm_trigger script.
            
            usage:
            
            int iVar0;        STATS::STAT_GET_INT(GAMEPLAY::GET_HASH_KEY(mpply_last_mp_char), ANDVar0, -1);
            UNK3::_NETWORK_TRANSFER_WALLET_TO_BANK(iVar0, amount);
            
            used to deposit money into bank from wallet, shows up in transaction log.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkShopCashTransferSetTelemetryNonceSeed">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.NetworkTransferWalletToBank(System.Int32,System.Int32)">
            <summary>
            used in atm_trigger script.
            
            usage:
            
            int iVar0;        STATS::STAT_GET_INT(GAMEPLAY::GET_HASH_KEY(mpply_last_mp_char), ANDVar0, -1);
            UNK3::_NETWORK_TRANSFER_BANK_TO_WALLET(iVar0, amount);
            
            used to withdraw money from bank into wallet, shows up in transaction log.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0xE547E9114277098F">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0x3C4487461E9B0DCB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0x74A0FD0688F1EE45(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0x51F1A8E48C3D2F6D(System.Int32,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0x0A6D923DFFC9BD89">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0x85F6C9ABA1DE2BCF">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0x897433D292B44130(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0xE3E5A7C64CA2C6ED">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0x2B949A1E6AEC8F6A">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0x357B152EF96C30B6">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0xCF38DAFBB49EDE5E(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0x0395CB47B022E62C(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0xC13C38E47EA5DF31(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0x170910093218C8B9(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0x72EB7BA9B69BF6AB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0x35A1B3E1D1315CFA(System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0x613F125BA3BD2EB9">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0x23789E777D14CE44">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Netshop.Unknown._0x350AA5EBC03D3BD2">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Network">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Network.ActivateDamageTrackerOnNetworkId(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.BadSportPlayerLeftDetected(System.Int32@,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.CanRegisterMissionEntities(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.CanRegisterMissionObjects(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.CanRegisterMissionPeds(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.CanRegisterMissionPickups(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.CanRegisterMissionVehicles(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.DownloadCheck">
            <summary>
            Downloads prod.cloud.rockstargames.com/titles/gta5/platform/check.json in the same manner that NETWORK_REQUEST_CLOUD_TUNABLES downloads the tunables.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkEnableMotionDrugged">
            <summary>
            Pretty sure this is a hash collision
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetDateAndTimeFromUnixEpoch(System.Int32,System.Int32@)">
            <summary>
            Takes the specified time and writes it to the structure specified in the second argument.
            
            struct date_time
            {
                int year;
                int PADDING1;
                int month;
                int PADDING2;
                int day;
                int PADDING3;
                int hour;
                int PADDING4;
                int minute;
                int PADDING5;
                int second;
                int PADDING6;
            };
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.FadeOutLocalPlayer(System.Boolean)">
            <summary>
            Hardcoded to not work in SP.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.FilloutPmPlayerList(System.Int32@,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.FilloutPmPlayerListWithNames(System.Int32@,System.Int32@,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetPosixTime">
            <summary>
            Return POSIX timestamp.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsPendingFriend(System.Int32)">
            <summary>
            This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetNetworkTime">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetNumReservedMissionObjects(System.Boolean,System.Int32)">
            <summary>
            p0 appears to be for MP
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetNumReservedMissionPeds(System.Boolean,System.Int32)">
            <summary>
            p0 appears to be for MP
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetNumReservedMissionVehicles(System.Boolean,System.Int32)">
            <summary>
            p0 appears to be for MP
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetOnlineVersion">
            <summary>
            Online version is defined here: update\update.rpf\common\data\version.txt
            
            Example:
            
            ONLINE_VERSION_NUMBER
            1.33
            
            _GET_ONLINE_VERSION() will return 1.33
            
            Belongs in NETWORK
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetTimeAsString(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetTimeDifference(System.Int32,System.Int32)">
            <summary>
            Subtracts the second argument from the first.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetTimeOffset(System.Int32,System.Int32)">
            <summary>
            Adds the first argument to the second.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.HasNetworkTimeStarted">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.IsDamageTrackerActiveOnNetworkId(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.IsPlayerInCutscene(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsSignedOnline">
            <summary>
            Returns whether the game is not in offline mode.
            
            seemed not to work for some ppl
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.IsSphereVisibleToAnotherMachine(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.IsSphereVisibleToPlayer(System.Int32,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.IsTimeEqualTo(System.Int32,System.Int32)">
            <summary>
            Returns true if the two times are equal; otherwise returns false.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.IsTimeLessThan(System.Int32,System.Int32)">
            <summary>
            Subtracts the second argument from the first, then returns whether the result is negative.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.IsTimeMoreThan(System.Int32,System.Int32)">
            <summary>
            Subtracts the first argument from the second, then returns whether the result is negative.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAcceptPresenceInvite(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAccessTunableBool(System.String,System.String)">
            <summary>
            Some of the tunable contexts used in the PC scripts:
            
            - CONTENT_MODIFIER_MP_FM_RACES
            - CONTENT_MODIFIER_MP_FM_RACES_CAR
            - CONTENT_MODIFIER_MP_FM_RACES_SEA
            - CONTENT_MODIFIER_MP_FM_RACES_CAR
            - CONTENT_MODIFIER_MP_FM_RACES_AIR
            - CONTENT_MODIFIER_MP_FM_BASEJUMP
            - CONTENT_MODIFIER_MP_FM_RACES_CYCLE
            - CONTENT_MODIFIER_MP_FM_RACES_BIKE
            - CONTENT_MODIFIER_MP_FM_MISSIONS
            - CONTENT_MODIFIER_MP_FM_CONTACT
            - CONTENT_MODIFIER_MP_FM_RANDOM
            - CONTENT_MODIFIER_MP_FM_VERSUS
            - CONTENT_MODIFIER_MP_FM_LTS
            - CONTENT_MODIFIER_MP_FM_CAPTURE
            - CONTENT_MODIFIER_MP_FM_DM
            - CONTENT_MODIFIER_MP_FM_SURVIVAL
            - CONTENT_MODIFIER_MP_FM_GANG_ATTACK
            - CONTENT_MODIFIER_MP_FM_BASEJUMP
            - BASE_GLOBALS
            - MP_GLOBAL
            
            and some of the tunable names used in the PC scripts:
            
            - XP_MULTIPLIER
            - CASH_MULTIPLIER
            - ARMOUR_REWARD_GIFT
            - TOGGLE_CREATORS_OFF
            - MULTIPLAYER_DISABLED
            - TURN_ON_SUMO -- used to hide the sumo gamemode before release
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAccessTunableBoolHash(System.UInt32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAccessTunableFloat(System.String,System.String,System.Single@)">
            <summary>
            Some of the tunable contexts used in the PC scripts:
            
            - CONTENT_MODIFIER_MP_FM_RACES
            - CONTENT_MODIFIER_MP_FM_RACES_CAR
            - CONTENT_MODIFIER_MP_FM_RACES_SEA
            - CONTENT_MODIFIER_MP_FM_RACES_CAR
            - CONTENT_MODIFIER_MP_FM_RACES_AIR
            - CONTENT_MODIFIER_MP_FM_BASEJUMP
            - CONTENT_MODIFIER_MP_FM_RACES_CYCLE
            - CONTENT_MODIFIER_MP_FM_RACES_BIKE
            - CONTENT_MODIFIER_MP_FM_MISSIONS
            - CONTENT_MODIFIER_MP_FM_CONTACT
            - CONTENT_MODIFIER_MP_FM_RANDOM
            - CONTENT_MODIFIER_MP_FM_VERSUS
            - CONTENT_MODIFIER_MP_FM_LTS
            - CONTENT_MODIFIER_MP_FM_CAPTURE
            - CONTENT_MODIFIER_MP_FM_DM
            - CONTENT_MODIFIER_MP_FM_SURVIVAL
            - CONTENT_MODIFIER_MP_FM_GANG_ATTACK
            - CONTENT_MODIFIER_MP_FM_BASEJUMP
            - BASE_GLOBALS
            - MP_GLOBAL
            - MP_CNC_TEAM_COP
            - MP_CNC_TEAM_VAGOS
            - MP_CNC_TEAM_LOST
            - MP_FM_DM
            - MP_FM_RACES
            - MP_FM_RACES_CAR
            - MP_FM_RACES_BIKE
            - MP_FM_RACES_CYCLE
            - MP_FM_RACES_AIR
            - MP_FM_RACES_SEA
            - MP_FM_MISSIONS
            - MP_FM_SURVIVAL
            - MP_FM_BASEJUMP
            - MP_FM_CAPTURE
            - MP_FM_LTS
            -MP_FM_GANG_ATTACK
            
            
            and some of the tunable names used in the PC scripts:
            
            - XP_MULTIPLIER
            - CASH_MULTIPLIER
            - ARMOUR_REWARD_GIFT
            - TOGGLE_CREATORS_OFF
            - MULTIPLAYER_DISABLED
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAccessTunableFloatHash(System.UInt32,System.UInt32,System.Single@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAccessTunableInt(System.String,System.String,System.Int32@)">
            <summary>
            Some of the tunable contexts used in the PC scripts:
            
            - CONTENT_MODIFIER_MP_FM_RACES
            - CONTENT_MODIFIER_MP_FM_RACES_CAR
            - CONTENT_MODIFIER_MP_FM_RACES_SEA
            - CONTENT_MODIFIER_MP_FM_RACES_CAR
            - CONTENT_MODIFIER_MP_FM_RACES_AIR
            - CONTENT_MODIFIER_MP_FM_BASEJUMP
            - CONTENT_MODIFIER_MP_FM_RACES_CYCLE
            - CONTENT_MODIFIER_MP_FM_RACES_BIKE
            - CONTENT_MODIFIER_MP_FM_MISSIONS
            - CONTENT_MODIFIER_MP_FM_CONTACT
            - CONTENT_MODIFIER_MP_FM_RANDOM
            - CONTENT_MODIFIER_MP_FM_VERSUS
            - CONTENT_MODIFIER_MP_FM_LTS
            - CONTENT_MODIFIER_MP_FM_CAPTURE
            - CONTENT_MODIFIER_MP_FM_DM
            - CONTENT_MODIFIER_MP_FM_SURVIVAL
            - CONTENT_MODIFIER_MP_FM_GANG_ATTACK
            - CONTENT_MODIFIER_MP_FM_BASEJUMP
            - BASE_GLOBALS
            - MP_GLOBAL
            
            and some of the tunable names used in the PC scripts:
            
            - XP_MULTIPLIER
            - CASH_MULTIPLIER
            - ARMOUR_REWARD_GIFT
            - TOGGLE_CREATORS_OFF
            - MULTIPLAYER_DISABLED
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAccessTunableIntHash(System.UInt32,System.UInt32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkActionFollowInvite">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAddEntityAngledArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAddEntityArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAddEntityToSynchronisedScene(System.Int32,System.Int32,System.String,System.String,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAddFollowers(System.Int32@,System.Int32)">
            <summary>
            ..
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAddFriend(System.Int32@,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAddPedToSynchronisedScene(System.Int32,System.Int32,System.String,System.String,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkForceLocalUseOfSyncedSceneCamera(System.Int32,System.String,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkBlockKickedPlayers(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAmIBlockedByGamer(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAmIBlockedByPlayer(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAmIMutedByGamer(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAmIMutedByPlayer(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkApplyTransitionParameter(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAreHandlesTheSame(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsPlayerEqualToIndex(System.Int32,System.Int32)">
            <summary>
            NETWORK_ARE_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAreTransitionDetailsValid(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAttachSynchronisedSceneToEntity(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkBail(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkBailTransition(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkBlockInvites(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkCanAccessMultiplayer(System.Int32@)">
            <summary>
            11 - Need to download tunables.
            12 - Need to download background script.
            
            Returns 1 if the multiplayer is loaded, otherwhise 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkCanBail">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkCanEnterMultiplayer">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkCanSessionEnd">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkCanSetWaypoint">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkCanCommunicateWithGamer(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkChangeTransitionSlots(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsClanMembershipFinishedDownloading">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClanAnimation(System.String,System.String)">
            <summary>
            Only documented...
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClanDownloadMembership(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClanDownloadMembershipPending(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetNumMembershipDesc">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClanGetMembership(System.Int32@,System.Int32@,System.Int32)">
            <summary>
            BOOL DEBUG_MEMBRESHIP(int Param)
                {
                 int membership;
                   networkHandleMgr handle;
                  NETWORK_HANDLE_FROM_PLAYER(iSelectedPlayer, ANDandle.netHandle, 13);
            
                 if (!_NETWORK_IS_CLAN_MEMBERSHIP_FINISHED_DOWNLOADING())
                  {
                     if (NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE(ANDaram))
                     {
                         if (NETWORK_CLAN_GET_MEMBERSHIP_COUNT(ANDaram)  0)
                         {
                             if (NETWORK_CLAN_GET_MEMBERSHIP_VALID(ANDaram, 0))
                             {
                                 if (NETWORK_CLAN_GET_MEMBERSHIP(ANDaram, ANDembership, -1))
                                 {
                                     _0xF633805A(ANDembership, 35, ANDandle.netHandle);
                                  }
                             }
                         }
                     }
                 }
                 else
                  {
                     NETWORK_CLAN_DOWNLOAD_MEMBERSHIP(ANDandle.netHandle);
                  }
             }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClanGetMembershipCount(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClanGetMembershipDesc(System.Int32@,System.Int32)">
            <summary>
            networkMembershipMgr memShip;
                    int maxMemship = _GET_NUM_MEMBERSHIP_DESC();
                  for (int i = 0; i  maxMemship; i++)
                   {
                     NETWORK_CLAN_GET_MEMBERSHIP_DESC(ANDemShip.memHandle, i);
                  }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClanGetMembershipValid(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClanJoin(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClanPlayerGetDesc(System.Int32@,System.Int32,System.Int32@)">
            <summary>
            bufferSize is 35 in the scripts.
            
            bufferSize is the elementCount of p0(desc), sizeof(p0) == 280 == p18 == 35  8, p2(netHandle) is obtained from NETWORK::NETWORK_HANDLE_FROM_PLAYER.  And no, I cant explain why 35  sizeof(int) == 280 and not 140, but Ill get back to you on that.
            
            the answer is: because p0 an int64_t / int64_t35.  and FYI p2 is an int64_t13
            
            pastebin.com/cSZniHak
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClanPlayerIsActive(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClanRemoteMembershipsAreInCache(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkPlayerIsInClan">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClearClockTimeOverride">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClearFollowers">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClearFollowInvite">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClearFoundGamers">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClearPropertyId">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClearTransitionCreatorHandle">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkClearVoiceChannel">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkCloseTransitionMatchmaking">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkCreateSynchronisedScene(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32)">
            <summary>
            returns netScene
            this native is missing 2 params
            float p10, float p11
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkDisableInvincibleFlashing(System.Int32,System.Boolean)">
            <summary>
            hash collision???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkDoesNetworkIdExist(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkDoesEntityExistWithNetworkId(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkDoesTunableExist(System.String,System.String)">
            <summary>
            Some of the tunable contexts used in the PC scripts:
            
            - CONTENT_MODIFIER_MP_FM_RACES
            - CONTENT_MODIFIER_MP_FM_RACES_CAR
            - CONTENT_MODIFIER_MP_FM_RACES_SEA
            - CONTENT_MODIFIER_MP_FM_RACES_CAR
            - CONTENT_MODIFIER_MP_FM_RACES_AIR
            - CONTENT_MODIFIER_MP_FM_BASEJUMP
            - CONTENT_MODIFIER_MP_FM_RACES_CYCLE
            - CONTENT_MODIFIER_MP_FM_RACES_BIKE
            - CONTENT_MODIFIER_MP_FM_MISSIONS
            - CONTENT_MODIFIER_MP_FM_CONTACT
            - CONTENT_MODIFIER_MP_FM_RANDOM
            - CONTENT_MODIFIER_MP_FM_VERSUS
            - CONTENT_MODIFIER_MP_FM_LTS
            - CONTENT_MODIFIER_MP_FM_CAPTURE
            - CONTENT_MODIFIER_MP_FM_DM
            - CONTENT_MODIFIER_MP_FM_SURVIVAL
            - CONTENT_MODIFIER_MP_FM_GANG_ATTACK
            - CONTENT_MODIFIER_MP_FM_BASEJUMP
            - BASE_GLOBALS
            - MP_GLOBAL
            
            and some of the tunable names used in the PC scripts:
            
            - XP_MULTIPLIER
            - CASH_MULTIPLIER
            - ARMOUR_REWARD_GIFT
            - TOGGLE_CREATORS_OFF
            - MULTIPLAYER_DISABLED
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkDoesTunableExistHash(System.UInt32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkDoTransitionQuickmatch(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkDoTransitionQuickmatchAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkDoTransitionQuickmatchWithGroup(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkDoTransitionToFreemode(System.Int32@,System.Int32,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            p2 is true 3/4 of the occurrences I found.
            players is the number of players for a session. On PS3/360 its always 18. On PC its 32.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkDoTransitionToGame(System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkDoTransitionToNewFreemode(System.Int32@,System.Int32@,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkDoTransitionToNewGame(System.Boolean,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkEndTutorialSession">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkExplodeVehicle(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            In the console script dumps, this is only referenced once. 
            NETWORK::NETWORK_EXPLODE_VEHICLE(vehicle, 1, 0, 0);
            
            ^^^^^ That must be PC script dumps? In X360 Script Dumps it is reference a few times with 2 differences in the parameters.
            Which as you see below is 1, 0, 0 + 1, 1, 0 + 1, 0, and a param?
            
            am_plane_takedown.c 
            network_explode_vehicle(net_to_veh(Local_40.imm_2), 1, 1, 0);
            
            armenian2.c 
            network_explode_vehicle(Local_806 2, 1, 0, 0);
            
            fm_horde_controler.c
            network_explode_vehicle(net_to_veh(uParam0), 1, 0, uParam0);
            
            fm_mission_controller.c, has 6 hits so not going to list them.
            
            Side note, setting the first parameter to 0 seems to mute sound or so?
            
            Seems its like ADD_EXPLOSION, etc. the first 2 params. The 3rd atm no need to worry since it always seems to be 0.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkFadeInEntity(System.Int32,System.Boolean,System.Int32)">
            <summary>
            state - 0 does 5 fades
            state - 1 does 6 fades
            
            native is missing third argument, also boolean, setting to 1 made vehicle fade in slower, probably slow as per NETWORK_FADE_OUT_ENTITY
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkFadeOutEntity(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            normal - transition like when your coming out of LSC
            slow - transition like when you walk into a mission
             
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkXAffectsGamers(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkFindMatchedGamers(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGamertagFromHandlePending">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGamertagFromHandleStart(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGamertagFromHandleSucceeded">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGamerHasHeadset(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetActivityPlayerNum(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetDesroyerOfEntity(System.Int32,System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetTunablesContentModifierId(System.UInt32)">
            <summary>
            Return the content modifier id (the tunables context if you want) of a specific content.
            
            It takes the content hash (which is the mission id hash), and return the content modifier id, used as the tunables context.
            
            The mission id can be found on the Social club, for example, socialclub.rockstargames.com/games/gtav/jobs/job/A8M6Bz8MLEC5xngvDCzGwA
            
            A8M6Bz8MLEC5xngvDCzGwA is the mission id, so the game hash this and use it as the parameter for this native.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetCurrentlySelectedGamerHandleFromInviteMenu(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetDestroyerOfNetworkId(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetEntityFromNetworkId(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetToVeh(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetToPed(System.Int32)">
            <summary>
            gets the ped id of a network id
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetToObj(System.Int32)">
            <summary>
            gets the object id of a network id
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetToEnt(System.Int32)">
            <summary>
            gets the entity id of a network id
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetEntityIsLocal(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetEntityIsNetworked(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetEntityKillerOfPlayer(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetFoundGamer(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetFriendCount">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetFriendName(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetFriendNameFromIndex(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetGamertagFromHandle(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetServerTime(System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetHostOfScript(System.String,System.Int32,System.Int32)">
            <summary>
            scriptName examples:
            freemode, AM_CR_SecurityVan, ...
            
            Most of the time, these values are used:
            p1 = -1
            p2 = 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetHostOfThisScript">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetLocalHandle(System.Int32@,System.Int32)">
            <summary>
            Retrieves the local players NetworkHandle and stores it in the given buffer.
            
             Currently unknown struct
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkUnlinkNetworkedSynchronisedScene(System.Int32)">
            <summary>
            netScene to scene
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetMaxFriends">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetNumParticipantsHost">
            <summary>
            Seems to always return 0, but its used in quite a few loops.
            
            for (num3 = 0; num3  NETWORK::0xCCD8C02D(); num3++)
                {
                    if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)
                    {
                        var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetNumConnectedPlayers">
            <summary>
            Returns the amount of players connected in the current session. Only works when connected to a session/server.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetNumFoundGamers">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetNumParticipants">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetNumPresenceInvites">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetNumScriptParticipants(System.Int32@,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetParticipantIndex(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetPlayerFromGamerHandle(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetPlayerIndex(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetPlayerIndexFromPed(System.Int32)">
            <summary>
            Returns the Player associated to a given Ped when in an online session.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetPlayerLoudness(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetPresenceInviteHandle(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetPresenceInviteId(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetPresenceInviteInviter(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetPresenceInviteSessionId(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetPrimaryClanDataCancel">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetPrimaryClanDataClear">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetPrimaryClanDataNew(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetPrimaryClanDataPending">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetPrimaryClanDataStart(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetPrimaryClanDataSuccess">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetRandomInt">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetRandomIntInRange(System.Int32,System.Int32)">
            <summary>
            Same as GAMEPLAY::GET_RANDOM_INT_IN_RANGE
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetRespawnResult(System.Int32,RAGE.Vector3,System.Single@)">
            <summary>
            Based on scripts such as in freemode.c how they call their vars vVar and fVar the 2nd and 3rd param it a Vector3 and Float, but the first is based on get_random_int_in_range..
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetScriptStatus">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetTalkerProximity">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetThisScriptIsNetworkScript">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetTimeoutTime">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetTransitionHost(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetTransitionMembers(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHandleFromFriend(System.Int32,System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHandleFromMemberId(System.String,System.Int32@,System.Int32)">
            <summary>
            Returns a NetworkHandle from the specified member ID and stores it in a given buffer.
            
             Currently unknown struct
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHandleFromPlayer(System.Int32,System.Int32@,System.Int32)">
            <summary>
            Returns a handle to networkHandle from the specified player handle and stores it in a given buffer.
            
             Currently unknown struct
            
            Example:
            std::vectorUINT64 GetPlayerNetworkHandle(Player player) {
                const int size = 13;
                uint64_t buffer = std::make_uniqueuint64_t(size).get();
                NETWORK::NETWORK_HANDLE_FROM_PLAYER(player, reinterpret_castint (buffer), 13);
                for (int i = 0; i  size; i++) {
                    Log::Msg(networkhandle%i: %llx, i, bufferi);
                }
                std::vectorUINT64 result(buffer, buffer + sizeof(buffer));
                return result;
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHandleFromUserId(System.String,System.Int32@,System.Int32)">
            <summary>
            Returns a NetworkHandle from the specified user ID and stores it in a given buffer.
            
             Currently unknown struct
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHashFromGamerHandle(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHashFromPlayerHandle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHasControlOfDoor(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHasControlOfEntity(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHasControlOfNetworkId(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHasControlOfPickup(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHasFollowInvite">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHasHeadset">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHasInvitedGamer(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHasInvitedGamerToTransition(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHasPendingInvite">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHasPlayerStartedTransition(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHasRosPrivilege(System.Int32)">
            <summary>
            p0 is always 18 in scripts
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAreRosAvailable">
            <summary>
            Returns whether the Rockstar game services are available or not:
            
            SCLB_NO_ROS = The Rockstar game services are unavailable right now. Please try again later.
            
            prod.ros.rockstargames.com
            prod.telemetry.ros.rockstargames.com
            conductor-prod.ros.rockstargames.com
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHaveOnlinePrivileges">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.IsRockstarBanned">
            <summary>
            if(NETWORK::_IS_ROCKSTAR_BANNED() == 0) means the player is rockstar banned
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.IsSocialclubBanned">
            <summary>
            if(_IS_SOCIALCLUB_BANNED() == 0) means the player is social club banned
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.CanPlayOnline">
            <summary>
            if(_CAN_PLAY_ONLINE() == 0) means the player is banned(Social Club or Rockstar)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHostTransition(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkInviteGamers(System.Int32@,System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkInviteGamersToTransition(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsActivitySession">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsActivitySpectator">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsActivitySpectatorFromHandle(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsAddingFriend">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsCableConnected">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsChattingInPlatformParty(System.Int32@)">
            <summary>
            This would be nice to see if someone is in party chat, but 2 sad notes.
            1) It only becomes true if said person is speaking in that party at the time.
            2) It will never, become true unless you are in that party with said person.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsClockTimeOverridden">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsCloudAvailable">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.HasBgScriptBeenDownloaded">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkHasControlOfPavementStats(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsFindingGamers">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsFriend(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsFriendOnline2(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsFriendIndexOnline(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsFriendInMultiplayer(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsFriendInSameTitle(System.String)">
            <summary>
            In scripts R calls NETWORK_GET_FRIEND_NAME in this param.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsFriendOnline(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsGamerBlockedByMe(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsGamerInMySession(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsGamerMutedByMe(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsGamerTalking(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsGameInProgress">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsHandleValid(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsHost">
            <summary>
            If you are host, returns true else returns false.
            
            anyone know how to use this to find correct host? is possible?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsHostOfThisScript">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsInactiveProfile(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsInMpCutscene">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsSessionActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsInSession">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsInSpectatorMode">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsInTransition">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsInTutorialSession">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsLocalPlayerInvincible">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsMultiplayerDisabled">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsParticipantActive(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsPlayerActive(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsPlayerAParticipant(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsPlayerBlockedByMe(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsPlayerConnected(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsPlayerInMpCutscene(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsPlayerMutedByMe(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsPlayerTalking(System.Int32)">
            <summary>
            returns true if someone is screaming or talking in a microphone
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsScriptActive(System.String,System.Int32,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsSessionBusy">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsSessionStarted">
            <summary>
            This checks if player is playing on gta online or not.
            Please add an if and block your mod if this is true.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsSignedIn">
            <summary>
            Returns whether the player is signed into Social Club.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsTransitionBusy">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsTransitionHost">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsTransitionHostFromHandle(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsTransitionMatchmaking">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsTransitionStarted">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsTransitionToGame">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.HasTunablesBeenDownloaded">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkJoinGroupActivity">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkJoinTransition(System.Int32)">
            <summary>
            int handle76;
                      NETWORK_HANDLE_FROM_FRIEND(iSelectedPlayer, ANDandle0, 13);
                      Player uVar2 = NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(ANDandle0);
                      NETWORK_JOIN_TRANSITION(uVar2);
            nothing doin.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkLaunchTransition">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkRespawnCoords(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            p4 and p5 are always 0 in scripts
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkLeaveTransition">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkMarkTransitionGamerAsFullyJoined(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkMemberIdFromGamerHandle(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkOpenTransitionMatchmaking">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkOverrideChatRestrictions(System.Int32,System.Boolean)">
            <summary>
            Could possibly bypass being muted or automatically muted
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkOverrideClockTime(System.Int32,System.Int32,System.Int32)">
            <summary>
            Works in Singleplayer too.
            
            Actually has a 4th param (BOOL) that sets byte_14273C46C (in b944) to whatever was passed to p3.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkOverrideReceiveRestrictions(System.Int32,System.Boolean)">
            <summary>
            R uses this to hear all player when spectating. 
            It allows you to hear other online players when their chat is on none, crew and or friends
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkOverrideSendRestrictions(System.Int32,System.Boolean)">
            <summary>
            This is used alongside the native,
            NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS. Read its description for more info.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkChatMute(System.Boolean)">
            <summary>
            this function is toggle when people report you and you get the auto mute message 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkOverrideTransitionChat(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkPlayerGetName(System.Int32)">
            <summary>
            Returns the name of a given player. Returns Invalid if CPlayerInfo of the given player cannot be retrieved or the player doesnt exist.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkPlayerGetUserid(System.Int32,System.Int32@)">
            <summary>
            Takes a 24 char buffer. Returns the buffer or Invalid if CPlayerInfo of the given player cannot be retrieved or the player doesnt exist.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkPlayerHasHeadset(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkPlayerIsBadsport">
            <summary>
            Returns whether the player has been reported too often or not.
            Example : griefing.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkPlayerIsCheater">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkPlayerIsRockstarDev(System.Int32)">
            <summary>
            Checks if a specific value (BYTE) in CPlayerInfo is nonzero.
            Returns always false in Singleplayer.
            
            No longer used for dev checks since first mods were released on PS3 AND360.
            R now checks with the is_dlc_present native for the dlc hash 2532323046,
            if that is present it will unlock dev stuff.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkRegisterEntityAsNetworked(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkRegisterHostBroadcastVariables(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkRegisterPlayerBroadcastVariables(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkRemoveAllTransitionInvite">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkRemoveEntityArea(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkRemovePresenceInvite(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkRemoveTransitionInvite(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkRequestCloudBackgroundScripts">
            <summary>
            Start the downloading of BG_NG.RPF from R Cloud which contains hotfix.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkRequestCloudTunables">
            <summary>
            This native start the download of tunables from R cloud
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkRequestControlOfDoor(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkRequestControlOfEntity(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkRequestControlOfNetworkId(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkResetBodyTracker">
            <summary>
            hash collision?? - Not sure, but fits alphabetically
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkResurrectLocalPlayer(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSendPresenceInvite(System.Int32@,System.Int32@,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSendTextMessage(System.String,System.Int32@)">
            <summary>
            how can I increase the character limit on this native?
            --------------------------------
            
            return - its possible for it to have an error and return a value. One error is if it cannot find space to create the event it doesnt send the text and returns zero. It also returns 0 is the strlen is 0 or the strlen  0x100 (I thought it was 64 so idk why its checking 265. I may just be dumb :P ) There are other ways it could return 0 also but who the hell cares cuz its very unlikely, but it returns a bool.
            
            
            to the top guy, idk if it is possible. It is probably read a max of 64 characters on the recieving end so even if we did modify it to send more it probably wouldnt work. One of the other problems is that in part of the function it copies the string to the local stack which means we would have to change that to make it work.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSendTransitionGamerInstruction(System.Int32@,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            the first arg seems to be the network player handle (ANDandle) and the second var is pretty much always  and the third seems to be a number between 0 and ~10 and the 4th is is something like 0 to 5 and I guess the 5th is a bool cuz it is always 0 or 1
            
            does this send an invite to a player?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSendPresenceTransitionInvite(System.Int32@,System.Int32@,System.Int32,System.Int32)">
            <summary>
            String NETWORK_SEND_PRESENCE_TRANSITION_INVITE is contained in the function in ida so this one is correct.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionActivityQuickmatch(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionBlockJoinRequests(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionCancelInvite">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionChangeSlots(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionCrewMatchmaking(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionEnd(System.Boolean,System.Boolean)">
            <summary>
            p0 is always false and p1 varies.
            NETWORK_SESSION_END(0, 1)
            NETWORK_SESSION_END(0, 0)
            Results in: Connection to session lost due to an unknown network error. Please return to Grand Theft Auto V and try again later.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionEnter(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            unknown params
            
            p0 = 0, 2, or 999 (The global is 999 by default.)
            p1 = 0 (Always in every script its found in atleast.)
            p2 = 0, 3, or 4 (Based on a var that is determined by a function.)
            p3 = maxPlayers (Its obvious in x360 scripts its always 18)
            p4 = 0 (Always in every script its found in atleast.)
            p5 = 0 or 1. (1 if network_can_enter_multiplayer, but set to 0 if other checks after that are passed.)
            p5 is reset to 0 if,
            Global_1315318 = 0 or Global_1315323 = 9 or 12 or (Global_1312629 = 0 AND Global_1312631 = true/1) those are passed.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionForceCancelInvite">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionFriendMatchmaking(System.Int32,System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionGetInviter(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionIsPlayerVotedToKick(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionGetUnk(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionHost(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionHostClosed(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionHostFriendsOnly(System.Int32,System.Int32)">
            <summary>
            Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionHostSinglePlayer(System.Int32)">
            <summary>
            Loads up the map that is loaded when beeing in mission creator
            Player gets placed in a mix between online/offline mode
            p0 is always 2 in R scripts.
            
            Appears to be patched in gtav b757 (game gets terminated) alonside with most other network natives to prevent online modding ~ghost30812
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionIsClosedCrew">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionIsClosedFriends">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionIsPrivate">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionIsSolo">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionIsVisible">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionKickPlayer(System.Int32)">
            <summary>
            Only works when you are host.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionLeaveSinglePlayer">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionMarkVisible(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionSetMaxPlayers(System.Int32,System.Int32)">
            <summary>
            playerTypes:
            0 = regular joiner
            4 = spectator
            8 = unknown
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionHosted(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionVoiceHost">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionVoiceLeave">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetKeepFocuspoint(System.Boolean,System.Int32)">
            <summary>
            hash collision???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSessionWasInvited">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetActivitySpectator(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetActivitySpectatorMax(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetCurrentlySelectedGamerHandleFromInviteMenu(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetEntityCanBlend(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetEntityVisibleToNetwork(System.Int32,System.Boolean)">
            <summary>
            if set to true other network players cant see it
            if set to false other network player can see it
            =========================================
            ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
            
            pc or last gen?
            
            ^^ last-gen
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetFriendlyFireOption(System.Boolean)">
            <summary>
            //friendly fire toggle 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetGamerInvitedToTransition(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetInMpCutscene(System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetInSpectatorMode(System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetLocalPlayerInvincibleTime(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetMissionFinished">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetOverrideSpectatorMode(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetPropertyId(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetTalkerProximity(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetTeamOnlyChat(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetThisScriptIsNetworkScript(System.Int32,System.Boolean,System.Int32)">
            <summary>
            p1 is always 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetTransitionActivityId(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetTransitionCreatorHandle(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetVoiceActive(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetVoiceChannel(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkShowProfileUi(System.Int32@)">
            <summary>
            Example:
            
            int playerHandle; 
            NETWORK_HANDLE_FROM_PLAYER(selectedPlayer, ANDlayerHandle, 13);
            NETWORK_SHOW_PROFILE_UI(ANDlayerHandle);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkStartSynchronisedScene(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkStopSynchronisedScene(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSuppressInvite(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkIsTextChatActive">
            <summary>
            Same as _IS_TEXT_CHAT_ACTIVE, except it does not check if the text chat HUD component is initialized, and therefore may crash.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkAccessTunableBoolHashFailVal(System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Returns a default value if the tunable dont exist.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetThisScriptMarked(System.Int32,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkUnregisterNetworkedEntity(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetNetworkIdDynamic(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.ParticipantId">
            <summary>
            Return the local Participant ID
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.ParticipantIdToInt">
            <summary>
            Return the local Participant ID.
            
            This native is exactly the same as PARTICIPANT_ID native.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.ReserveNetworkMissionObjects(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.ReserveNetworkMissionPeds(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.ReserveNetworkMissionVehicles(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetEntityLocallyInvisible(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetEntityLocallyVisible(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetEntityVisibleInCutscene(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.UsePlayerColourInsteadOfTeamColour(System.Boolean,System.Int32)">
            <summary>
            hash collision?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetLocalPlayerInvisibleLocally(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetLocalPlayerVisibleInCutscene(System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetLocalPlayerVisibleLocally(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetNetworkIdSyncToPlayer(System.Int32,System.Int32,System.Boolean)">
            <summary>
            not tested....
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetNetworkIdCanMigrate(System.Int32,System.Boolean)">
            <summary>
            Whether or not another player is allowed to take control of the entity
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetNetworkIdExistsOnAllMachines(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetNetworkIdVisibleInCutscene(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetNetworkVehicleNonContact(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetNetworkVehicleRespotTimer(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetPlayerInvisibleLocally(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetPlayerVisibleLocally(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetStoreEnabled(System.Boolean)">
            <summary>
            Access to the store for shark cards etc...
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.ShutdownAndLaunchSinglePlayerGame">
            <summary>
            Starts a new singleplayer game (at the prologue).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.TextureDownloadGetName(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.TextureDownloadHasFailed(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.TextureDownloadRelease(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.TextureDownloadRequest(System.Int32@,System.String,System.String,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetContentCategory(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetContentDescriptionHash(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetContentFileVersion(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetContentId(System.Int32)">
            <summary>
            Return the mission id of a job.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetContentUserId(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetBalanceAddMachine(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.SetBalanceAddMachines(System.Int32@,System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetBackgroundLoadingRecipients(System.Int32,System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.GetRootContentId(System.Int32)">
            <summary>
            Return the root content id of a job.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkGetNetworkIdFromEntity(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.VehToNet(System.Int32)">
            <summary>
            calls from vehicle to net.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.PedToNet(System.Int32)">
            <summary>
            gets the network id of a ped
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.ObjToNet(System.Int32)">
            <summary>
            Lets objects spawn online simply do it like this:
            
            int createdObject = OBJ_TO_NET(CREATE_OBJECT_NO_OFFSET(oball, pCoords.x, pCoords.y, pCoords.z, 1, 0, 0));
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.NetworkSetRichPresence(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x1F7BC3539F9E0224">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xBD545D44CCE70597">
            <summary>
            MulleDK19: This function is hard-coded to always return 1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xEBCAB9E5048434F4">
            <summary>
            MulleDK19: This function is hard-coded to always return 1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x7808619F31FF22DB">
            <summary>
            MulleDK19: This function is hard-coded to always return 1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xBEC0816FF5ACBCDA(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xE16AA70CE9BEEDC3(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xC64DED7EF0D2FE37(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x3A3D5568AF297CD5(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x4C61B39930D045DA(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xC7ABAC5DE675EE3B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x265635150FB0D82E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x43865688AE10F0D7">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xA75E2B6733DA5142">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x62B9FEC9A11F10EF">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x098AB65B9ED9A9EC(System.Int32@,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x0AE1F1653B554AB9(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xDC48473142545431">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xF12E6CD06C73D69E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x6F44CBF56D79FAC0(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x662635855957C411(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xB4271092CA7EDF48(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x2A7776C709904AB0(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x722F5D28B61C5EA8(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xCA94551B50B4932C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x74FB3E29E6D10FA9">
            <summary>
            MulleDK19: This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xA0FA4EC6A05DA44E">
            <summary>
            MulleDK19: This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x58CC181719256197(System.Int32,System.Int32,System.Int32)">
            <summary>
            MulleDK19: This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x8B0C2964BA471961">
            <summary>
            MulleDK19: This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x88B588B41FF7868E">
            <summary>
            MulleDK19: This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x67FC09BC554A75E5">
            <summary>
            MulleDK19: This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x6FB7BB3607D27FA2">
            <summary>
            MulleDK19: This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xC7BE335216B5EC7C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x0C1F7D49C39D2289">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xA72835064DD63E4C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x0AFCE529F69B21FF">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x89023FBBF9200E9F">
            <summary>
            Something to do with time, used in context:
            NETWORK::GET_TIME_DIFFERENCE(NETWORK::_89023FBBF9200E9F(), ... )
            
            sfink: returns the same value as NETWORK::GET_NETWORK_TIME in freemode.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xF2EAC213D5EA0623">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x12B6281B6C6706C0(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xCB215C4B56A7FAE7(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x0CD9AB83489430EA(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x8BD6C6DEA20E82C6(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x1D4DC17C38FEAFF0">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xEA14EEF5B7CD2C30">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x2EAC52B4019E2782">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xB2092A1EAA7FD45F(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x21D04D7BC538C146(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x7EF7649B64D7FF10(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xA1607996431332DF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x883D79C4071E18B3">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x59328EB08C5CEB2B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x3A8B55FDA4C8DDEF(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x1950DAE9848A4739(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x697F508861875B42(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xFAFC23AEE23868DB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x2B1C623823DB0D9D(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x25B99872D588A101(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xFB680D403909DC70(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x267C78C60E806B9A(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x144DA052257AE7D8(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x99B72C7ABDE5C910(System.Int32,System.Int32)">
            <summary>
            console hash: 0x99F58A07
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xE66C690248F11150(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xEBEFC2E77084F599(System.Int32,System.String,System.Boolean)">
            <summary>
            example from scripts:
            unk_0xE0C28DB5(0,Global_2398291.imm_726,1);
            that global is for ps3/xbox not pc
            no idea what this does does
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xDBD2056652689917(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xBA9775570DB788CF">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xCFEB8AF24FC1D0BB(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xBD0BE0BFC927EAC1">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xFB8F2A6F3DF08CBE">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x8F5D1AD832AEB06C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x135F9B7B7ADD2185(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x2BF66D2E7414F686">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x83F28CE49FBBFFBA(System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x4AD490AE1536933B(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x44B37CDCAE765AAE(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x78321BEA235FD8CD(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x0CF6CC51AA18F0F8(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x60EDD13EB3AC1FF3">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x07EAB372C8841D99(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x595F028698072DD9(System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x2B51EDBEFC301339(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5835D9CD92E83184(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xF45352426FF3A4F0(System.Int32@,System.Int32,System.Int32@)">
            <summary>
            bufferSize is 35 in the scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xC32EA7A2F6CA7557">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xA134777FF7F33331(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x7543BB439F63792B(System.Int32@,System.Int32)">
            <summary>
            bufferSize is 35 in the scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x113E6E3E50E286B0(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x13518FF1C6B28938(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x86E0660E4F5C956D">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x1888694923EF4591">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x140E6A44870A11CE">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x6CE50E47F5543D0C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xF03755696450470C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x1632BE0AC1E62876(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xBBDF066252829606(System.Int32,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xF9B83B77929D8863">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5AE17C6B0134B7F1">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xC505036A35AFD01B(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x407091CF6037118E(System.Int32)">
            <summary>
            Console Hash: 0x9F82917F
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xCA575C391FEA25CC(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xE6717E652B8C8D8A(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5E3AA4CA2B6FB0EE(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xE64A3CA08DFA37A9(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x4DF7CFFF471A7FB1(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x4A2D4E8BF4265B0F(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x815F18AD865F057F(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x2A5E0621DD815A9A(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xFB1F9381E80FA13F(System.Int32,System.Int32)">
            <summary>
            p0 is always 0. p1 is pointing to a global.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x64F62AFB081E260D">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xB7C7F6AD6424304B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xC9B43A33D09CADA7(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x9614B71F8ADB982B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x83660B734994124D(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x350C23949E43686C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xD414BE129BB81B32">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x0E3A041ED6AC2B45">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x7DB53B37A2F211A0">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xC434133D9BA52777(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x37D5F739FD494675(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x2CC848A861D01493">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x02A8BEC6FD9AF660(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x52C1EADAF7B10302">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x638A3A81733086DB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x3855FB5EB2C5E8B2(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x2DA41ED6E1FCD7A5(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x64D779659BC37B19(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x125E6D638B8605D4(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x33DE49EDF4DDE77A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xADB57E5B663CCA8B(System.Int32,System.Single@,System.Single@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xD38C4A6D047C019D">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x617F49C2668E6155">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xFF8FCF9FFC458A1C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x120364DE2845DAF8(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x01ABCE5E7CBDA196">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x82377B65E943F72D(System.Int32)">
            <summary>
            GET_OBJ_ENTITY seems highly unlikely.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x3B39236746714134(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xAA5FAFCD2C5F5E47">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x24409FC4C55CB22D(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x3DBF2DF0AEB7D289(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x742B58F723233ED9(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x8806CEBFABD3CE05(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x728C4CC7920CD102(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xD39B3FFF8FFDD5BF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x6C34F1208B8923FD(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xCF61D4B4702EE9EB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x10BD227A753B0D84">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x3765C3A3E8192E10">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x1353F87E89946207">
            <summary>
            Returns some kind of banned state
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x26F07DD83A5F7F98">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x2E0BF682CC778D49(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x237D5336A9A54108(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xC42DD763159F3461">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xB07D3185E11657A5(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x71DC455F5CD1C2B1(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5D10B3795F3FC886">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xC22912B1D85F26B1(System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x593570C289A77688">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x91B87C55093DE351">
            <summary>
            bool?
            am_crate_drop.c
            ...
            if (network::_network_are_ros_available())
            {
                if (network::_0x91B87C55093DE351())
            ..
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x67A5589628E0CFF6">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x76BF03FADBF154F5">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x3F9990BF5F22759C(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xB57A49545BA53CE7(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xCCA4318E1AB03F1F(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x07DD29D5E22763F1(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xAEEF48CDF5B6CE7C(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5EA784D197556507">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x422D396F80A96547">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x606E4D3E3CCCF3EB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x66B59CFFD78467AF">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x72D918C99BCACC54(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xFAC18E7356BD3210">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x4C2A9FDC22377075">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x2E4C123D1C8A710E(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x16D3D49902F697BB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x71302EC70689052A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x422F32CC7E56ABAD(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x94A8394D150B013A">
            <summary>
            NETWORK_IS_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x2FC5650B0271CB57">
            <summary>
            NETWORK_IS_IN_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xFD8B834A8BA05048">
            <summary>
            NETWORK_IS_IN_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x7242F8B741CE1086(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x74698374C45701D2">
            <summary>
            NETWORK_IS_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xA8ACB6459542A8C8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x1AD5B71586B94820(System.Int32,System.Int32@,System.Int32)">
            <summary>
            unk_0xCEA55F4C(uVar3, AM_ROLLERCOASTER, -1))
            Probably has to do with seeing if they are riding the roller coaster or ferris wheel
            NETWORK_IS_PLAYER_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x919B3C98ED8292F9(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x631DC5DFF4B110E3(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xC0D2AF00BCC234CA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x14922ED3E38761F0">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x8D11E61A4ABF49CC">
            <summary>
            Maybe NETWORK_IS_PSN_AVAILABLE as it only applies to the PS4 version.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x0DBD5D7E3C5BEC3B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x6512765E3BE78C50">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xC571D0E77D8BBC29">
            <summary>
            NETWORK_IS_TRANSITION_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x37A4494483B9F5C9">
            <summary>
            NETWORK_IS_TRANSITION_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5A6AA44FF8E931E6">
            <summary>
            NETWORK_IS_TRANSITION_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5DC577201723960A">
            <summary>
            NETWORK_IS_TRANSITION_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xD0A484CB2F829FBE">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x35F0B98A8387274D">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x59DF79317F85A7E0">
            <summary>
            sfink: related to: NETWORK_BAIL
            NETWORK_BAIL_TRANSITION
            NETWORK_JOIN_GROUP_ACTIVITY
            NETWORK_JOIN_TRANSITION
            NETWORK_LAUNCH_TRANSITION
            NETWORK_SESSION_HOST
            NETWORK_SESSION_HOST_CLOSED
            NETWORK_SESSION_HOST_FRIENDS_ONLY
            NETWORK_SESSION_HOST_SINGLE_PLAYER
            NETWORK_SESSION_VOICE_LEAVE
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xFFE1E5B792D92B34">
            <summary>
            related to: NETWORK_BAIL
            NETWORK_BAIL_TRANSITION
            NETWORK_JOIN_GROUP_ACTIVITY
            NETWORK_JOIN_TRANSITION
            NETWORK_LAUNCH_TRANSITION
            NETWORK_SESSION_HOST
            NETWORK_SESSION_HOST_CLOSED
            NETWORK_SESSION_HOST_FRIENDS_ONLY
            NETWORK_SESSION_HOST_SINGLE_PLAYER
            NETWORK_SESSION_VOICE_LEAVE
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xBF22E0F32968E967(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x261E97AD7BCF3D40(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x39917E1B4CB0F911(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x53C10C8BD774F2C9">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x283B6062A2C01E9B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xA7E30DE9272B6D49(System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            NETWORK_OVERRIDE_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x0FF2862B61A58AF9(System.Boolean)">
            <summary>
            p0 is always false in scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x6F697A66CE78674E(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x172F75B6EE2233BA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x565E430DB3B05BEC(System.Int32)">
            <summary>
            NETWORK_PLAYER_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x2302C0264EA58D31">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x3C891A251567DFCE(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x85A0EF54A500882C(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x45A83257ED02D9BC">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xCFEB46DCD7D8D5EB(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x25D990F8E0E3F13C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xEBF8284D8CADEB53">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xF083835B70BA9BFE">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5626D9D6810730D5">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x62A0296C1BB1CEB3">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x741A3D8380319A81">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xB13E88E655E5A3BC">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xF1B84178F8674195(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x1171A97A3D3981B6(System.Int32@,System.Int32@,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xFA2888E3833C8E96">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xCAE55F48D3D7875C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xDFFA5BE8381C3314">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x53AFD64C6758F2F9">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xD313DE83394AF134">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xBDB6F89C729CF388">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x855BC38818F6F684">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xB5D3453C98456528">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xEF0912DDF7C4CB4B">
            <summary>
            dont know what this native does but im storing some documentation here
            
            
            _NETWORK_VOICE_CONNECT_TO_PLAYER
            _NETWORK_GET_GAMER_STATUS
            _NETWORK_HAS_TRANSITION_INVITE_BEEN_ACKED
            _NETWORK_SEND_PRESENCE_INVITE
            _NETWORK_SEND_PRESENCE_TRANSITION_INVITE
            _NETWORK_CHECK_DATA_MANAGER_SUCCEEDED_FOR_HANDLE
            _NETWORK_CHECK_DATA_MANAGER_FOR_HANDLE
            _NETWORK_CAN_COMMUNICATE_WITH_GAMER
            _NETWORK_CRC_HASH_CHECK_EVENT
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xC6F8AB8A4189CF3A">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x041C7F2A6C9894E6(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x702BC4D605522539(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5ECD378EE64450AB(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x600F8CB31C7AAB6E(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x49EC8030F5015F8B(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xF1EEA2DDA9FFA69D(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x3F52E880AAF6C8CA(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x59D421683D31835A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x1153FA02A659051C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xF49ABC20D8552257(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x4811BBAC21C5FCD5(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5539C3EBF104A53A(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xABD5E88B8A2D3DB2(System.Int32@)">
            <summary>
            Only one occurence in the scripts:
            
            auto sub_cb43(auto a_0, auto a_1) {
                if (g_2594CB._f1) {
                    if (NETWORK::_855BC38818F6F684()) {
                        NETWORK::_ABD5E88B8A2D3DB2(AND_0._fB93);
                        g_2594CB._f14/{13}/ = a_0._fB93;
                        g_2594CB._f4/64/ = a_1;
                        return 1;
                    }
                }
                return 0;
            }
            
            other:
            looks like it passes a player in the paramater
            
            Contains string NETWORK_VOICE_CONNECT_TO_PLAYER in ida
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5B8ED3DB018927B1(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x0E4F77F7B9D74D84(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5C707A667DF8B9FA(System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x0EDE326D47CD0F3E(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x796A87B3B68D1F3D(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xA2E9C1AB8A92E8CD(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x6A5D89D7769A40D8(System.Boolean)">
            <summary>
            Called in freemode related scripts but not freemode itself.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x0D77A82DC2D0DA59(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x66F010A4B031A331(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xFC18DB55AE19E046(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x2CE9D95E4051AECD(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x419594E137637120(System.Boolean,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x524FF0AEFF9C3973(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x7D395EA61622E116(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x94538037EE44F5CF(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xF46A1E03E8755980(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x0379DAF89BA09AA5(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xBA7F0B77D80A4EB7(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x3C5C1E2C2FF814B1(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x1B857666604B1A74(System.Boolean)">
            <summary>
            Console Hash: 0x76A9FEB6
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x367EF5E2F439B4C6(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x9D7AFCBF21C51712(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x4348BFDA56023A2F(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xB309EBEA797E001F(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x265559DA40B3F327(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x7AC752103856FB20(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x0C978FDA19692C2C(System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x82A2B386716608F1">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x83FE8D7229593017">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x9465E683B12D3F6B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x659CF2EF7F550C4F">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5A6FFA2433E2F14C(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <!-- Проигнорирован некорректный комментарий XML для члена "M:RAGE.Game.Network.Unknown._0x4BA92A18502BCA61(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)" -->
        <member name="M:RAGE.Game.Network.Unknown._0x17E0198B3882C2CB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xD66C9E72B3CC4982(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x36391F397731595D(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xDEB2B99A1AF1A2A6(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xF814FEC6A19FD6E0">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xC3BFED92026A2AAD(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x973D76AA760A6CB6(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x04918A41BC9B8157(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xF6F4383B7C92F11A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x1F8E00FB18239600(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x1398582B7F72B3ED(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x8B4FFC790CA131EF(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xCD71A4ECAB22709E(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xB37E4E6A2388CA7B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x4237E822315D8BA9">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x58C21165F6545892(System.String,System.String,System.Int32)">
            <summary>
            Has a 3rd param (int) since patch ???.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xE26CCFF8094D8C74(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x72D0706CD6CCDB58">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x472841A026D26D8B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x715135F4B82AC90D(System.Int32,System.Int32)">
            <summary>
            Used in am_mp_property_ext and am_mp_property_int
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xA2F952104FC6DD4B(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x42613035157E4208(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x17330EBF2F2124A8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x444C4525ECE0A4B9">
            <summary>
            sfink: related to: NETWORK_BAIL
            NETWORK_BAIL_TRANSITION
            NETWORK_JOIN_GROUP_ACTIVITY
            NETWORK_JOIN_TRANSITION
            NETWORK_LAUNCH_TRANSITION
            NETWORK_SESSION_HOST
            NETWORK_SESSION_HOST_CLOSED
            NETWORK_SESSION_HOST_FRIENDS_ONLY
            NETWORK_SESSION_HOST_SINGLE_PLAYER
            NETWORK_SESSION_VOICE_LEAVE
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x4BA166079D658ED4(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x658500AE6D723A7E(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xD7B6C73CAD419BCF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xFAE628F1E9ADB239(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xAAA553E7DD28A457(System.Boolean)">
            <summary>
            console hash: 0xFD0F7EDD
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x838DA0936A24ED4D(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x3FA36981311FA4FF(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x32EBD154CB6B8B99(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xA2A707979FE754DC(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x13F1FCB111B820B0(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xA7C511FA1C5BDA38(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x9ECA15ADFE141431">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x0B203B4AFDE53A4F(System.Int32@,System.Int32@,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xF287F506767CC8A9">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x46FB3ED415C7641C(System.Int32,System.Int32,System.UInt32)">
            <summary>
            p1 = 6
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xA12D3A5A3753CC23">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xE9B99B6853181409">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x17440AA15D1D3739">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xA1E5E0204A6FCC70">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x61A885D3F7CFEE9A">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xBA96394A0EECFA65">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x152D90E4C1B4738A(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x24E4E51FC16305F9">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x162C23CA83ED0A62(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x941E5306BCD7C2C7">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x793FF272D5B365F4">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x4D02279C83BE69FE">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xD5A4B59980401588(System.Int32,System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x40F7E66472DF3E5C(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x8C8D2739BA44AF0F(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x584770794D758C18(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x3A17A27D75C74887">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x7FCC39C46C3C03BD(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x1D610EB0FEA716D9(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x993CBE59D350D225(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x70EA8DA57840F9BE(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x3054F114121C21EA(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xAEAB987727C5A8A4(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xA9240A96C74CCA13(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x32DD916F3F7C9672(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xBF09786A7FCAB582(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xE0A6138401BCB837">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xBAF6BABF9E7CCC13(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x1ACCFBA3D8DAB2EE(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x759299C5BB31D2A9(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x4E548C0D7AE39FF9(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x87E5C46C187FE0AE(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x769951E2455E2EB5">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xCFD115B373C0DF63(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x703F12425ECA8BF5(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xC55A0B40FFB1ED23">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xFBC5E768C7A77A6A">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xB746D20B17F2A229(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x597F8DBA9B206FC7">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x9F6E2821885CAEE2(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xF9E1CCAE8BA4C281(System.Int32,System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x678BB03C1A3BD51E(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5A0A3D1A186A5508">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xA7862BC5ED1DFD7E(System.Int32,System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x3195F8DD0D531052(System.Int32,System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xEDF7F927136C224B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5324A0E3E4CE3570(System.Int32,System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5E24341A7F92A74B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xEBFA8D50ADDC54C4(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x02ADA21EA2F6918F">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x299EF3C576773506">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x63B406D7884BFA95">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x9FEDF86898F100E9">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x2D5DC831176D0114(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xD53ACDBEF24A46E8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xF53E48461B71EECB(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x45E816772E93A9DB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5CAE833B0EE0C500(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x1DE0F5F50D723CAA(System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x692D58DF40657E8C(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x158EC424F35EC469(System.Int32@,System.Boolean,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xC7397A83F7A2A462(System.Int32@,System.Int32,System.Boolean,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x6D4CB481FAC835E8(System.Int32,System.Int32,System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x9BF438815F5D96EA(System.Int32,System.Int32,System.Int32@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets some kind of data related to missions like the online player created races n stuff
            </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x68103E2247887242">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5A34CD9C3C5BEC44(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5E0165278F6339EE(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x171DF6A0C07FB3DC(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x7FD2990AF016795E(System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x274A1519DFC1094F(System.Int32@,System.Boolean,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xD05D1A6C74DA3498(System.Int32@,System.Boolean,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xF98DDE0A8ED09323(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xFD75DABC0957BF33(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x308F96458B7087CC(System.Int32@,System.Int32,System.Int32,System.Int32,System.Int32@,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xC87E740D9F3872CC">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x77758139EC9B66C7(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x4A9FDE3A5A6D0437(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x3E200C2BCF4164EB(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xB606E6CC59664972(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x966DD84FB6A46017">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x6BFF5F84102DF80A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x5C497525F803486B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0xAEDF1BC1C133D6E3">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x2555CF7DA5473794">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Network.Unknown._0x6FD992C4A1C1B986">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Object">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Object.AddDoorToSystem(System.UInt32,System.UInt32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.AttachPortablePickupToPed(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.GetPickupHash(System.Int32)">
            <summary>
            returns pickup hash.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.CreateAmbientPickup(System.UInt32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            Used for doing money drop
            Pickup hashes: pastebin.com/8EuSv2r1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.CreateMoneyPickups(System.Single,System.Single,System.Single,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Spawns one or more money pickups.
            
            x: The X-component of the world position to spawn the money pickups at.
            y: The Y-component of the world position to spawn the money pickups at.
            z: The Z-component of the world position to spawn the money pickups at.
            value: The combined value of the pickups (in dollars).
            amount: The number of pickups to spawn.
            model: The model to use, or 0 for default money model.
            
            Example:
            CREATE_MONEY_PICKUPS(x, y, z, 1000, 3, 0x684a97ae);
            
            Spawns 3 spray cans thatll collectively give $1000 when picked up. (Three spray cans, each giving $334, $334, $332 = $1000).
            
            ==============================================
            
            Max is 2000 in MP. So if you put the amount to 20, but the value to $400,000 eg. They will only be able to pickup 20 - $2,000 bags. So, $40,000
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.CreatePortablePickup2(System.UInt32,System.Single,System.Single,System.Single,System.Boolean,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.CreateObject(System.UInt32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            p5 - last parameter does not mean object handle is returned
            maybe a quick view in disassembly will tell us what is actually does
            
            ----------
            
            prop_tt_screenstatic (0xE2E039BC) is handled different. Not sure how yet but it I know it is.
            thx fr Xenus.oida 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.CreateObjectNoOffset(System.UInt32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            p5 - does not mean object handle is returned
            maybe a quick view in disassembly will tell us what is actually does
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.CreatePickup(System.UInt32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Boolean,System.UInt32)">
            <summary>
            Pickup hashes: pastebin.com/8EuSv2r1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.CreatePickupRotate(System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean,System.UInt32)">
            <summary>
            Pickup hashes: pastebin.com/8EuSv2r1
            
            flags:
            8 (1  3): place on ground
            512 (1  9): spin around
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.CreatePortablePickup(System.UInt32,System.Single,System.Single,System.Single,System.Boolean,System.UInt32)">
            <summary>
            Pickup hashes: pastebin.com/8EuSv2r1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.DeleteObject(System.Int32@)">
            <summary>
            Deletes the specified object, then sets the handle pointed to by the pointer to NULL.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.DetachPortablePickupFromPed(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.DoesObjectOfTypeExistAtCoords(System.Single,System.Single,System.Single,System.Single,System.UInt32,System.Boolean)">
            <summary>
            p5 is usually 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.DoesPickupExist(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.DoesPickupObjectExist(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.IsPickupWithinRadius(System.UInt32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Pickup hashes: pastebin.com/8EuSv2r1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.DoesDesObjectExist(System.Int32)">
            <summary>
            Returns true if a destructible object with this handle exists, false otherwise.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.SetDoorAccelerationLimit(System.UInt32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Sets the acceleration limit of a door.
            How fast it can open, or the inverse hinge resistance.
            
            A limit of 0 seems to lock doors.
            
            p2 is always 0, p3 is always 1.
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.SetDoorAjarAngle(System.UInt32,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Sets the ajar angle of a door.
            Ranges from -1.0 to 1.0, and 0.0 is closed / default.
            
            p2 is always 0, p3 is always 1.
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.GetClosestObjectOfType(System.Single,System.Single,System.Single,System.Single,System.UInt32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Has 8 params in the latest patches.
            
            isMission - if true doesnt return mission objects
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.GetObjectFragmentDamageHealth(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.GetObjectOffsetFromCoords(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.GetPickupCoords(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.GetPickupObject(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.GetDesObject(System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            Gets a destructible objects handle
            
            Example:
            OBJECT::_B48FCED898292E52(-809.9619750976562, 170.919, 75.7406997680664, 3.0, des_tvsmash);
            
            All found arguments for p4 starts with des_ like DES_FIB_Floor and des_shipsink.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.GetSafePickupCoords(System.Single,System.Single,System.Single,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.GetStateOfClosestDoorOfType(System.UInt32,System.Single,System.Single,System.Single,System.Int32@,System.Single@)">
            <summary>
            locked is 0 if no door is found
            locked is 0 if door is unlocked
            locked is 1 if door is found and unlocked.
            
            -------------
            the locked bool is either 0(unlocked)(false) or 1(locked)(true)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.GetDesObjectState(System.Int32)">
            <summary>
            Get a destrictible objects state.
            Substract 1 to get the real state.
            See _SET_DES_OBJECT_STATE to see the different states
            
            For example, if the object just spawned (state 2), the native will return 3.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.GetWeaponHashFromPickup(System.Int32)">
            <summary>
            returns the weapon hash of pickup
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.HasClosestObjectOfTypeBeenBroken(System.Single,System.Single,System.Single,System.Single,System.UInt32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.HasObjectBeenBroken(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.HasPickupBeenCollected(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.IsAnyObjectNearPoint(System.Single,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.IsDoorClosed(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.DoesDoorExist(System.UInt32)">
            <summary>
            Always used prior a door functions Example 
            
            if (OBJECT::_DOES_DOOR_EXIST(doorHash)) 
            {
                OBJECT::REMOVE_DOOR_FROM_SYSTEM(doorHash);
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.IsGarageEmpty(System.Int32,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.IsObjectNearPoint(System.UInt32,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.IsObjectVisible(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.IsPointInAngledArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.MarkObjectForDeletion(System.Int32)">
            <summary>
            is this like setting is as no longer needed?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.PlaceObjectOnGroundProperly(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.RemoveAllPickupsOfType(System.UInt32)">
            <summary>
            Pickup hashes: pastebin.com/8EuSv2r1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.RemoveDoorFromSystem(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.RemovePickup(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.HighlightPlacementCoords(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            draws circular marker at pos
            -1 = none
            0 = red
            1 = green
            2 = blue
            3 = green larger
            4 = nothing
            5 = green small
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.SetActivateObjectPhysicsAsSoonAsItIsUnfrozen(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.SetForceObjectThisFrame(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.DoorControl(System.UInt32,System.Single,System.Single,System.Single,System.Boolean,System.Single,System.Single,System.Single)">
            <summary>
            when you set locked to 0 the door open and to 1 the door close
            OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 0, 0.0, 50.0, 0);  //door open
            
            OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 1, 0.0, 50.0, 0);  //door close
            
            p5-7 - Rot?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.SetObjectPhysicsParams(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adjust the physics parameters of a prop, or otherwise known as object. This is useful for simulated gravity.
            
            Other parameters seem to be unknown.
            
            p2: seems to be weight and gravity related. Higher value makes the obj fall faster. Very sensitive?
            p3: seems similar to p2
            p4: makes obj fall slower the higher the value
            p5: similar to p4
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.SetObjectTargettable(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.SetObjectTextureVariant(System.Int32,System.Int32)">
            <summary>
            enum ObjectPaintVariants
            {
             Pacific = 0,
              Azure = 1,
                Nautical = 2,
             Continental = 3,
              Battleship = 4,
               Intrepid = 5,
             Uniform = 6,
              Classico = 7,
             Mediterranean = 8,
                Command = 9,
              Mariner = 10,
             Ruby = 11,
                Vintage = 12,
             Pristine = 13,
                Merchant = 14,
                Voyager = 15
            };
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.SetPickupRegenerationTime(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.SetStateOfClosestDoorOfType(System.UInt32,System.Single,System.Single,System.Single,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Hardcoded to not work in multiplayer.
            
            
            Used to lock/unlock doors to interior areas of the game.
            
            (Possible) Door Types:
            
            pastebin.com/9S2m3qA4
            
            Heading is either 1, 0 or -1 in the scripts. Means default closed(0) or opened either into(1) or out(-1) of the interior.
            Locked means that the heading is locked.  
            p6 is always 0. 
            
            225 door types, model names and coords found in stripclub.c4:
            pastebin.com/gywnbzsH
            
            get door info: pastebin.com/i14rbekD
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.SetDesObjectState(System.Int32,System.Int32)">
            <summary>
            Defines the state of a destructible object.
            Use the 0xB48FCED898292E52 native to find an objects handle with its name / coords
            
            State 2 == object just spawned
            State 4 == Beginning of the animation
            State 6 == Start animation
            State 9 == End of the animation
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.SetTeamPickupObject(System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.SlideObject(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Returns true if the object has finished moving.
            
            If false, moves the object towards the specified X, Y and Z coordinates with the specified X, Y and Z speed.
            
            See also: gtag.gtagaming.com/opcode-database/opcode/034E/
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.TrackObjectVisibility(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xAA059C615DE9DD03(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x641F272B52E2F0F8(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x85B6C850546FDDE2(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x1E3F1B1B891A2AAA(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xE7E4C198B0185900(System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xA2C1F5E92AFE49ED">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xDA05194260CDCDF9(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x190428512B240692(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x762DB2D380B48D04(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x701FDA1E82076BA4">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x66A49D021870FE88">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xE05F6AEEFEB0BB02(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x589F80B325CC82C5(System.Single,System.Single,System.Single,System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x4BC2854478F3A749(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x160AA1B32F6139B8(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xDF97CDD4FC08FD34(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x65499865FCA6E5EC(System.UInt32)">
            <summary>
            possibly called:
            ADD_DOOR_EXPERIMENTAL_MATRIX
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x9BA001CB45CBF627(System.UInt32,System.Single,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x03C27E13B42A0E82(System.UInt32,System.Single,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xA85A21582451E951(System.UInt32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xD9B71952F78A2640(System.UInt32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xC485E07E4F0B7958(System.UInt32,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xF2E1A7133DD356A6(System.UInt32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xF9C1681347C8BD15(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x4C134B4DF76025D0(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x758A5C1B3B1E1990(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x394CD08E31313C28">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x163F8B586BC95F2A(System.Int32,System.Single,System.UInt32,System.Single,System.Single,System.Single,RAGE.Vector3,System.Int32)">
            <summary>
            only documented params
            dont know what this does.... To Be Continued... 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xDB41D07A45A6D4B7(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x2542269291C6AC84(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xE84EB93729C5F36A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xB3ECA65C7317F174">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x260EE4FDBDF4DB01(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x46494A2475701343(System.Single,System.Single,System.Single,System.Single,System.UInt32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x867458251D47CCB2(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x673ED815D6E323B7(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x0378C08504160D0D(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x372EF6699146A1E4(System.Int32,System.Int32,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xF0EED5A6BC7B237A(System.Int32,System.Int32,System.Int32)">
            <summary>
            IS_OBJECT_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x11D1E53A726891FE(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x024A60DEB0EA69F0(System.Int32,System.Int32,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x1761DC5D8471CBAA(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xC7F29CA00F46350E(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xD76EEEF746057FD6(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x92AEFB5F6E294023(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x4A39DB43E47CF3AA(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x826D1EE4D1CAFC78(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xBCE595371A5FBAAF(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x8CAAB2BD3EA58BD4(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xB2D0BDE54F0E8E5A(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xD05A3241B9A86F19(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x78857FC65CADB909(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x88EAEC617CD26926(System.UInt32,System.Boolean)">
            <summary>
            SET_LOCAL_PLAYER_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x0BF3B3BD47D79C08(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x4D89D607CB3DD1D2(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x77F33F2CCF64B3AA(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x62454A641B41F3C5(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xC6033D32241F6FB5(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x3B2FD68DB5F8331C(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x96EE0EBA0163DF80(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xDF6CA0330F2E737B(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xEB6F1A9B5510A5D2(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x31F924B53EADDF65(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x318516E02DE3ECE2(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x0596843B34B95CE5(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x3ED2B83AB2E82799(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x8881C98A31117998(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x39A5FB7EAF150840(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xA08FE5E49BDC39DD(System.Int32,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xA90E7227A9303FA9(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x858EC9FD25DE04AA(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x1C1B69FAE509BA97(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x616093EC6B139DD9(System.Int32,System.UInt32,System.Boolean)">
            <summary>
            From the scripts:
            
            OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
            OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
            OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 1);
            OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
            OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 0);
            OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 1);
            
            SET_PLAYER_P
            </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x46F3ADD1E2D5BAF2(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xF12E33034D887F66(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0xF92099527DB8E2A7(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Object.Unknown._0x8DCA505A5C196F05(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Pad">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Pad.DisableInputGroup(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.DisableAllControlActions(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.DisableControlAction(System.Int32,System.Int32,System.Boolean)">
            <summary>
            control values and meaning: github.com/crosire/scripthookvdotnet/blob/dev_v3/source/scripting/Controls.cs
            
            0, 1 and 2 used in the scripts. 0 is by far the most common of them.
            
            Control values from the decompiled scripts: 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,5
            4,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,
            79,80,81,82,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,105,
            107,108,109,110,111,112,113,114,115,116,117,118,119,123,126,129,130,131,132,
            133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,
            153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172
            ,177,187,188,189,190,195,196,199,200,201,202,203,205,207,208,209,211,212,213, 217,219,220,221,225,226,230,234,235,236,237,238,239,240,241,242,243,244,257,
            261,262,263,264,265,270,271,272,273,274,278,279,280,281,282,283,284,285,286,
            287,288,289,337.
            
            Example: CONTROLS::DISABLE_CONTROL_ACTION(2, 19, true) disables the switching UI from appearing both when using a keyboard and Xbox 360 controller. Needs to be executed each frame. 
             
            Control group 1 and 0 gives the same results as 2. Same results for all players. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.EnableAllControlActions(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.EnableControlAction(System.Int32,System.Int32,System.Boolean)">
            <summary>
            control values and meaning: github.com/crosire/scripthookvdotnet/blob/dev/source/scripting/Controls.hpp
            
            0, 1 and 2 used in the scripts.
            
            Control values from the decompiled scripts: 
            0,1,2,3,4,5,6,8,9,10,11,14,15,16,17,19,21,22,24,25,26,30,31,32,33,34,35,36,
            37,44,46,47,59,60,65,68,69,70,71,72,73,74,75,76,79,80,81,82,86,95,98,99,100
            ,101,114,140,141,143,172,173,174,175,176,177,178,179,180,181,187,188,189,19
            0,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,217,218,219,2
            20,221,225,228,229,230,231,234,235,236,237,238,239,240,241,242,245,246,257,
            261,262,263,264,286,287,288,289,337,338,339,340,341,342,343
            
            INPUTGROUP_MOVE
            INPUTGROUP_LOOK
            INPUTGROUP_WHEEL
            INPUTGROUP_CELLPHONE_NAVIGATE
            INPUTGROUP_CELLPHONE_NAVIGATE_UD
            INPUTGROUP_CELLPHONE_NAVIGATE_LR
            INPUTGROUP_FRONTEND_DPAD_ALL
            INPUTGROUP_FRONTEND_DPAD_UD
            INPUTGROUP_FRONTEND_DPAD_LR
            INPUTGROUP_FRONTEND_LSTICK_ALL
            INPUTGROUP_FRONTEND_RSTICK_ALL
            INPUTGROUP_FRONTEND_GENERIC_UD
            INPUTGROUP_FRONTEND_GENERIC_LR
            INPUTGROUP_FRONTEND_GENERIC_ALL
            INPUTGROUP_FRONTEND_BUMPERS
            INPUTGROUP_FRONTEND_TRIGGERS
            INPUTGROUP_FRONTEND_STICKS
            INPUTGROUP_SCRIPT_DPAD_ALL
            INPUTGROUP_SCRIPT_DPAD_UD
            INPUTGROUP_SCRIPT_DPAD_LR
            INPUTGROUP_SCRIPT_LSTICK_ALL
            INPUTGROUP_SCRIPT_RSTICK_ALL
            INPUTGROUP_SCRIPT_BUMPERS
            INPUTGROUP_SCRIPT_TRIGGERS
            INPUTGROUP_WEAPON_WHEEL_CYCLE
            INPUTGROUP_FLY
            INPUTGROUP_SUB
            INPUTGROUP_VEH_MOVE_ALL
            INPUTGROUP_CURSOR
            INPUTGROUP_CURSOR_SCROLL
            INPUTGROUP_SNIPER_ZOOM_SECONDARY
            INPUTGROUP_VEH_HYDRAULICS_CONTROL
            
            
            Took those in IDA Pro.Not sure in which order they go
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.GetControlInstructionalButton(System.Int32,System.Int32,System.Boolean)">
            <summary>
            formerly called _GET_CONTROL_ACTION_NAME incorrectly
            
            p2 appears to always be true.
            p2 is unused variable in function.
            
            EG:
            GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 201, 1) /INPUT_FRONTEND_ACCEPT (e.g. Enter button)/
            GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 202, 1) /INPUT_FRONTEND_CANCEL (e.g. ESC button)/
            GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 51, 1) /INPUT_CONTEXT (e.g. E button)/
            
            gtaforums.com/topic/819070-c-draw-instructional-buttons-scaleform-movie/#entry1068197378
            
            
            0, 1 and 2 used in the scripts. 0 is by far the most common of them.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.GetControlNormal(System.Int32,System.Int32)">
            <summary>
            Returns the value of CONTROLS::GET_CONTROL_VALUE Normalized (ie a real number value between -1 and 1)
            
            0, 1 and 2 used in the scripts. 0 is by far the most common of them.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.GetControlValue(System.Int32,System.Int32)">
            <summary>
            
            
            0, 1 and 2 used in the scripts. 0 is by far the most common of them.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.GetDisabledControlNormal(System.Int32,System.Int32)">
            <summary>
            control - c# works with (int)GTA.Control.CursorY / (int)GTA.Control.CursorX and returns the mouse movement (additive).
            
            
            0, 1 and 2 used in the scripts. 0 is by far the most common of them.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.GetLocalPlayerAimState">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.IsControlEnabled(System.Int32,System.Int32)">
            <summary>
            Control Groups:
            
            enum InputGroups
            {
                INPUTGROUP_MOVE = 0,
              INPUTGROUP_LOOK = 1,
              INPUTGROUP_WHEEL = 2,
             INPUTGROUP_CELLPHONE_NAVIGATE = 3,
                INPUTGROUP_CELLPHONE_NAVIGATE_UD = 4,
             INPUTGROUP_CELLPHONE_NAVIGATE_LR = 5,
             INPUTGROUP_FRONTEND_DPAD_ALL = 6,
             INPUTGROUP_FRONTEND_DPAD_UD = 7,
              INPUTGROUP_FRONTEND_DPAD_LR = 8,
              INPUTGROUP_FRONTEND_LSTICK_ALL = 9,
               INPUTGROUP_FRONTEND_RSTICK_ALL = 10,
              INPUTGROUP_FRONTEND_GENERIC_UD = 11,
              INPUTGROUP_FRONTEND_GENERIC_LR = 12,
              INPUTGROUP_FRONTEND_GENERIC_ALL = 13,
             INPUTGROUP_FRONTEND_BUMPERS = 14,
             INPUTGROUP_FRONTEND_TRIGGERS = 15,
                INPUTGROUP_FRONTEND_STICKS = 16,
              INPUTGROUP_SCRIPT_DPAD_ALL = 17,
              INPUTGROUP_SCRIPT_DPAD_UD = 18,
               INPUTGROUP_SCRIPT_DPAD_LR = 19,
               INPUTGROUP_SCRIPT_LSTICK_ALL = 20,
                INPUTGROUP_SCRIPT_RSTICK_ALL = 21,
                INPUTGROUP_SCRIPT_BUMPERS = 22,
               INPUTGROUP_SCRIPT_TRIGGERS = 23,
              INPUTGROUP_WEAPON_WHEEL_CYCLE = 24,
               INPUTGROUP_FLY = 25,
              INPUTGROUP_SUB = 26,
              INPUTGROUP_VEH_MOVE_ALL = 27,
             INPUTGROUP_CURSOR = 28,
               INPUTGROUP_CURSOR_SCROLL = 29,
                INPUTGROUP_SNIPER_ZOOM_SECONDARY = 30,
                INPUTGROUP_VEH_HYDRAULICS_CONTROL = 31,
               MAX_INPUTGROUPS = 32,
             INPUTGROUP_INVALID = 33
            };
            0, 1 and 2 used in the scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.IsControlJustPressed(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.IsControlJustReleased(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.IsControlPressed(System.Int32,System.Int32)">
            <summary>
            index always is 2 for xbox 360 controller and razerblade
            
            0, 1 and 2 used in the scripts. 0 is by far the most common of them.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.IsControlReleased(System.Int32,System.Int32)">
            <summary>
            0, 1 and 2 used in the scripts. 0 is by far the most common of them.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.IsDisabledControlJustPressed(System.Int32,System.Int32)">
            <summary>
            0, 1 and 2 used in the scripts. 0 is by far the most common of them.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.IsDisabledControlJustReleased(System.Int32,System.Int32)">
            <summary>
            0, 1 and 2 used in the scripts. 0 is by far the most common of them.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.IsDisabledControlPressed(System.Int32,System.Int32)">
            <summary>
            0, 1 and 2 used in the scripts. 0 is by far the most common of them.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.IsLookInverted">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.IsInputJustDisabled(System.Int32)">
            <summary>
            I may be wrong with this one, but from the looks of the scripts, it sets keyboard related stuff as soon as this returns true.
            
            0, 1 and 2 used in the scripts. 0 is by far the most common of them.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.IsInputDisabled(System.Int32)">
            <summary>
            Seems to return true if the input is currently disabled. _GET_LAST_INPUT_METHOD didnt seem very accurate, but Ive left the original description below.
            
            --
            
            index usually 2
            
            returns true if the last input method was made with mouse + keyboard, false if it was made with a gamepad
            
            0, 1 and 2 used in the scripts. 0 is by far the most common of them.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.SetPadShake(System.Int32,System.Int32,System.Int32)">
            <summary>
            p0 always seems to be 0
            duration in milliseconds 
            frequency should range from about 10 (slow vibration) to 255 (very fast)
            appears to be a hash collision, though it does do what it says
            
            example:
            SET_PAD_SHAKE(0, 100, 200);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.SetControlNormal(System.Int32,System.Int32,System.Single)">
            <summary>
            This is for simulating player input.
            amount is a float value from 0 - 1
            
            0, 1 and 2 used in the scripts. 0 is by far the most common of them.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.SetCursorLocation(System.Single,System.Single)">
            <summary>
            Renamed to SET_CURSOR_LOCATION (I previously named it _SET_CURSOR_POSTION) which is the correct name as far as I can tell.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.SetInputExclusive(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.SetPlayerpadShakesWhenControllerDisabled(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.StopPadShake(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0xCB0360EFEFB2580D(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0xA0CEFCEA390AAB9B(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0xFC859E2374407556">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0x80C2FD58D720C801(System.Int32,System.Int32,System.Boolean)">
            <summary>
            0, 1 and 2 used in the scripts. 0 is by far the most common of them.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0xD7D22F5592AED8BA(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0x5B84D09CEC5209C5(System.Int32,System.Int32)">
            <summary>
            Seems to return values between -1 and 1 for controls like gas and steering.
            
            0, 1 and 2 used in the scripts. 0 is by far the most common of them.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0x4F8A26A890FD62FB(System.Int32,System.Int32)">
            <summary>
            The disabled variant of _0x5B84D09CEC5209C5.
            
            0, 1 and 2 used in the scripts. 0 is by far the most common of them.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0x0F70731BACCFBB96">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0x59B9A7AF4C95133C">
            <summary>
            Same behavior as GET_LOCAL_PLAYER_AIM_STATE but only used on the PC version.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0x6CD79468A1E595C6(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0xFB6C4072E9A32E92(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0xE1615EC03B3BB4FD">
            <summary>
            Used with IS_LOOK_INVERTED() and negates its affect.
            
            --
            
            Not sure how the person above got that description, but heres an actual example:
            
            if (CONTROLS::_GET_LAST_INPUT_METHOD(2)) {
                if (a_5) {
                    if (CONTROLS::IS_LOOK_INVERTED()) {
                        a_3 = -1;
                    }
                    if (CONTROLS::_E1615EC03B3BB4FD()) {
                        a_3 = -1;
                    }
                }
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0x23F09EADC01449D6(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0x8290252FFF36ACB5(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            HUD_COLOUR_CONTROLLER_CHOP = 174;
            
            UI::GET_HUD_COLOUR(174, AND_6, AND_7, AND_8, AND_9);
            CONTROLS::_8290252FFF36ACB5(0, v_6, v_7, v_8);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0xF239400E16C23E08(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0x5B73C77D9EB66E24(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0x643ED62D5EA3BEBD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0x3D42B92563939375(System.String)">
            <summary>
            Used in carsteal3 script with p0 = Carsteal4_spycar.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0x4683149ED1DDE7A1(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pad.Unknown._0x14D29BB12D47F68C(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Pathfind">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Pathfind.AddNavmeshBlockingObject(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.AddNavmeshRequiredRegion(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.AreAllNavmeshRegionsLoaded">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.CalculateTravelDistanceBetweenPoints(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculates the travel distance between a set of points.
            
            Doesnt seem to correlate with distance on gps sometimes.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.DisableNavmeshInArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.DoesNavmeshBlockingObjectExist(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GenerateDirectionsToCoord(System.Single,System.Single,System.Single,System.Boolean,System.Single@,System.Single@,System.Single@)">
            <summary>
            Usage example:
            
            Public Function GenerateDirectionsToCoord(Pos As Vector3) As Tuple(Of String, Single, Single)
                    Dim f4, f5, f6 As New OutputArgument()
                    Native.Function.Call(Hash.GENERATE_DIRECTIONS_TO_COORD, Pos.X, Pos.Y, Pos.Z, True, f4, f5, f6)
                    Dim direction As String = f4.GetResult(Of Single)()
                    Return New Tuple(Of String, Single, Single)(direction.Substring(0, 1), f5.GetResult(Of Single)(), f6.GetResult(Of Single)())
                End Function
            
            p3 I use 1
            
            direction:
            0 = You Have Arrive
            1 = Recalculating Route, Please make a u-turn where safe
            2 = Please Proceed the Highlighted Route
            3 = Keep Left (unsure)
            4 = In (distToNxJunction) Turn Left
            5 = In (distToNxJunction) Turn Right
            6 = Keep Right (unsure)
            7 = In (distToNxJunction) Go Straight Ahead
            8 = In (distToNxJunction) Join the freeway
            9 = In (distToNxJunction) Exit Freeway
            
            return value set to 0 always
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GetClosestMajorVehicleNode(System.Single,System.Single,System.Single,RAGE.Vector3,System.Single,System.Int32)">
            <summary>
            Get the closest vehicle node to a given position, unknown1 = 3.0, unknown2 = 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GetClosestRoad(System.Single,System.Single,System.Single,System.Single,System.Int32,RAGE.Vector3,RAGE.Vector3,System.Int32@,System.Int32@,System.Single@,System.Boolean)">
            <summary>
            p1 seems to be always 1.0f in the scripts
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GetClosestVehicleNode(System.Single,System.Single,System.Single,RAGE.Vector3,System.Int32,System.Single,System.Single)">
            <summary>
            FYI: When falling through the map (or however you got under it) you will respawn when your player peds height is = -200.0 meters (I think you all know this) and when in a vehicle you will actually respawn at the closest vehicle node.
            
            ----------
            
            Vector3 nodePos;
            GET_CLOSEST_VEHICLE_NODE(x,y,z,ANDodePos,...)
            
            p4 is either 0, 1 or 8. 1 means any path/road. 0 means node in the middle of the closest main (asphalt) road.
            p5, p6 are always the same:
            0x40400000 (3.0), 0
            p5 can also be 100.0 and p6 can be 2.5:
            PATHFIND::GET_CLOSEST_VEHICLE_NODE(a_0, AND_5, v_9, 100.0, 2.5)
            
            Known node types: simple path/asphalt road, only asphalt road, water, under the map at always the same coords. 
            
            The node types follows a pattern. For example, every fourth node is of the type water i.e. 3, 7, 11, 15, 19, 23, 27, 31, 35, 39... 239. Could not see any difference between nodes within certain types. 
            Starting at 2, every fourth node is under the map, always same coords.
            Same with only asphalt road (0, 4, 8, etc) and simple path/asphalt road (1, 5, 9, etc). 
            
            gtaforums.com/topic/843561-pathfind-node-types
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GetClosestVehicleNodeWithHeading(System.Single,System.Single,System.Single,RAGE.Vector3,System.Single@,System.Int32,System.Single,System.Int32)">
            <summary>
            p5, p6 and p7 seems to be about the same as p4, p5 and p6 for GET_CLOSEST_VEHICLE_NODE. p6 and/or p7 has something to do with finding a node on the same path/road and same direction(at least for this native, something to do with the heading maybe). Edit this when you find out more.
            
            p5 is either 1 or 12. 1 means any path/road. 12, 8, 0 means node in the middle of the closest main (asphalt) road.
            p6 is always 3.0
            p7 is always 0.
            
            Known node types: simple path/asphalt road, only asphalt road, water, under the map at always the same coords. 
            
            The node types follows a pattern. For example, every fourth node is of the type water i.e. 3, 7, 11, 15, 19, 23, 27, 31, 35, 39... 239. Could not see any difference between nodes within certain types. 
            Starting at 2, every fourth node is under the map, always same coords.
            Same with only asphalt road (0, 4, 8, etc) and simple path/asphalt road (1, 5, 9, etc).
            
            gtaforums.com/topic/843561-pathfind-node-types
            
            Example of usage, moving vehicle to closest path/road:
            Vector3 coords = ENTITY::GET_ENTITY_COORDS(playerVeh, true);
            Vector3 closestVehicleNodeCoords; 
            float roadHeading; 
            PATHFIND::GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(coords.x, coords.y, coords.z, ANDlosestVehicleNodeCoords, ANDoadHeading, 1, 3, 0); 
            ENTITY::SET_ENTITY_HEADING(playerVeh, roadHeading);
            ENTITY::SET_ENTITY_COORDS(playerVeh, closestVehicleNodeCoords.x, closestVehicleNodeCoords.y, closestVehicleNodeCoords.z, 1, 0, 0, 1);
            VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(playerVeh);
            
            ------------------------------------------------------------------
            C# Example (ins1de) : pastebin.com/fxtMWAHD
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GetNthClosestVehicleNode(System.Single,System.Single,System.Single,System.Int32,RAGE.Vector3,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GetNthClosestVehicleNodeFavourDirection(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,RAGE.Vector3,System.Single@,System.Int32,System.Int32,System.Int32)">
            <summary>
            See gtaforums.com/topic/843561-pathfind-node-types for node type info. 0 = paved road only, 1 = any road, 3 = water
            
            p10 always equal 0x40400000
            p11 always equal 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GetNthClosestVehicleNodeId(System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Returns the id.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GetNthClosestVehicleNodeIdWithHeading(System.Single,System.Single,System.Single,System.Int32,RAGE.Vector3,System.Single,System.Int32,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GetNthClosestVehicleNodeWithHeading(System.Single,System.Single,System.Single,System.Int32,RAGE.Vector3,System.Single@,System.Int32@,System.Int32,System.Single,System.Single)">
            <summary>
            Get the nth closest vehicle node and its heading. (unknown2 = 9, unknown3 = 3.0, unknown4 = 2.5)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GetRandomVehicleNode(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,RAGE.Vector3,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GetSafeCoordForPed(System.Single,System.Single,System.Single,System.Boolean,RAGE.Vector3,System.Int32)">
            <summary>
            When onGround == true outPosition is a position located on the nearest pavement.
            
            When a safe coord could not be found the result of a function is false and outPosition == Vector3.Zero.
            
            In the scripts these flags are used: 0, 14, 12, 16, 20, 21, 28. 0 is most commonly used, then 16. 
            
            16 works for me, 0 crashed the script.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GetStreetNameAtCoord(System.Single,System.Single,System.Single,System.Int32@,System.Int32@)">
            <summary>
            Determines the name of the street which is the closest to the given coordinates.
            
            x,y,z - the coordinates of the street
            streetName - returns a hash to the name of the street the coords are on
            crossingRoad - if the coordinates are on an intersection, a hash to the name of the crossing road
            
            Note: the names are returned as hashes, the strings can be returned using the function UI::GET_STREET_NAME_FROM_HASH_KEY.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GetSupportsGpsRouteFlag(System.Int32)">
            <summary>
            p0 = VEHICLE_NODE_ID
            
            Returns false for nodes that arent used for GPS routes.
            Example:
            Nodes in Fort Zancudo and LSIA are false
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GetIsSlowRoadFlag(System.Int32)">
            <summary>
            p0 = VEHICLE_NODE_ID
            
            Returns true when the node is Offroad. Alleys, some dirt roads, and carparks return true.
            Normal roads where plenty of Peds spawn will return false
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GetVehicleNodePosition(System.Int32,RAGE.Vector3)">
            <summary>
            Calling this with an invalid node id, will crash the game.
            Note that IS_VEHICLE_NODE_ID_VALID simply checks if nodeId is not zero. It does not actually ensure that the id is valid.
            Eg. IS_VEHICLE_NODE_ID_VALID(1) will return true, but will crash when calling GET_VEHICLE_NODE_POSITION().
            
            sfink: This native returns a pointer to a packed Vector3 struct in the RAX register, as do the following natives:
            AI::WAYPOINT_RECORDING_GET_COORD
            ENTITY::GET_ENTITY_MATRIX
            FIRE::GET_CLOSEST_FIRE_POS
            GAMEPLAY::FIND_SPAWN_POINT_IN_DIRECTION
            GAMEPLAY::GET_MODEL_DIMENSIONS
            GAMEPLAY::OVERRIDE_SAVE_HOUSE
            GAMEPLAY::_0x82FDE6A57EE4EE44
            GAMEPLAY::_0x8BDC7BFC57A81E76
            GAMEPLAY::_0x8D7A43EC6A5FEA45
            GAMEPLAY::_0xA4A0065E39C9F25C
            GAMEPLAY::_0xDFB4138EEFED7B81
            MOBILE::GET_MOBILE_PHONE_POSITION
            MOBILE::GET_MOBILE_PHONE_ROTATION
            NETWORK::NETWORK_GET_RESPAWN_RESULT
            OBJECT::_0x163F8B586BC95F2A
            PATHFIND::GET_CLOSEST_MAJOR_VEHICLE_NODE
            PATHFIND::GET_CLOSEST_ROAD
            PATHFIND::GET_CLOSEST_VEHICLE_NODE
            PATHFIND::GET_CLOSEST_VEHICLE_NODE_WITH_HEADING
            PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE
            PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION
            PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING
            PATHFIND::GET_RANDOM_VEHICLE_NODE
            PATHFIND::GET_SAFE_COORD_FOR_PED
            PATHFIND::GET_VEHICLE_NODE_POSITION
            PATHFIND::_0x16F46FB18C8009E4
            VEHICLE::_0xA4822F1CF23F4810
            VEHICLE::_0xDF7E3EEB29642C38
            WATER::TEST_PROBE_AGAINST_ALL_WATER
            WATER::TEST_PROBE_AGAINST_WATER
            WEAPON::GET_PED_LAST_WEAPON_IMPACT_COORD
            WORLDPROBE::_0xFF6BE494C7987F34
            WORLDPROBE::_GET_RAYCAST_RESULT
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.GetVehicleNodeProperties(System.Single,System.Single,System.Single,System.Int32@,System.Int32@)">
            <summary>
            MulleDK19: Gets the density and flags of the closest node to the specified position.
            Density is a value between 0 and 15, indicating how busy the road is.
            Flags is a bit field.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.IsNavmeshLoadedInArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns whether navmesh for the region is loaded. The region is a rectangular prism defined by its top left deepest corner to its bottom right shallowest corner.
            
            If you can re-word this so it makes more sense, please do. Im horrible with words sometimes...
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.IsPointOnRoad(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Gets a value indicating whether the specified position is on a road.
            The vehicle parameter is not implemented (ignored).
            
            -MulleDK19
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.IsVehicleNodeIdValid(System.Int32)">
            <summary>
            Returns true if the id is non zero.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.RemoveNavmeshBlockingObject(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.RemoveNavmeshRequiredRegions">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.SetGpsDisabledZone(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.SetIgnoreNoGpsFlag(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.SetPedPathsBackToOriginal(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.SetPedPathsInArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.SetRoadsBackToOriginal(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            missing a last parameter int p6 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.SetRoadsBackToOriginalInAngledArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            bool p7 - always 1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.SetRoadsInAngledArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            / Corrected conflicting parameter names /
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.SetRoadsInArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            / Corrected conflicting parameter names /
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.UpdateNavmeshBlockingObject(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0xAA76052DDA9BFC3E(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0xF7B79A50B905A30D(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Only did a quick disassembly, but this function seems to load all path nodes in the given area. Parameters appear to be start x, start y, end x, end y.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0x2801D0012266DF07(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0x3599D741C9AC6310(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0x336511A34F2E5185(System.Single,System.Single)">
            <summary>
            calculates two distances  
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0x8ABE8608576D9CE3(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0x29C24BFBED8AB8FB(System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0x869DAACBBE9FA006">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0xBBB45C3CF5C8AA85">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0xD3A6A0EF48823A8C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0x01708E8DD3FF8C65(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0x16F46FB18C8009E4(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0xF3162836C28F9DA5(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0xA0F8A7517A273C05(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0x705A844002B39DC0">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0x07FB139B592FA687(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0x228E5C6AD4D74BFD(System.Boolean)">
            <summary>
            Probably the opposite of  0x80E4A6EDDB0BE8D9 / LOAD_ALL_PATH_NODES
            </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0x0B919E1FB47CC4E0(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0xD0BC1C6FB18EE154(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Pathfind.Unknown._0x1FC289A0C3FF470F(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Ped">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Ped.AddArmourToPed(System.Int32,System.Int32)">
            <summary>
            Same as SET_PED_ARMOUR, but ADDS amount to the armor the Ped already has.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedDecoration(System.Int32,System.UInt32,System.UInt32)">
            <summary>
            Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.
            
            collection - PedDecorationCollection filename hash
            overlay - Item name hash
            
            Example:
            Entry inside mpbeach_overlays.xml -
            Item
              uvPos x=0.500000 y=0.500000 /
              scale x=0.600000 y=0.500000 /
              rotation value=0.000000 /
              nameHashFM_Hair_Fuzz/nameHash
              txdHashmp_hair_fuzz/txdHash
              txtHashmp_hair_fuzz/txtHash
              zoneZONE_HEAD/zone
              typeTYPE_TATTOO/type
              factionFM/faction
              garmentAll/garment
              genderGENDER_DONTCARE/gender
              award /
              awardLevel /
            /Item
            
            Code:
            PED::_0x5F5D1665E352A839(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(mpbeach_overlays), GAMEPLAY::GET_HASH_KEY(fm_hair_fuzz))
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedFacialDecoration(System.Int32,System.UInt32,System.UInt32)">
            <summary>
            Console Hash: 0x8CD3E487
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.AddRelationshipGroup(System.String,System.Int32@)">
            <summary>
            Cant select void. This function returns nothing. The hash of the created relationship group is output in the second parameter.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.AddScenarioBlockingArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ApplyDamageToPed(System.Int32,System.Int32,System.Boolean)">
            <summary>
            damages a ped with the given amount
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ApplyPedBlood(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.String)">
            <summary>
            Found one occurence in re_crashrescue.c4
            
            PED::APPLY_PED_BLOOD(l_4B, 3, 0.0, 0.0, 0.0, wound_sheet);
            
            - winject
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ApplyPedBloodByZone(System.Int32,System.Int32,System.Single,System.Single,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ApplyPedBloodDamageByZone(System.Int32,System.Int32,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ApplyPedBloodSpecific(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ApplyPedDamageDecal(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.String)">
            <summary>
            APPLY_PED_DAMAGE_DECAL(ped, 1, 0.5f, 0.513f, 0f, 1f, unk, 0, 0, blushing);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ApplyPedDamagePack(System.Int32,System.String,System.Single,System.Single)">
            <summary>
            Damage Packs:
            
            SCR_TrevorTreeBang
            HOSPITAL_0
            HOSPITAL_1
            HOSPITAL_2
            HOSPITAL_3
            HOSPITAL_4
            HOSPITAL_5
            HOSPITAL_6
            HOSPITAL_7
            HOSPITAL_8
            HOSPITAL_9
            SCR_Dumpster
            BigHitByVehicle
            SCR_Finale_Michael_Face
            SCR_Franklin_finb
            SCR_Finale_Michael
            SCR_Franklin_finb2
            Explosion_Med
            SCR_Torture
            SCR_TracySplash
            Skin_Melee_0
            
            Additional damage packs:
            
            gist.github.com/alexguirre/f3f47f75ddcf617f416f3c8a55ae2227
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.AttachSynchronizedSceneToEntity(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.CanCreateRandomBikeRider">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.CanCreateRandomCops">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.CanCreateRandomDriver">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.CanCreateRandomPed(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.CanKnockPedOffVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.CanPedInCombatSeeTarget(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.CanPedRagdoll(System.Int32)">
            <summary>
            Prevents the ped from going limp.
            
            Example: Can prevent peds from falling when standing on moving vehicles.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.CanPedSeePed(System.Int32,System.Int32)">
            <summary>
            Returns true if ped1 can see ped2 in their line of vision
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClearAllPedProps(System.Int32)">
            <summary>
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClearFacialIdleAnimOverride(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClearPedAlternateMovementAnim(System.Int32,System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClearPedAlternateWalkAnim(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClearPedBloodDamageByZone(System.Int32,System.Int32)">
            <summary>
            Somehow related to changing peds clothes.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClearPedDamageDecalByZone(System.Int32,System.Int32,System.String)">
            <summary>
            p1: from 0 to 5 in the b617d scripts.
            p2: blushing and ALL found in the b617d scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClearPedDecorations(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClearPedFacialDecorations(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClearPedDriveByClipsetOverride(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClearPedLastDamageBone(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClearPedNonCreationArea">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClearPedProp(System.Int32,System.Int32)">
            <summary>
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClearPedWetness(System.Int32)">
            <summary>
            It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ResetPedRagdollBlockingFlags(System.Int32,System.Int32)">
            <summary>
            There seem to be 26 flags
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClearRelationshipBetweenGroups(System.Int32,System.UInt32,System.UInt32)">
            <summary>
            Clears the relationship between two groups. This should be called twice (once for each group).
            
            Relationship types:
            0 = Companion
            1 = Respect
            2 = Like
            3 = Neutral
            4 = Dislike
            5 = Hate
            255 = Pedestrians
            (Credits: Inco)
            
            Example:
            PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);
            PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClonePed(System.Int32,System.Single,System.Boolean,System.Boolean)">
            <summary>
            p3 - last parameter does not mean ped handle is returned
            maybe a quick view in disassembly will tell us what is actually does
            
            
            Example of Cloning Your Player:
            CLONE_PED(PLAYER_PED_ID(), GET_ENTITY_HEADING(PLAYER_PED_ID()), 0, 1);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClonePedToTarget(System.Int32,System.Int32)">
            <summary>
            What exactly is the difference? What does this exactly do by chance?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.CreateGroup(System.Int32)">
            <summary>
            Creates a new ped group.
            Groups can contain up to 8 peds.
            
            The parameter is unused.
            
            Returns a handle to the created group, or 0 if a group couldnt be created.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.CreateNmMessage(System.Boolean,System.Int32)">
            <summary>
            Creates a new NaturalMotion message.
            
            startImmediately: If set to true, the character will perform the message the moment it receives it by GIVE_PED_NM_MESSAGE. If false, the Ped will get the message but wont perform it yet. While its a boolean value, if negative, the message will not be initialized.
            messageId: The ID of the NaturalMotion message.
            
            If a message already exists, this function does nothing. A message exists until the point it has been successfully dispatched by GIVE_PED_NM_MESSAGE.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.CreatePed(System.Int32,System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            p7 - last parameter does not mean ped handle is returned
            maybe a quick view in disassembly will tell us what is actually does
            
            
            Heading: 0.0
            Heading is the Z axis spawn rotation of the ped 0-5th parameter.
            
            Ped Types:
            Player,1ORale,4ORemale,5ORop,6ORuman,26ORWAT,27ORnimal,28ORrmy,29
            You can also use GET_PED_TYPE
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.CreatePedInsideVehicle(System.Int32,System.Int32,System.UInt32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            p5 - last parameter does not mean ped handle is returned
            maybe a quick view in disassembly will tell us what is actually does
            
            
            Ped Types:
            Player = 1
            Male = 4 
            Female = 5 
            Cop = 6
            Taxi Driver = 25 (sfink)
            Human = 26
            SWAT = 27 
            Animal = 28
            Army = 29
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.CreateRandomPed(System.Single,System.Single,System.Single)">
            <summary>
            vb.net
            Dim ped_handle As Integer
                                With Game.Player.Character
                                    Dim pos As Vector3 = .Position + .ForwardVector  3
                                    ped_handle = Native.Function.Call(Of Integer)(Hash.CREATE_RANDOM_PED, pos.X, pos.Y, pos.Z)
                                End With
            
            Creates a Ped at the specified location, returns the Ped Handle.  
            Ped will not act until SET_PED_AS_NO_LONGER_NEEDED is called.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.CreateRandomPedAsDriver(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.CreateSynchronizedScene(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            p6 always 2 (but it doesnt seem to matter...)
            
            roll and pitch 0
            yaw to Ped.rotation
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.CreateSynchronizedScene2(System.Single,System.Single,System.Single,System.Single,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.DeletePed(System.Int32@)">
            <summary>
            Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.DetachSynchronizedScene(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.DoesGroupExist(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ExplodePedHead(System.Int32,System.UInt32)">
            <summary>
            Forces the ped to fall back and kills it.
            
            It doesnt really explode the peds head but it kills the ped
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.FreezePedCameraRotation(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ForcePedMotionState(System.Int32,System.UInt32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Some motionstate hashes are
            
            0xec17e58 (standing idle), 0xbac0f10b (nothing?), 0x3f67c6af (aiming with pistol 2-h), 0x422d7a25 (stealth), 0xbd8817db, 0x916e828c
            
            and those for the strings
            
            motionstate_idle, motionstate_walk, motionstate_run, motionstate_actionmode_idle, and motionstate_actionmode_walk.
            
            Regarding p2, p3 and p4: Most common is 0, 0, 0); followed by 0, 1, 0); and 1, 1, 0); in the scripts. p4 is very rarely something other than 0.
            
             31/03/2017 ins1de :
            
                    enum MotionState
                    {
                        StopRunning = -530524,
                        StopWalking = -668482597,
                        Idle = 247561816, // 1, 1, 0
                        Idl2 = -1871534317,
                        SkyDive =-1161760501, // 0, 1, 0
                        Stealth = 1110276645,
                        Sprint = -1115154469,
                        Swim = -1855028596,
                        Unknown1 = 1063765679,
                        Unknown2 = -633298724,
                    }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ForcePedToOpenParachute(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetAnimInitialOffsetPosition(System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetAnimInitialOffsetRotation(System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetClosestPed(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32@,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Gets the closest ped in a radius.
            
            Ped Types:
            Any ped = -1
            Player = 1
            Male = 4 
            Female = 5 
            Cop = 6
            Human = 26
            SWAT = 27 
            Animal = 28
            Army = 29
            
            ------------------
            P4 P5 P7 P8
            1  0  x  x  = return nearest walking Ped
            1  x  0  x  = return nearest walking Ped
            x  1  1  x  = return Ped you are using
            0  0  x  x  = no effect
            0  x  0  x  = no effect
            
            x = can be 1 or 0. Does not have any obvious changes.
            
            This function does not return ped who is:
            1. Standing still
            2. Driving
            3. Fleeing
            4. Attacking
            
            This function only work if the ped is:
            1. walking normally.
            2. waiting to cross a road.
            
            Note: PED::GET_PED_NEARBY_PEDS works for more peds.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetCombatFloat(System.Int32,System.Int32)">
            <summary>
            p0: Ped Handle
            p1: int i OR0 = i = 27
            
            p1 probably refers to the attributes configured in combatbehavior.meta. There are 13. Example:
            
            BlindFireChance value=0.1/
            WeaponShootRateModifier value=1.0/
            TimeBetweenBurstsInCover value=1.25/
            BurstDurationInCover value=2.0/
            TimeBetweenPeeks value=10.0/
            WeaponAccuracy value=0.18/
            FightProficiency value=0.8/
            StrafeWhenMovingChance value=1.0/
            WalkWhenStrafingChance value=0.0/
            AttackWindowDistanceForCover value=55.0/
            TimeToInvalidateInjuredTarget value=9.0/
            TriggerChargeTime_Near value=4.0/
            TriggerChargeTime_Far value=10.0/
            
            -------------Confirmed by editing combatbehavior.meta:
            p1:
            0=BlindFireChance
            1=BurstDurationInCover
            3=TimeBetweenBurstsInCover
            4=TimeBetweenPeeks
            5=StrafeWhenMovingChance
            8=WalkWhenStrafingChance
            11=AttackWindowDistanceForCover
            12=TimeToInvalidateInjuredTarget
            16=OptimalCoverDistance
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetDeadPedPickupCoords(System.Int32,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetGroupSize(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            p1 may be a BOOL representing whether or not the group even exists
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetJackTarget(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetMeleeTargetForPed(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedOnMount(System.Int32)">
            <summary>
            Same function call as PED::GET_MOUNT, aka just returns 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetMount(System.Int32)">
            <summary>
            
            Function just returns 0
            void __fastcall ped__get_mount(NativeContext a1)
            {
              NativeContext v1; // rbx@1
            
              v1 = a1;
              GetAddressOfPedFromScriptHandle(a1-Args-Arg1);
              v1-Returns-Item1= 0;
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetNumberOfPedDrawableVariations(System.Int32,System.Int32)">
            <summary>
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetNumberOfPedPropDrawableVariations(System.Int32,System.Int32)">
            <summary>
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetNumberOfPedPropTextureVariations(System.Int32,System.Int32,System.Int32)">
            <summary>
            Need to check behavior when drawableId = -1
            
            - Doofy.Ass
            Why this function doesnt work and return nill value?
            GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(PLAYER.PLAYER_PED_ID(), 0, 5)
            
            tick: scripts/addins/menu_execute.lua:51: attempt to call field GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS (a nil value)
            
            
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetNumberOfPedTextureVariations(System.Int32,System.Int32,System.Int32)">
            <summary>
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetNumHairColors">
            <summary>
            Used for freemode (online) characters.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetNumMakeupColors">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedheadshotTxdString(System.Int32)">
            <summary>
            gtaforums.com/topic/885580-ped-headshotmugshot-txd/
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedsJacker(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedAccuracy(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedAlertness(System.Int32)">
            <summary>
            Returns the peds alertness (0-3).
            
            Values : 
            
            0 : Neutral
            1 : Heard something (gun shot, hit, etc)
            2 : Knows (the origin of the event)
            3 : Fully alerted (is facing the event?)
            
            If the Ped does not exist, returns -1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedArmour(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedAsGroupLeader(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedAsGroupMember(System.Int32,System.Int32)">
            <summary>
            from fm_mission_controller.c4 (variable names changed for clarity):
            
            int groupID = PLAYER::GET_PLAYER_GROUP(PLAYER::PLAYER_ID());
            PED::GET_GROUP_SIZE(group, ANDnused, ANDroupSize);
            if (groupSize = 1) {
            . . . . for (int memberNumber = 0; memberNumber  groupSize; memberNumber++) {
            . . . . . . . . Ped ped1 = PED::GET_PED_AS_GROUP_MEMBER(groupID, memberNumber);
            . . . . . . . . //and so on
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedBoneCoords(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Gets the position of the specified bone of the specified ped.
            
            ped: The ped to get the position of a bone from.
            boneId: The ID of the bone to get the position from. This is NOT the index.
            offsetX: The X-component of the offset to add to the position relative to the bones rotation.
            offsetY: The Y-component of the offset to add to the position relative to the bones rotation.
            offsetZ: The Z-component of the offset to add to the position relative to the bones rotation.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedBoneIndex(System.Int32,System.Int32)">
            <summary>
            no bone= -1
            
            boneIds:
                    SKEL_ROOT = 0x0,
               SKEL_Pelvis = 0x2e28,
             SKEL_L_Thigh = 0xe39f,
                SKEL_L_Calf = 0xf9bb,
             SKEL_L_Foot = 0x3779,
             SKEL_L_Toe0 = 0x83c,
              IK_L_Foot = 0xfedd,
               PH_L_Foot = 0xe175,
               MH_L_Knee = 0xb3fe,
               SKEL_R_Thigh = 0xca72,
                SKEL_R_Calf = 0x9000,
             SKEL_R_Foot = 0xcc4d,
             SKEL_R_Toe0 = 0x512d,
             IK_R_Foot = 0x8aae,
               PH_R_Foot = 0x60e6,
               MH_R_Knee = 0x3fcf,
               RB_L_ThighRoll = 0x5c57,
              RB_R_ThighRoll = 0x192a,
              SKEL_Spine_Root = 0xe0fd,
             SKEL_Spine0 = 0x5c01,
             SKEL_Spine1 = 0x60f0,
             SKEL_Spine2 = 0x60f1,
             SKEL_Spine3 = 0x60f2,
             SKEL_L_Clavicle = 0xfcd9,
             SKEL_L_UpperArm = 0xb1c5,
             SKEL_L_Forearm = 0xeeeb,
              SKEL_L_Hand = 0x49d9,
             SKEL_L_Finger00 = 0x67f2,
             SKEL_L_Finger01 = 0xff9,
              SKEL_L_Finger02 = 0xffa,
              SKEL_L_Finger10 = 0x67f3,
             SKEL_L_Finger11 = 0x1049,
             SKEL_L_Finger12 = 0x104a,
             SKEL_L_Finger20 = 0x67f4,
             SKEL_L_Finger21 = 0x1059,
             SKEL_L_Finger22 = 0x105a,
             SKEL_L_Finger30 = 0x67f5,
             SKEL_L_Finger31 = 0x1029,
             SKEL_L_Finger32 = 0x102a,
             SKEL_L_Finger40 = 0x67f6,
             SKEL_L_Finger41 = 0x1039,
             SKEL_L_Finger42 = 0x103a,
             PH_L_Hand = 0xeb95,
               IK_L_Hand = 0x8cbd,
               RB_L_ForeArmRoll = 0xee4f,
                RB_L_ArmRoll = 0x1470,
                MH_L_Elbow = 0x58b7,
              SKEL_R_Clavicle = 0x29d2,
             SKEL_R_UpperArm = 0x9d4d,
             SKEL_R_Forearm = 0x6e5c,
              SKEL_R_Hand = 0xdead,
             SKEL_R_Finger00 = 0xe5f2,
             SKEL_R_Finger01 = 0xfa10,
             SKEL_R_Finger02 = 0xfa11,
             SKEL_R_Finger10 = 0xe5f3,
             SKEL_R_Finger11 = 0xfa60,
             SKEL_R_Finger12 = 0xfa61,
             SKEL_R_Finger20 = 0xe5f4,
             SKEL_R_Finger21 = 0xfa70,
             SKEL_R_Finger22 = 0xfa71,
             SKEL_R_Finger30 = 0xe5f5,
             SKEL_R_Finger31 = 0xfa40,
             SKEL_R_Finger32 = 0xfa41,
             SKEL_R_Finger40 = 0xe5f6,
             SKEL_R_Finger41 = 0xfa50,
             SKEL_R_Finger42 = 0xfa51,
             PH_R_Hand = 0x6f06,
               IK_R_Hand = 0x188e,
               RB_R_ForeArmRoll = 0xab22,
                RB_R_ArmRoll = 0x90ff,
                MH_R_Elbow = 0xbb0,
               SKEL_Neck_1 = 0x9995,
             SKEL_Head = 0x796e,
               IK_Head = 0x322c,
             FACIAL_facialRoot = 0xfe2c,
               FB_L_Brow_Out_000 = 0xe3db,
               FB_L_Lid_Upper_000 = 0xb2b6,
              FB_L_Eye_000 = 0x62ac,
                FB_L_CheekBone_000 = 0x542e,
              FB_L_Lip_Corner_000 = 0x74ac,
             FB_R_Lid_Upper_000 = 0xaa10,
              FB_R_Eye_000 = 0x6b52,
                FB_R_CheekBone_000 = 0x4b88,
              FB_R_Brow_Out_000 = 0x54c,
                FB_R_Lip_Corner_000 = 0x2ba6,
             FB_Brow_Centre_000 = 0x9149,
              FB_UpperLipRoot_000 = 0x4ed2,
             FB_UpperLip_000 = 0xf18f,
             FB_L_Lip_Top_000 = 0x4f37,
                FB_R_Lip_Top_000 = 0x4537,
                FB_Jaw_000 = 0xb4a0,
              FB_LowerLipRoot_000 = 0x4324,
             FB_LowerLip_000 = 0x508f,
             FB_L_Lip_Bot_000 = 0xb93b,
                FB_R_Lip_Bot_000 = 0xc33b,
                FB_Tongue_000 = 0xb987,
               RB_Neck_1 = 0x8b93,
               IK_Root = 0xdd1c
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedCauseOfDeath(System.Int32)">
            <summary>
            Returns the hash of the weapon/model/object that killed the ped.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedCombatMovement(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedCombatRange(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedConfigFlag(System.Int32,System.Int32,System.Boolean)">
            <summary>
            p2 is always 1 in the scripts.
            
            if (GET_PED_CONFIG_FLAG(ped, 78, 1))
            = returns true if ped is aiming/shooting a gun
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedDecorationsState(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetTattooZone(System.UInt32,System.UInt32)">
            <summary>
            Returns the zoneID for the overlay if it is a member of collection.
            enum TattooZoneData
            {
             ZONE_TORSO = 0,
               ZONE_HEAD = 1,
                ZONE_LEFT_ARM = 2,
                ZONE_RIGHT_ARM = 3,
               ZONE_LEFT_LEG = 4,
                ZONE_RIGHT_LEG = 5,
               ZONE_UNKNOWN = 6,
             ZONE_NONE = 7,
            };
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedDefensiveAreaPosition(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedDrawableVariation(System.Int32,System.Int32)">
            <summary>
            Ids
            0 - Head
            1 - Beard
            2 - Hair
            3 - Torso
            4 - Legs
            5 - Hands
            6 - Foot
            7 - ------
            8 - Accessories 1
            9 - Accessories 2
            10- Decals
            11 - Auxiliary parts for torso
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedEnveffScale(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedExtractedDisplacement(System.Int32,System.Boolean)">
            <summary>
            Gets the offset the specified ped has moved since the previous tick.
            
            If worldSpace is false, the returned offset is relative to the ped. That is, if the ped has moved 1 meter right and 5 meters forward, itll return 1,5,0.
            
            If worldSpace is true, the returned offset is relative to the world. That is, if the ped has moved 1 meter on the X axis and 5 meters on the Y axis, itll return 1,5,0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedGroupIndex(System.Int32)">
            <summary>
            Returns the group id of which the specified ped is a member of.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedHeadBlendData(System.Int32,System.Int32@)">
            <summary>
            The pointer is to a padded struct that matches the arguments to SET_PED_HEAD_BLEND_DATA(...). There are 4 bytes of padding after each field.
            
            (Edit) Console Hash: 0x44E1680C
            
            pass this struct in the second parameter 
            typedef struct
            {
                    int shapeFirst, shapeSecond, shapeThird; 
                    int skinFirst, skinSecond, skinThird; 
               float shapeMix, skinMix, thirdMix;
            } headBlendData;
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetFirstParentIdForPedType(System.Int32)">
            <summary>
            Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
            
            Used when calling SET_PED_HEAD_BLEND_DATA.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetNumParentPedsOfType(System.Int32)">
            <summary>
            Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedHeadOverlayValue(System.Int32,System.Int32)">
            <summary>
            Likely a char, if that overlay is not set, e.i. None option, returns 255;
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetNumHeadOverlayValues(System.Int32)">
            <summary>
            Used with freemode (online) characters.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedLastDamageBone(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedMaxHealth(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedMoney(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedNearbyPeds(System.Int32,System.Int32@,System.Int32)">
            <summary>
            sizeAndPeds - is a pointer to an array. The array is filled with peds found nearby the ped supplied to the first argument.
            ignore - ped type to ignore
            
            Return value is the number of peds found and added to the array passed.
            
            -----------------------------------
            
            To make this work in most menu bases at least in C++ do it like so,
            
             Formatted Example: pastebin.com/D8an9wwp
            
            -----------------------------------
            
            Example: gtaforums.com/topic/789788-function-args-to-pedget-ped-nearby-peds/?p=1067386687
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedNearbyVehicles(System.Int32,System.Int32@)">
            <summary>
            Returns size of array, passed into the second variable.
            
            See below for usage information.
            
            This function actually requires a struct, where the first value is the maximum number of elements to return.  Here is a sample of how I was able to get it to work correctly, without yet knowing the struct format.
            
            //Setup the array
             const int numElements = 10;
               const int arrSize = numElements  2 + 2;
              Any veharrSize;
             //0 index is the size of the array
                veh0 = numElements;
            
               int count = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), veh);
            
             if (veh != NULL)
              {
                 //Simple loop to go through results
                   for (int i = 0; i  count; i++)
                    {
                     int offsettedID = i  2 + 2;
                      //Make sure it exists
                     if (vehoffsettedID != NULL AND ENTITY::DOES_ENTITY_EXIST(vehoffsettedID))
                      {
                         //Do something
                        }
                 }
             }  
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedPaletteVariation(System.Int32,System.Int32)">
            <summary>
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedParachuteLandingType(System.Int32)">
            <summary>
            -1: no landing
            0: landing on both feet
            1: stumbling
            2: rolling
            3: ragdoll
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedParachuteState(System.Int32)">
            <summary>
            Returns:
            
            -1: Normal
            0: Wearing parachute on back
            1: Parachute opening
            2: Parachute open
            3: Falling to doom (e.g. after exiting parachute)
            
            Normal means no parachute?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedParachuteTintIndex(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedPropIndex(System.Int32,System.Int32)">
            <summary>
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedPropTextureIndex(System.Int32,System.Int32)">
            <summary>
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedRagdollBoneIndex(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedRelationshipGroupDefaultHash(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedRelationshipGroupHash(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedResetFlag(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedSourceOfDeath(System.Int32)">
            <summary>
            Returns the Entity (Ped, Vehicle, or ?Object?) that killed the ped
            
            Is best to check if the Ped is dead before asking for its killer.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedStealthMovement(System.Int32)">
            <summary>
            Returns whether the entity is in stealth mode
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedTextureVariation(System.Int32,System.Int32)">
            <summary>
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedTimeOfDeath(System.Int32)">
            <summary>
            Console Hash: 0xDF6D5D54
            
            There is no way this is the correct name. The only time this is called its compared with the game timer and I used this to test something and noticed when I was killed by no matter what it was my Time Of Death via this native was always 0, but my friends was some random big number like so, 147591.
            
            Retreives CPed + 15CC (as of 944)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPedType(System.Int32)">
            <summary>
            Ped Types: (ordered by return priority)
            
            Michael = 0
            Franklin = 1
            Trevor = 2
            
            Army = 29
            Animal = 28
            SWAT = 27
            LSFD = 21
            Paramedic = 20
            
            Cop = 6
            
            Male = 4
            Female = 5 
            
            Human = 26
            
            Note/Exception
            hc_gunman : 4 // Mix male and female
            hc_hacker : 4 // Mix male and female
            mp_f_misty_01 : 4 // Female character
            s_f_y_ranger_01 : 5 // Ranger
            s_m_y_ranger_01 : 4 // Ranger
            s_m_y_uscg_01 : 6 // US Coast Guard
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetPlayerPedIsFollowing(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetRandomPedAtCoord(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Gets a random ped in the x/y/zRadius near the x/y/z coordinates passed. 
            
            Ped Types:
            Any = -1
            Player = 1
            Male = 4 
            Female = 5 
            Cop = 6
            Human = 26
            SWAT = 27 
            Animal = 28
            Army = 29
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetRelationshipBetweenGroups(System.UInt32,System.UInt32)">
            <summary>
            Gets the relationship between two groups. This should be called twice (once for each group).
            
            Relationship types:
            0 = Companion
            1 = Respect
            2 = Like
            3 = Neutral
            4 = Dislike
            5 = Hate
            255 = Pedestrians
            
            Example:
            PED::GET_RELATIONSHIP_BETWEEN_GROUPS(l_1017, 0xA49E591C);
            PED::GET_RELATIONSHIP_BETWEEN_GROUPS(0xA49E591C, l_1017);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetRelationshipBetweenPeds(System.Int32,System.Int32)">
            <summary>
            Gets the relationship between two peds. This should be called twice (once for each ped).
            
            Relationship types:
            0 = Companion
            1 = Respect
            2 = Like
            3 = Neutral
            4 = Dislike
            5 = Hate
            255 = Pedestrians
            (Credits: Inco)
            
            Example:
            PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, l_1017, 0xA49E591C);
            PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, 0xA49E591C, l_1017);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetSeatPedIsTryingToEnter(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetSynchronizedScenePhase(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetSynchronizedSceneRate(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetVehiclePedIsEntering(System.Int32)">
            <summary>
            In appcamera.c4, Line 106:
            if (VEHICLE::IS_VEHICLE_DRIVEABLE(PED::SET_EXCLUSIVE_PHONE_RELATIONSHIPS(PLAYER::PLAYER_PED_ID()), 0))
            So return type could be a vehicle?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetVehiclePedIsIn(System.Int32,System.Boolean)">
            <summary>
            Gets the vehicle the specified Ped is/was in depending on bool value.
            
            False = CurrentVehicle, True = LastVehicle
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetVehiclePedIsTryingToEnter(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GetVehiclePedIsUsing(System.Int32)">
            <summary>
            Gets ID of vehicle player using. It means it can get ID at any interaction with vehicle. Enter\exit for example. And that means it is faster than GET_VEHICLE_PED_IS_IN but less safe.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GivePedHelmet(System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            PoliceMotorcycleHelmet   1024    
            RegularMotorcycleHelmet   4096    
            FiremanHelmet 16384   
            PilotHeadset  32768   
            PilotHelmet   65536
            --
            p2 is generally 4096 or 16384 in the scripts. p1 varies between 1 and 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.GivePedNmMessage(System.Int32)">
            <summary>
            Sends the message that was created by a call to CREATE_NM_MESSAGE to the specified Ped.
            
            If a message hasnt been created already, this function does nothing.
            If the Ped is not ragdolled with Euphoria enabled, this function does nothing.
            The following call can be used to ragdoll the Ped with Euphoria enabled: SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
            
            Call order:
            SET_PED_TO_RAGDOLL
            CREATE_NM_MESSAGE
            GIVE_PED_NM_MESSAGE
            
            Multiple messages can be chained. Eg. to make the ped stagger and swing his arms around, the following calls can be made:
            SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
            CREATE_NM_MESSAGE(true, 0); // stopAllBehaviours - Stop all other behaviours, in case the Ped is already doing some Euphoria stuff.
            GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
            CREATE_NM_MESSAGE(true, 1151); // staggerFall - Attempt to walk while falling.
            GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
            CREATE_NM_MESSAGE(true, 372); // armsWindmill - Swing arms around.
            GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.HasActionModeAssetLoaded(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.HasPedHeadBlendFinished(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.HasPedReceivedEvent(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.HasStealthModeAssetLoaded(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.HidePedBloodDamageByZone(System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsAnyPedNearPoint(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsAnyPedShootingInArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsConversationPedDead(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsCopPedInArea3d(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            xyz - relative to the world origin.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedheadshotReady(System.Int32)">
            <summary>
            gtaforums.com/topic/885580-ped-headshotmugshot-txd/
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedheadshotValid(System.Int32)">
            <summary>
            gtaforums.com/topic/885580-ped-headshotmugshot-txd/
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedAimingFromCover(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedAPlayer(System.Int32)">
            <summary>
            Returns true if the given ped has a valid pointer to CPlayerInfo in its CPed class. Thats all.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedBeingJacked(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedBeingStealthKilled(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedBeingStunned(System.Int32,System.Int32)">
            <summary>
            p1 is always 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedBlushColorValid(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedClimbing(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedComponentVariationValid(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks if the component variation is valid, this works great for randomizing components using loops.
            
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedDeadOrDying(System.Int32,System.Boolean)">
            <summary>
            Seems to consistently return true if the ped is dead.
            
            p1 is always passed 1 in the scripts.
            
            I suggest to remove OR_DYING part, because it does not detect dying phase.
            
            Thats what the devs call it, cry about it.
            
            lol
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedDiving(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedDoingDriveby(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedDucking(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedEvasiveDiving(System.Int32,System.Int32@)">
            <summary>
            Presumably returns the Entity that the Ped is currently diving out of the way of.
            
            var num3;
                if (PED::IS_PED_EVASIVE_DIVING(A_0, ANDum3) != 0)
                    if (ENTITY::IS_ENTITY_A_VEHICLE(num3) != 0)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedFacingPed(System.Int32,System.Int32,System.Single)">
            <summary>
            angle is peds view cone
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedFalling(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedFatallyInjured(System.Int32)">
            <summary>
            Gets a value indicating whether this peds health is below its fatally injured threshold. The default threshold is 100.
            If the handle is invalid, the function returns true.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedFleeing(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedGettingIntoAVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedGoingIntoCover(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedGroupMember(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedHairColorValid(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedHangingOnToVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedHeadtrackingEntity(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedHeadtrackingPed(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedHuman(System.Int32)">
            <summary>
            Returns true/false if the ped is/isnt humanoid.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedHurt(System.Int32)">
            <summary>
            Returns whether the specified ped is hurt.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInjured(System.Int32)">
            <summary>
            Gets a value indicating whether this peds health is below its injured threshold.
            
            The default threshold is 100.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInAnyBoat(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInAnyHeli(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInAnyPlane(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInAnyPoliceVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInAnySub(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInAnyTaxi(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInAnyTrain(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInAnyVehicle(System.Int32,System.Boolean)">
            <summary>
            Gets a value indicating whether the specified ped is in any vehicle.
            
            If atGetIn is false, the function will not return true until the ped is sitting in the vehicle and is about to close the door. If its true, the function returns true the moment the ped starts to get onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, the function will not return true until the ped has descended down into the submersible and gotten into the seat, while if its true, itll return true the moment the hatch has been opened and the ped is about to descend into the submersible.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInCombat(System.Int32,System.Int32)">
            <summary>
            Checks to see if ped and target are in combat with eachother. Only goes one-way: if target is engaged in combat with ped but ped has not yet reacted, the function will return false until ped starts fighting back.
            
            p1 is usually 0 in the scripts because it gets the ped id during the task sequence. For instance: PED::IS_PED_IN_COMBAT(l_42E4/14/, PLAYER::PLAYER_PED_ID()) // armenian2.ct4: 43794
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInCover(System.Int32,System.Boolean)">
            <summary>
            p1 is nearly always 0 in the scripts. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInCoverFacingLeft(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInFlyingVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInGroup(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedStandingInCover(System.Int32)">
            <summary>
            Console Hash: 0xDD5D08A7
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInMeleeCombat(System.Int32)">
            <summary>
            Notes: The function only returns true while the ped is: 
            A.) Swinging a random melee attack (including pistol-whipping)
            
            B.) Reacting to being hit by a melee attack (including pistol-whipping)
            
            C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter). 
            
            You dont have to be holding the melee-targetting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if youve punched and made-angry many peds
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInModel(System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInParachuteFreeFall(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedInVehicle(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets a value indicating whether the specified ped is in the specified vehicle.
            
            If atGetIn is false, the function will not return true until the ped is sitting in the vehicle and is about to close the door. If its true, the function returns true the moment the ped starts to get onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, the function will not return true until the ped has descended down into the submersible and gotten into the seat, while if its true, itll return true the moment the hatch has been opened and the ped is about to descend into the submersible.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedJacking(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedJumping(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedJumpingOutOfVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedLipstickColorValid(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedMale(System.Int32)">
            <summary>
            Returns true/false if the ped is/isnt male.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedModel(System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedOnAnyBike(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedOnFoot(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedOnSpecificVehicle(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedOnVehicle(System.Int32)">
            <summary>
            Gets a value indicating whether the specified ped is on top of any vehicle.
            
            Return 1 when ped is on vehicle.
            Return 0 when ped is not on a vehicle.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedPerformingStealthKill(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedPlantingBomb(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedProne(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedRagdoll(System.Int32)">
            <summary>
            If the ped handle passed through the parenthesis is in a ragdoll state this will return true.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedReloading(System.Int32)">
            <summary>
            Returns whether the specified ped is reloading.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedRespondingToEvent(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedRunningMobilePhoneTask(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedRunningRagdollTask(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedShooting(System.Int32)">
            <summary>
            Returns whether the specified ped is shooting.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedShootingInArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedSittingInAnyVehicle(System.Int32)">
            <summary>
            Detect if ped is in any vehicle
            True/False
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedSittingInVehicle(System.Int32,System.Int32)">
            <summary>
            Detect if ped is sitting in the specified vehicle
            True/False
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedStopped(System.Int32)">
            <summary>
            Returns true if the ped doesnt do any movement. If the ped is being pushed forwards by using APPLY_FORCE_TO_ENTITY for example, the function returns false.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedSwimming(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedSwimmingUnderWater(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedTracked(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedTryingToEnterALockedVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedUsingActionMode(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedUsingAnyScenario(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedUsingScenario(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedVaulting(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedWearingHelmet(System.Int32)">
            <summary>
            Returns true if the ped passed through the parenthesis is wearing a helmet.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsScriptedScenarioPedUsingConditionalAnim(System.Int32,System.String,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsSynchronizedSceneLooped(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsSynchronizedSceneRunning(System.Int32)">
            <summary>
            Returns true if a synchronized scene is running
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsTrackedPedVisible(System.Int32)">
            <summary>
            returns whether or not a ped is visible within your FOV, not this check autos to false after a certain distance.
            
            
            Target needs to be tracked.. wont work otherwise.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.KnockOffPedProp(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.KnockPedOffVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.PlayFacialAnim(System.Int32,System.String,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.RegisterHatedTargetsAroundPed(System.Int32,System.Single)">
            <summary>
            Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.RegisterPedheadshot(System.Int32)">
            <summary>
            gtaforums.com/topic/885580-ped-headshotmugshot-txd/
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.RegisterTarget(System.Int32,System.Int32)">
            <summary>
            PED::REGISTER_TARGET(l_216, PLAYER::PLAYER_PED_ID()); from re_prisonbreak.txt.
            
            l_216 = RECSBRobber1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.RemoveActionModeAsset(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.RemoveGroup(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.RemovePedDefensiveArea(System.Int32,System.Boolean)">
            <summary>
            Ped will no longer get angry when you stay near him.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.RemovePedElegantly(System.Int32@)">
            <summary>
            Judging purely from a quick disassembly, if the ped is in a vehicle, the ped will be deleted immediately. If not, itll be marked as no longer needed. - very elegant..
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.RemovePedFromGroup(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.RemovePedHelmet(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.RemovePedPreferredCoverSet(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.RemoveRelationshipGroup(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.RemoveScenarioBlockingArea(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.RemoveScenarioBlockingAreas">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.RemoveStealthModeAsset(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.RequestActionModeAsset(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.RequestStealthModeAsset(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ResetAiMeleeWeaponDamageModifier">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ResetAiWeaponDamageModifier">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ResetGroupFormationDefaultSpacing(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ResetPedInVehicleContext(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ResetPedLastVehicle(System.Int32)">
            <summary>
            Resets the value for the last vehicle driven by the Ped.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ResetPedMovementClipset(System.Int32,System.Single)">
            <summary>
            If p1 is 0.0, I believe you are back to normal. 
            If p1 is 1.0, it looks like you can only rotate the ped, not walk.
            
            Using the following code to reset back to normal
            PED::RESET_PED_MOVEMENT_CLIPSET(PLAYER::PLAYER_PED_ID(), 0.0);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ResetPedRagdollTimer(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ResetPedStrafeClipset(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ResetPedVisibleDamage(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ClearPedBloodDamage(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ResetPedWeaponMovementClipset(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ResurrectPed(System.Int32)">
            <summary>
            This function will simply bring the dead person back to life.
            
            Try not to use it alone, since using this function alone, will make peds fall through ground in hell(well for the most of the times).
            
            Instead, before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at.(For instance, Around 2 floats of Players current position.) 
            
            Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.ReviveInjuredPed(System.Int32)">
            <summary>
            It will revive/cure the injured ped. The condition is ped must not be dead.
            
            Upon setting and converting the health int, found, if health falls below 5, the ped will lay on the ground in pain(Maximum default health is 100).
            
            This function is well suited there.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetAiMeleeWeaponDamageModifier(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetAiWeaponDamageModifier(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetBlockingOfNonTemporaryEvents(System.Int32,System.Boolean)">
            <summary>
            works with AI::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS to make a ped completely oblivious to all events going on around him
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetCanAttackFriendly(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Setting ped to true allows the ped to shoot friendlies.
            
            p2 set to true when toggle is also true seams to make peds permanently unable to aim at, even if you set p2 back to false.
            
            p1 = false ANDp2 = false for unable to aim at.
            p1 = true ANDp2 = false for able to aim at. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetCombatFloat(System.Int32,System.Int32,System.Single)">
            <summary>
            combatType can be between 0-14. See GET_COMBAT_FLOAT below for a list of possible parameters.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetCreateRandomCops(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetCreateRandomCopsNotOnScenarios(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetCreateRandomCopsOnScenarios(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetDriverAbility(System.Int32,System.Single)">
            <summary>
            The function specifically verifies the value is equal to, or less than 1.0f. If it is greater than 1.0f, the function does nothing at all.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetDriverAggressiveness(System.Int32,System.Single)">
            <summary>
            range 0.0f - 1.0f
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetEnableBoundAnkles(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetEnableHandcuffs(System.Int32,System.Boolean)">
            <summary>
            ped can not pull out a weapon when true
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetEnablePedEnveffScale(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetEnableScuba(System.Int32,System.Boolean)">
            <summary>
            Enables diving motion when underwater.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetFacialIdleAnimOverride(System.Int32,System.String,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetGroupFormation(System.Int32,System.Int32)">
            <summary>
            0: Default
            1: Circle Around Leader
            2: Alternative Circle Around Leader
            3: Line, with Leader at center
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetGroupFormationSpacing(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetGroupSeparationRange(System.Int32,System.Single)">
            <summary>
            Sets the range at which members will automatically leave the group.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedEyeColor(System.Int32,System.Int32)">
            <summary>
            Used for freemode (online) characters.
            
            For some reason, the scripts use a rounded float for the index.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetIkTarget(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedAccuracy(System.Int32,System.Int32)">
            <summary>
            accuracy = 0-100, 100 being perfectly accurate
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedAlertness(System.Int32,System.Int32)">
            <summary>
            value ranges from 0 to 3.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedAllowedToDuck(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedAllowVehiclesOverride(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedAlternateMovementAnim(System.Int32,System.Int32,System.String,System.String,System.Single,System.Boolean)">
            <summary>
            stance:
            0 = idle
            1 = walk
            2 = running
            
            p5 = usually set to true
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedAlternateWalkAnim(System.Int32,System.String,System.String,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedAngledDefensiveArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedArmour(System.Int32,System.Int32)">
            <summary>
            Sets the armor of the specified ped.
            
            ped: The Ped to set the armor of.
            amount: A value between 0 and 100 indicating the value to set the Peds armor to.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedAsCop(System.Int32,System.Boolean)">
            <summary>
            Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. SWAT and Army will still shoot at you. Toggling ped as false has no effect; you must change p0s ped model to disable the effect.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedAsEnemy(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedAsGroupLeader(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedAsGroupMember(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedBlendFromParents(System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedBoundsOrientation(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanArmIk(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanBeDraggedOut(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanBeKnockedOffVehicle(System.Int32,System.Int32)">
            <summary>
            0 = can (bike)
            1 = cant (bike)
            2 = unk 
            3 = unk
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanBeShotInVehicle(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanBeTargetedWhenInjured(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanBeTargetedWithoutLos(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanBeTargetted(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanBeTargettedByPlayer(System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanBeTargettedByTeam(System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanCowerInCover(System.Int32,System.Boolean)">
            <summary>
            It simply makes the said ped to cower behind cover object(wall, desk, car)
            
            Peds flee attributes must be set to not to flee, first. Else, most of the peds, will just flee from gunshot sounds or any other panic situations.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanEvasiveDive(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanHeadIk(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanLegIk(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanPeekInCover(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanPlayAmbientAnims(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanPlayAmbientBaseAnims(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanPlayGestureAnims(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanPlayVisemeAnims(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            p2 usually 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanRagdoll(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanRagdollFromPlayerImpact(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanSmashGlass(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanSwitchWeapon(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanTeleportToGroupLeader(System.Int32,System.Int32,System.Boolean)">
            <summary>
            This only will teleport the ped to the group leader if the group leader teleports (sets coords).
            
            Only works in singleplayer
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanTorsoIk(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCanUseAutoConversationLookat(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCapsule(System.Int32,System.Single)">
            <summary>
            Overrides the peds collision capsule radius for the current tick.
            Must be called every tick to be effective.
            
            Setting this to 0.001 will allow warping through some objects.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedClothProne(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCombatAbility(System.Int32,System.Int32)">
            <summary>
            100 would equal attack
            less then 50ish would mean run away
            
            Only the values 0, 1 and 2 occur in the decompiled scripts. Most likely refers directly to the values also described in combatbehaviour.meta:
            0: CA_Poor
            1: CA_Average
            2: CA_Professional
            
            Tested this and got the same results as the first explanation here. Could not find any difference between 0, 1 and 2. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCombatAttributes(System.Int32,System.Int32,System.Boolean)">
            <summary>
            These combat attributes seem to be the same as the BehaviourFlags from combatbehaviour.meta.
            So far, these are the equivalents found:
            enum CombatAttributes
            {
             BF_CanUseCover = 0,
               BF_CanUseVehicles = 1,
                BF_CanDoDrivebys = 2,
             BF_CanLeaveVehicle = 3,
               BF_CanFightArmedPedsWhenNotArmed = 5,
             BF_CanTauntInVehicle = 20,
                BF_AlwaysFight = 46,
              BF_IgnoreTrafficWhenDriving = 52,
                    BF_FreezeMovement = 292,
                    BF_PlayerCanUseFiringWeapons = 1424
            };
            
            8 = ?
            9 = ?
            13 = ?
            14 ?
            
            Research thread: gtaforums.com/topic/833391-researchguide-combat-behaviour-flags/
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCombatMovement(System.Int32,System.Int32)">
            <summary>
            0 - Stationary (Will just stand in place)
            1 - Defensive (Will try to find cover and very likely to blind fire)
            2 - Offensive (Will attempt to charge at enemy but take cover as well)
            3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCombatRange(System.Int32,System.Int32)">
            <summary>
            Only the values 0, 1 and 2 occur in the decompiled scripts. Most likely refers directly to the values also described as AttackRange in combatbehaviour.meta:
            0: CR_Near
            1: CR_Medium
            2: CR_Far
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedComponentVariation(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            paletteId/palletColor -  0 to 3. 
            enum PedVariationData
            {
             PED_VARIATION_FACE = 0,
               PED_VARIATION_HEAD = 1,
               PED_VARIATION_HAIR = 2,
               PED_VARIATION_TORSO = 3,
              PED_VARIATION_LEGS = 4,
               PED_VARIATION_HANDS = 5,
              PED_VARIATION_FEET = 6,
               PED_VARIATION_EYES = 7,
               PED_VARIATION_ACCESSORIES = 8,
                PED_VARIATION_TASKS = 9,
              PED_VARIATION_TEXTURES = 10,
              PED_VARIATION_TORSO2 = 11
            };
            Usage: 
            SET_PED_COMPONENT_VARIATION(playerPed, PED_VARIATION_FACE, GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS(playerPed, PED_VARIATION_FACE), GET_NUMBER_OF_PED_TEXTURE_VARIATIONS(playerPed, PED_VARIATION_FACE, 0), 2);
            
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedConfigFlag(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Research help : pastebin.com/fPL1cSwB
            New items added with underscore as first char
            -----------------------------------------------------------------------
            
            enum PedConfigFlags
            {
              PED_FLAG_CAN_FLY_THRU_WINDSCREEN = 32,
                    PED_FLAG_DIES_BY_RAGDOLL = 33,
                PED_FLAG_NO_COLLISION = 52,
                    _PED_FLAG_IS_SHOOTING = 58,
                    _PED_FLAG_IS_ON_GROUND = 60,
                PED_FLAG_NO_COLLIDE = 62,
             PED_FLAG_DEAD = 71,
                    PED_FLAG_IS_SNIPER_SCOPE_ACTIVE = 72,
                PED_FLAG_SUPER_DEAD = 73,
                    _PED_FLAG_IS_IN_AIR = 76,
              PED_FLAG_IS_AIMING = 78,
              PED_FLAG_DRUNK = 100,
                    _PED_FLAG_IS_NOT_RAGDOLL_AND_NOT_PLAYING_ANIM = 104,
                    PED_FLAG_NO_PLAYER_MELEE = 122,
              PED_FLAG_NM_MESSAGE_466 = 125,
                PED_FLAG_INJURED_LIMP = 166,
              PED_FLAG_INJURED_LIMP_2 = 170,
                PED_FLAG_INJURED_DOWN = 187,
              PED_FLAG_SHRINK = 223,
                    PED_FLAG_MELEE_COMBAT = 224,
                    _PED_FLAG_IS_ON_STAIRS = 253,
                    _PED_FLAG_HAS_ONE_LEG_ON_GROUND = 276,
               PED_FLAG_NO_WRITHE = 281,
             PED_FLAG_FREEZE = 292,
                PED_FLAG_IS_STILL = 301,
                    PED_FLAG_NO_PED_MELEE = 314,
                    _PED_SWITCHING_WEAPON = 331,
              PED_FLAG_ALPHA = 410,
            };
            
            () When flagId is set to 33 and the bool value to true, peds will die by starting ragdoll, so you should set this flag to false when you resurrect a ped.
            When flagId is set to 62 and the boolvalue to false this happens: Ped is taken out of vehicle and cant get back in when jacking their empty vehicle. If in a plane it falls from the sky and crashes. Sometimes peds vehicle continue to drive the route without its driver whos running after. 
            
            ()
            JUMPING CHANGES  60,61,104 TO FALSE
            BEING ON WATER CHANGES 60,61 TO FALSE AND 65,66,168 TO TRUE
            FALLING CHANGES 60,61,104,276 TO FALSE AND TO 76 TRUE
            DYING CHANGES 60,61,104,276 TO FALSE AND (NONE) TO TRUE
            DYING MAKES 60,61,104 TO FALSE
            BEING IN A CAR CHANGES 60,79,104 TO FALSE AND 62 TO TRUE
            
            ()Maximum value for flagId is 0x1AA (426) in b944.
            ID 0xF0 (240) appears to be a special flag which is handled different compared to the others IDs.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCoordsKeepVehicle(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            teleports ped to coords along with the vehicle ped is in
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCoordsNoGang(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedCowerHash(System.Int32,System.String)">
            <summary>
            p1: Only CODE_HUMAN_STAND_COWER found in the b617d scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedDefaultComponentVariation(System.Int32)">
            <summary>
            Sets Ped Default Clothes
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedDefensiveAreaAttachedToPed(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedDefensiveAreaDirection(System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedDefensiveSphereAttachedToPed(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedDensityMultiplierThisFrame(System.Single)">
            <summary>
            
            • Usage
            
            ? Use this native inside a looped function.
            ? Values:
            ? 0.0 = no peds on streets
            ? 1.0 = normal peds on streets
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedDesiredHeading(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedDiesInstantlyInWater(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedDiesInSinkingVehicle(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedDiesInVehicle(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedDiesInWater(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedDiesWhenInjured(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedDriveByClipsetOverride(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedDucking(System.Int32,System.Boolean)">
            <summary>
            This is the SET_CHAR_DUCKING from GTA IV, that makes Peds duck. This function does nothing in GTA V. It cannot set the ped as ducking in vehicles, and IS_PED_DUCKING will always return false.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedEnableWeaponBlocking(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedEnveffScale(System.Int32,System.Single)">
            <summary>
            Values look to be between 0.0 and 1.0
            From decompiled scripts: 0.0, 0.6, 0.65, 0.8, 1.0
            
            You are correct, just looked in IDA it breaks from the function if its less than 0.0f or greater than 1.0f.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedFiringPattern(System.Int32,System.UInt32)">
            <summary>
            FIRING_PATTERN_BURST_FIRE = 0xD6FF6D61 ( 1073727030 )
            FIRING_PATTERN_BURST_FIRE_IN_COVER = 0x026321F1 ( 40051185 )
            FIRING_PATTERN_BURST_FIRE_DRIVEBY = 0xD31265F2 ( -753768974 )
            FIRING_PATTERN_FROM_GROUND = 0x2264E5D6 ( 577037782 )
            FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 0x7A845691 ( 2055493265 )
            FIRING_PATTERN_FULL_AUTO = 0xC6EE6B4C ( -957453492 )
            FIRING_PATTERN_SINGLE_SHOT = 0x5D60E4E0 ( 1566631136 )
            FIRING_PATTERN_BURST_FIRE_PISTOL = 0xA018DB8A ( -1608983670 )
            FIRING_PATTERN_BURST_FIRE_SMG = 0xD10DADEE ( 1863348768 )
            FIRING_PATTERN_BURST_FIRE_RIFLE = 0x9C74B406 ( -1670073338 )
            FIRING_PATTERN_BURST_FIRE_MG = 0xB573C5B4 ( -1250703948 )
            FIRING_PATTERN_BURST_FIRE_PUMPSHOTGUN = 0x00BAC39B ( 12239771 )
            FIRING_PATTERN_BURST_FIRE_HELI = 0x914E786F ( -1857128337 )
            FIRING_PATTERN_BURST_FIRE_MICRO = 0x42EF03FD ( 1122960381 )
            FIRING_PATTERN_SHORT_BURSTS = 0x1A92D7DF ( 445831135 )
            FIRING_PATTERN_SLOW_FIRE_TANK = 0xE2CA3A71 ( -490063247 )
            
            if anyone is interested firing pattern info: pastebin.com/Px036isB
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedFleeAttributes(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Bool probably has something to do with vehicles, maybe if the ped can use vehicle to flee?
            
            Values used as attributes are those in sequence of powers of two, 1, 2, 4, 8, 16, 32, 64.... 65536.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedGeneratesDeadBodyEvents(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedGestureGroup(System.Int32,System.String)">
            <summary>
            From the scripts:
            PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),
            ANIM_GROUP_GESTURE_MISS_FRA0);
            PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),
            ANIM_GROUP_GESTURE_MISS_DocksSetup1);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedGetOutUpsideDownVehicle(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedGravity(System.Int32,System.Boolean)">
            <summary>
            enable or disable the gravity of a ped
            
            Examples:
            PED::SET_PED_GRAVITY(PLAYER::PLAYER_PED_ID(), 0x00000001);
            PED::SET_PED_GRAVITY(Local_289iVar0 /20/, 0x00000001);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedGroupMemberPassengerIndex(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedHairColor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Used for freemode (online) characters.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedHeadBlendData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            The shape parameters control the shape of the peds face. The skin parameters control the skin tone. ShapeMix and skinMix control how much the first and second IDs contribute,(typically mother and father.) ThirdMix overrides the others in favor of the third IDs. IsParent is set for children of the player characters grandparents during old-gen character creation. It has unknown effect otherwise.
            
            The IDs start at zero and go Male Non-DLC, Female Non-DLC, Male DLC, and Female DLC.
            
            !!!Can someone add working example for this???
            
            try this:
                   headBlendData headData;
                   _GET_PED_HEAD_BLEND_DATA(PLAYER_PED_ID(), ANDeadData);
            
                   SET_PED_HEAD_BLEND_DATA(PLAYER_PED_ID(), headData.shapeFirst, headData.shapeSecond, headData.shapeThird, headData.skinFirst, headData.skinSecond
                      , headData.skinThird, headData.shapeMix, headData.skinMix, headData.skinThird, 0);
            
            
            For more info please refer to this topic. 
            gtaforums.com/topic/858970-all-gtao-face-ids-pedset-ped-head-blend-data-explained
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedHeadOverlay(System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            OverlayID ranges from 0 to 12, index from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1, and opacity from 0.0 to 1.0. 
            
            overlayID       Part                  Index, to disable
            0               Blemishes             0 - 23, 255
            1               Facial Hair           0 - 28, 255
            2               Eyebrows              0 - 33, 255
            3               Ageing                0 - 14, 255
            4               Makeup                0 - 74, 255
            5               Blush                 0 - 6, 255
            6               Complexion            0 - 11, 255
            7               Sun Damage            0 - 10, 255
            8               Lipstick              0 - 9, 255
            9               Moles/Freckles        0 - 17, 255
            10              Chest Hair            0 - 16, 255
            11              Body Blemishes        0 - 11, 255
            12              Add Body Blemishes    0 - 1, 255
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedHeadOverlayColor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Used for freemode (online) characters.
            
            ColorType is 1 for eyebrows, beards, and chest hair; 2 for blush and lipstick; and 0 otherwise, though not called in those cases.
            
            Called after SET_PED_HEAD_OVERLAY().
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedHearingRange(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedHelmet(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedHelmetFlag(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedHelmetPropIndex(System.Int32,System.Int32,System.Int32)">
            <summary>
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedHelmetTextureIndex(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedIdRange(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedIntoVehicle(System.Int32,System.Int32,System.Int32)">
            <summary>
            Ped: The ped to warp.
            vehicle: The vehicle to warp the ped into.
            Seat_Index: -1 is driver seat, -2 first free passenger seat
            
            Moreinfo of Seat Index
            DriverSeat = -1
            Passenger = 0
            Left Rear = 1
            RightRear = 2
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedInVehicleContext(System.Int32,System.UInt32)">
            <summary>
            PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, GAMEPLAY::GET_HASH_KEY(MINI_PROSTITUTE_LOW_PASSENGER));
            PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, GAMEPLAY::GET_HASH_KEY(MINI_PROSTITUTE_LOW_RESTRICTED_PASSENGER));
            PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, GAMEPLAY::GET_HASH_KEY(MISS_FAMILY1_JIMMY_SIT));
            PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, GAMEPLAY::GET_HASH_KEY(MISS_FAMILY1_JIMMY_SIT_REAR));
            PED::SET_PED_IN_VEHICLE_CONTEXT(l_95, GAMEPLAY::GET_HASH_KEY(MISS_FAMILY2_JIMMY_BICYCLE));
            PED::SET_PED_IN_VEHICLE_CONTEXT(num3, GAMEPLAY::GET_HASH_KEY(MISSFBI2_MICHAEL_DRIVEBY));
            PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(MISS_ARMENIAN3_FRANKLIN_TENSE));
            PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(MISSFBI5_TREVOR_DRIVING));
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedKeepTask(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedLegIkMode(System.Int32,System.Int32)">
            <summary>
            IK stands for Inverse kinematics. I assume this has something to do with how the ped uses his legs to balance. In the scripts, the second parameter is always an int with a value of 2, 0, or sometimes 1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedLodMultiplier(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedMaxHealth(System.Int32,System.Int32)">
            <summary>
            sets the maximum health of a ped
            
            I think its never been used in any script
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedMaxMoveBlendRatio(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedMaxTimeInWater(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedMaxTimeUnderwater(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedFaceFeature(System.Int32,System.Int32,System.Single)">
            <summary>
            Sets the various freemode face features, e.g. nose length, chin shape. Scale ranges from -1.0 to 1.0.
            
            Index can be 0 - 19
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedMinGroundTimeForStungun(System.Int32,System.Int32)">
            <summary>
            Ped will stay on the ground after being stunned for at lest ms time. (in milliseconds)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedMinMoveBlendRatio(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedModelIsSuppressed(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedMoney(System.Int32,System.Int32)">
            <summary>
            Maximum possible amount of money on MP is 2000. ~JX
            
            -----------------------------------------------------------------------------
            
            Maximum amount that a ped can theoretically have is 65535 (0xFFFF) since the amount is stored as an unsigned short (uint16_t) value.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedMotionBlur(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedMovementClipset(System.Int32,System.String,System.Single)">
            <summary>
            p2 is usually 1.0f
            
            EDIT 12/24/16: 
            p2 does absolutely nothing no matter what the value is. 
            
            List of movement clipsets:
            Thanks to elsewhat for list.
            
             ANIM_GROUP_MOVE_BALLISTIC
             ANIM_GROUP_MOVE_LEMAR_ALLEY
             clipset@move@trash_fast_turn
             FEMALE_FAST_RUNNER
             missfbi4prepp1_garbageman
             move_characters@franklin@fire
             move_characters@Jimmy@slow@
             move_characters@michael@fire
             move_f@flee@a
             move_f@scared
             move_f@sexy@a
             move_heist_lester
             move_injured_generic
             move_lester_CaneUp
             move_m@bag
             MOVE_M@BAIL_BOND_NOT_TAZERED
             MOVE_M@BAIL_BOND_TAZERED
             move_m@brave
             move_m@casual@d
             move_m@drunk@moderatedrunk
             MOVE_M@DRUNK@MODERATEDRUNK
             MOVE_M@DRUNK@MODERATEDRUNK_HEAD_UP
             MOVE_M@DRUNK@SLIGHTLYDRUNK
             MOVE_M@DRUNK@VERYDRUNK
             move_m@fire
             move_m@gangster@var_e
             move_m@gangster@var_f
             move_m@gangster@var_i
             move_m@JOG@
             MOVE_M@PRISON_GAURD
             MOVE_P_M_ONE
             MOVE_P_M_ONE_BRIEFCASE
             move_p_m_zero_janitor
             move_p_m_zero_slow
             move_ped_bucket
             move_ped_crouched
             move_ped_mop
             MOVE_M@FEMME@
             MOVE_F@FEMME@
             MOVE_M@GANGSTER@NG
             MOVE_F@GANGSTER@NG
             MOVE_M@POSH@
             MOVE_F@POSH@
             MOVE_M@TOUGH_GUY@
             MOVE_F@TOUGH_GUY@
            
            ~ NotCrunchyTaco
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedMoveAnimsBlendOut(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedMoveRateOverride(System.Int32,System.Single)">
            <summary>
            Min: 0.00
            Max: 10.00
            
            Can be used in combo with fast run cheat.
            
            When value is set to 10.00:
            Sprinting without fast run cheat: 66 m/s
            Sprinting with fast run cheat: 77 m/s
            
            Does not need to be looped!
            
            Note: According to IDA for the Xbox360 xex, when they check bgt they seem to have the min to 0.0f, but the max set to 1.15f not 10.0f.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedNeverLeavesGroup(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedNonCreationArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The distance between these points, is the diagonal of a box (remember its 3D).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedParachuteTintIndex(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedPinnedDown(System.Int32,System.Boolean,System.Int32)">
            <summary>
            i could be time. Only example in the decompiled scripts uses it as -1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedPreferredCoverSet(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.IsPedPropValid(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedPrimaryLookat(System.Int32,System.Int32)">
            <summary>
            This is only called once in the scripts.
            
            sub_1CD9(AND_49, 0, getElem(3, AND_34, 4), MICHAEL, 0, 1);
                                sub_1CA8(WORLD_HUMAN_SMOKING, 2);
                                PED::SET_PED_PRIMARY_LOOKAT(getElem(3, AND_34, 4), PLAYER::PLAYER_PED_ID());
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedPropIndex(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            ComponentId can be set to various things based on what category youre wanting to set
            enum PedPropsData
            {
                PED_PROP_HATS = 0,
                PED_PROP_GLASSES = 1,
             PED_PROP_EARS = 2,
                PED_PROP_WATCHES = 3,
            };
            Usage: SET_PED_PROP_INDEX(playerPed, PED_PROP_HATS, GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS(playerPed, PED_PROP_HATS), GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(playerPed, PED_PROP_HATS, 0), TRUE);
            
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedRagdollForceFall(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedRagdollOnCollision(System.Int32,System.Boolean)">
            <summary>
            Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedRandomComponentVariation(System.Int32,System.Boolean)">
            <summary>
            p1 is always false in R scripts.
            
            Quick disassembly seems to indicate that p1 is unused.
            
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedRandomProps(System.Int32)">
            <summary>
            List of component/props ID
            gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedRelationshipGroupDefaultHash(System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedRelationshipGroupHash(System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedReserveParachuteTintIndex(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedResetFlag(System.Int32,System.Int32,System.Boolean)">
            <summary>
            PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 240, 1);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedSeeingRange(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedShootsAtCoord(System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedShootRate(System.Int32,System.Int32)">
            <summary>
            shootRate 0-1000
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedSphereDefensiveArea(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedStayInVehicleWhenJacked(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedStealthMovement(System.Int32,System.Boolean,System.String)">
            <summary>
            p1 is usually 0 in the scripts. action is either 0 or a pointer to DEFAULT_ACTION.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedSteersAroundObjects(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedSteersAroundPeds(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedSteersAroundVehicles(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedStrafeClipset(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedSuffersCriticalHits(System.Int32,System.Boolean)">
            <summary>
            ped cannot be headshot if this is set to false
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedSweat(System.Int32,System.Single)">
            <summary>
            Sweat is set to 100.0 or 0.0 in the decompiled scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedTargetLossResponse(System.Int32,System.Int32)">
            <summary>
            Only 1 and 2 appear in the scripts. combatbehaviour.meta seems to only have TLR_SearchForTarget for all peds, but we dont know if thats 1 or 2.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedToInformRespectedFriends(System.Int32,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedToLoadCover(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedToRagdoll(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            time1- Time Ped is in ragdoll mode(ms)
            
            time2- Unknown time, in milliseconds
            
            ragdollType-
            0 : Normal ragdoll
            1 : Falls with stiff legs/body
            2 : Narrow leg stumble(may not fall)
            3 : Wide leg stumble(may not fall)
            
            p4, p5, p6- No idea. In Rs scripts they are usually either true, true, false or false, false, false.
            
            
            
            
            EDIT 3/11/16: unclear what mircoseconds mean-- a microsecond is 1000x a ms, so time2 must be 1000x time1?  more testing needed.  -sob
            
            Edit Mar 21, 2017: removed part about time2 being the microseconds version of time1. this just isnt correct. time2 is in milliseconds, and time1 and time2 dont seem to be connected in any way.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedToRagdollWithFall(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Return variable is never used in Rs scripts.
            
            Not sure what p2 does. It seems like it would be a time judging by its usage in Rs scripts, but didnt seem to affect anything in my testings.
            
            x, y, and z are coordinates, most likely to where the ped will fall.
            
            p7 is probably the force of the fall, but untested, so I left the variable name the same.
            
            p8 to p13 are always 0f in Rs scripts.
            
            (Simplified) Example of the usage of the function from Rs scripts:
            ped::set_ped_to_ragdoll_with_fall(ped, 1500, 2000, 1, -entity::get_entity_forward_vector(ped), 1f, 0f, 0f, 0f, 0f, 0f, 0f);
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedUsingActionMode(System.Int32,System.Boolean,System.Int32,System.String)">
            <summary>
            p2 is usually -1 in the scripts. action is either 0 or DEFAULT_ACTION.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedVisualFieldCenterAngle(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedVisualFieldMaxAngle(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedVisualFieldMaxElevationAngle(System.Int32,System.Single)">
            <summary>
            This native refers to the field of vision the ped has above them, starting at 0 degrees. 90f would let the ped see enemies directly above of them.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedVisualFieldMinAngle(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedVisualFieldMinElevationAngle(System.Int32,System.Single)">
            <summary>
            This native refers to the field of vision the ped has below them, starting at 0 degrees. The angle value should be negative.
            -90f should let the ped see 90 degrees below them, for example.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedVisualFieldPeripheralRange(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedWeaponMovementClipset(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedWetnessEnabledThisFrame(System.Int32)">
            <summary>
            combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedWetnessHeight(System.Int32,System.Single)">
            <summary>
            It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedRagdollBlockingFlags(System.Int32,System.Int32)">
            <summary>
            Works for both player and peds, but some flags dont seem to work for the player (1, for example)
            
            1 - Blocks ragdolling when shot.
            2 - Blocks ragdolling when hit by a vehicle. The ped still might play a falling animation.
            4 - Blocks ragdolling when set on fire.
            
            -----------------------------------------------------------------------
            
            There seem to be 26 flags
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetRelationshipBetweenGroups(System.Int32,System.UInt32,System.UInt32)">
            <summary>
            Sets the relationship between two groups. This should be called twice (once for each group).
            
            Relationship types:
            0 = Companion
            1 = Respect
            2 = Like
            3 = Neutral
            4 = Dislike
            5 = Hate
            255 = Pedestrians
            
            Example:
            PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);
            PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetScenarioPedsSpawnInSphereArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetScenarioPedsToBeReturnedByNextCommand(System.Boolean)">
            <summary>
            Sets a value indicating whether scenario peds should be returned by the next call to a command that returns peds. Eg. GET_CLOSEST_PED.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetScenarioPedDensityMultiplierThisFrame(System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetScriptedAnimSeatOffset(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetScriptedConversionCoordThisFrame(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetSynchronizedSceneOcclusionPortal(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetSynchronizedSceneLooped(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetSynchronizedSceneOrigin(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetSynchronizedScenePhase(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetSynchronizedSceneRate(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.StopAnyPedModelBeingSuppressed">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.StopPedWeaponFiringWhenDropped(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.DisposeSynchronizedScene(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.UnregisterPedheadshot(System.Int32)">
            <summary>
            gtaforums.com/topic/885580-ped-headshotmugshot-txd/
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.UpdatePedHeadBlendData(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            See SET_PED_HEAD_BLEND_DATA().
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.WasPedKilledByStealth(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.WasPedKilledByTakedown(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.WasPedSkeletonUpdated(System.Int32)">
            <summary>
            Despite this functions name, it simply returns whether the specified handle is a Ped.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedNameDebug(System.Int32,System.String)">
            <summary>
            NOTE: Debugging functions are not present in the retail version of the game.
            
            untested but char name could also be a hash for a localized string
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.SetPedPlaysHeadOnHornAnimWhenDiesInVehicle(System.Int32,System.Boolean)">
            <summary>
            Points to the same function as for example GET_RANDOM_VEHICLE_MODEL_IN_MEMORY and it does absolutely nothing.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xE43A13C9E4CCCBCF(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x2DFC81C9B9608549(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x9C6A6C19B6C0C496(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xE6CA85E7259CE16B(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x6585D955A68452A5(System.Int32)">
            <summary>
            Something related to clearing the ped because always used with CLEAR_PED_WETNESS, CLEAR_PED_BLOOD_DAMAGE and RESET_PED_VISIBLE_DAMAGE.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x80054D7FCC70EEC6(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xC79196DCB36F6121(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x1280804F7CFD2D6C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xB50EB4CCB29704AC(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x687C0B594907D2E8(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x668FD40BCBA5DE48(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x148B08C2D2ACB884(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x5407B7288D0478B7(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x336B3D200AB007CB(System.Int32,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x8C4F3BF23B6237DB(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xA21C118553BBDF02(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x600048C60D5C2C51(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x733C87D4CE22BEA2(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xCC6E3B6BB69501F1(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x8A24B067D175A7BD(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xAFF4710E2A0A6C12(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x4668D80430D6C299(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xED3C76ADFA6D07C4(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x2208438012482A1A(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Function.Call(Hash._0x2208438012482A1A, ped, 0, 0);
            
            This makes the ped have faster animations
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xD33DAA36272177C4(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x03EA03AF85A85CB7(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xAAA6A3698A69E048(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xEA9960D07DADCF10(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xF033419D1B81FAE8(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x1E77FA7A62EE6C4C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x76BBA2CEE66D47E9(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x9E30E91FB03A2CAF(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xF60165E1D2C5370B(System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x1461B28A06717D68(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x4852FC386E2E1BB5(System.Int32,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x451294E859ECC018(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x9D728C1E12BF5518(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x013E5CFC38CD5387(System.Int32,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x36B77BB84687C318(System.Int32,System.Int32)">
            <summary>
            GET_TIME_SINCE_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xC56FBF2F228E1DAC(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x511F1A683387C7E2(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x876928DDDFCCC9CD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xE8A169E666CBC541">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x784002A632822099(System.Int32)">
            <summary>
            Normally returns true. Returns false briefly whilst putting on a helmet after getting onto a motorbike. Not sure what thats about.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x66680A92700F43DF(System.Int32)">
            <summary>
            Normally returns true. Returns false briefly whilst getting into a plane. This is probably a check to see if the ped model and all its components/drawables are properly loaded yet.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x7350823473013C02(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x4759CC730F947C81">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x68772DB2B2526F9F(System.Int32,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xF2385935BFFD4D92(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xA3F3564A5B3646C0(System.Int32)">
            <summary>
            Only called once in the scripts:
            
            if (sub_1abd() AND (!PED::_A3F3564A5B3646C0(l_8C))) {
                if (sub_52e3(RESNA_CELLR, 0)) {
                    PED::SET_PED_CAN_PLAY_GESTURE_ANIMS(l_8C, 1);
                    PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(l_8C, 1);
                    PED::SET_PED_CAN_PLAY_VISEME_ANIMS(l_8C, 1, 0);
                    l_184 += 1;
                }
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xEBB376779A760AA8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xF41B5D290C99A3D6(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xBA63D9FE45412247(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x451D05012CCEC234(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xED6D8E27A43B8CDE(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xFCF37A457CB96DC0(System.Int32,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xB9496CE47546DB2C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x412F1364FA066CFB(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x3E802F11FBE27674(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x26AF0E8E30BD2A2C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xEBD0EDBA5BE957CF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xDCCA191DF9980FD7(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xD1871251F3B5ACD7(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x81AA517FBBA05D39(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xB8B52E498014F5B0(System.Int32)">
            <summary>
            if (!$B8B52E498014F5B0(PLAYER::PLAYER_PED_ID())) {
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x3795688A307E1EB6(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x14590DDBEDB1EC85(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x7F2F4F13AC5257EF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x06087579E7AA85A9(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xFEC9A3B1820F3331(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x2B694AFCF64E6994(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x46B05BCAE43856B0(System.Int32,System.Int32)">
            <summary>
            Checks if the specified unknown flag is set in the peds model.
            The engine itself seems to exclusively check for flags 1 and 4 (Might be inlined code of the check that checks for other flags).
            Game scripts exclusively check for flags 1 and 4.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xBA8805A1108A2515(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x953563CE563143AF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x5D517B27CF6ECD04(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xF79F9DEF0AADE61A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x5AAB586FFEC0FD96(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xF0DAEF2F545BEE25(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xCD018C591F94CB43(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x75BA1CB3B7D40CAF(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x2BC338A7B21F4608(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x7D7A2E43E74E2EB8(System.Int32)">
            <summary>
            i found this function just like VEHICLE::TRACK_VEHICLE_VISIBILITY 
            example:
            PED::_0x7D7A2E43E74E2EB8(ped);// TRACK_PED_VISIBILITY
            if (PED::IS_TRACKED_PED_VISIBLE(ped))
            {
                
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x061CB768363D6424(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x87DDEB611B329A9C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x6B0E6172C9A4D902(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x9911F4A24485F653(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x2F074C904D85129E(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x2735233A786B1BEF(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x711794453CFD692B(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xDFE68C4B787E1BFB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xDED5AF5A0EA4B297(System.Int32,System.Single)">
            <summary>
            Scripts use 0.2, 0.5 and 1.0.
            
            SET_DRIVER_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x129466ED55140F8D(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xCB968B53FC7F916D(System.Int32,System.Boolean,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xCC9682B8951C5229(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            p4 seems to vary from 0 to 3.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xFF4803BC019852D9(System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x1A330D297AAC6BC1(System.Int32,System.Int32)">
            <summary>
            Only appears in lamar1 script.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x781DE8FA214E87D2(System.Int32,System.String)">
            <summary>
            p1: MP_FEMALE_ACTION found multiple times in the b617d scripts.
            
            Console Hash: 0x83BAE814
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xF2BEBCDFAFDAA19E(System.Boolean)">
            <summary>
            toggle was always 0 except in one instance (b678).
            
            The one time this is set to true seems to do with when you fail the mission.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x49E50BDB8BA4DAB2(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x2B5AA717A181FB4C(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x576594E8D64375E2(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xE861D0B05C7662B8(System.Int32,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x820E9892A77E97CD(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xF5846EDB26A98A24(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x6647C5F6F5792496(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x78C4E9961DB3EB5B(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xA660FAF550EB37E5(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xE4723DB6E736CCFF(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x4E90D746056E273D(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xE906EC930F5FE7C8(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xD69411AA0CEBF9E9(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Something related to the environmental effects natives.
            In the agency_heist3b script, p1 - p3 are always under 100 - usually they are {87, 81, 68}. If SET_PED_ENVEFF_SCALE is set to 0.65 (instead of the usual 1.0), they use {74, 69, 60}
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x110F526AB784111F(System.Int32,System.Single)">
            <summary>
            In agency_heist3b.c4, its like this 90% of the time:
            
            PED::_110F526AB784111F(ped, 0.099);
            PED::SET_PED_ENVEFF_SCALE(ped, 1.0);
            PED::_D69411AA0CEBF9E9(ped, 87, 81, 68);
            PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);
            
            and its like this 10% of the time:
            
            PED::_110F526AB784111F(ped, 0.2);
            PED::SET_PED_ENVEFF_SCALE(ped, 0.65);
            PED::_D69411AA0CEBF9E9(ped, 74, 69, 60);
            PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xC1F6EBF9A3D55538(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x3F7325574E41B44D(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x52D59AB61DDC05DD(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x570389D1C3DE3C6B(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xEC4B4B3B9908052A(System.Int32,System.Single)">
            <summary>
            SET_PED_
            
            Has most likely to do with some shooting attributes as it sets the float which is in the same range as shootRate.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xA9B61A329BFDCBEA(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x33A60D8BDD6E508C(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x9DBA107B4937F809(System.Int32,System.String)">
            <summary>
            Found in the b617d scripts:
            PED::_9DBA107B4937F809(v_7, trevor_heist_cover_2h);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x0B3E35AC043707D9(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xA52D5247A4227E14(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xFE07FF6495D52E2A(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x83A169EABCDB10A2(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x39D55A620FCB6A3A(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            from extreme3.c4
            PED::_39D55A620FCB6A3A(PLAYER::PLAYER_PED_ID(), 8, PED::GET_PED_DRAWABLE_VARIATION(PLAYER::PLAYER_PED_ID(), 8), PED::GET_PED_TEXTURE_VARIATION(PLAYER::PLAYER_PED_ID(), 8));
            
            p1 is probably componentId
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x36C6984C3ED0C911(System.Int32)">
            <summary>
            when player character is used plays remove scuba gear animation
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x425AECF167663F48(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x5B6010B3CBC29095(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xEC6935EBE0847B90(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xEEED8FAFEC331A70(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xF1C03A5352243A30(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xA3A9299C4F2ADB98(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xCEDA60A74219D064(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x2016C603D6B8987C(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x288DF530C92DAD6F(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x0F62619393661D6E(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xAFC976FD0580C7B3(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x952F06BEECD775CC(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x3E9679C1DFCF422C(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xD8C3BE3EE94CAF2D(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x5615E0C5EB2BC6E2(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x2F3C3D9F50681DE4(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xFD325494792302D7(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xFEE4A5459472A9F8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xA635C11B8C44AFC2">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x280C7E3AC7F56E90(System.Int32,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xB782F8238512BAD5(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x3C67506996001F5E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xA586FBEB32A53DBB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xF445DE8DA80A1792">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x2DF9038C90AD5264(System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xB2AFF10216DEFA2F(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xF9ACF4A08098EA25(System.Int32,System.Boolean)">
            <summary>
            p1 was always 1 (true).
            
            Kicks the ped from the current vehicle and keeps the rendering-focus on this ped (also disables its collision). If doing this for your player ped, youll still be able to drive the vehicle.
            
            Actual name begins with S
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x5A7F62FDA59759BD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x9A77DFD295E29B09(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xC2EE020F5FB4DB53(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x25361A96E0F7E419(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x61767F73EACEED21(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0xB282749D5E028163(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ped.Unknown._0x1216E0BFA72CC703(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Physics">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Physics.ActivatePhysics(System.Int32)">
            <summary>
            seems to be frequently used with the NETWORK::NET_TO_x natives, particularly with vehicles. It is often the only ROPE:: native in a script.
            
            -- This is because the ROPE namespace should most likely be called PHYSICS alphabetically.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.AddRope(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Boolean,System.Int32@)">
            <summary>
            Creates a rope at the specific position, that extends in the specified direction when not attached to any entities.
            __
            
            Add_Rope(pos.x,pos.y,pos.z,0.0,0.0,0.0,20.0,4,20.0,1.0,0.0,false,false,false,5.0,false,NULL)
            
            When attached, Positionvector does not matter
            When attached, Anglevector does not matter
            
            Rope Type:
            4 and bellow is a thick rope
            5 and up are small metal wires
            0 crashes the game
            
            Max_length - Rope is forced to this length, generally best to keep this the same as your rope length.
            
            Rigid - If max length is zero, and this is set to false the rope will become rigid (it will force a specific distance, what ever length is, between the objects).
            
            breakable - Whether or not shooting the rope will break it.
            
            unkPtr - unknown ptr, always 0 in orig scripts
            __
            
            Lengths can be calculated like so:
            
            float distance = abs(x1 - x2) + abs(y1 - y2) + abs(z1 - z2); // Rope length
            
            
            NOTES:
            
            Rope does NOT interact with anything you attach it to, in some cases it make interact with the world AFTER it breaks (seems to occur if you set the type to -1).
            
            Rope will sometimes contract and fall to the ground like youd expect it to, but since it doesnt interact with the world the effect is just jaring.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.ApplyImpulseToCloth(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.AttachEntitiesToRope(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32@,System.Int32@)">
            <summary>
            Attaches entity 1 to entity 2.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.AttachRopeToEntity(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            The position supplied can be anywhere, and the entity should anchor relative to that point from its origin.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.BreakEntityGlass(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.DeleteChildRope(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.DeleteRope(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.DetachRopeFromEntity(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.DoesRopeExist(System.Int32@)">
            <summary>
            Ptr is correct
            </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.GetCgoffset(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.GetRopeLastVertexCoord(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.GetRopeVertexCoord(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.GetRopeVertexCount(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.LoadRopeData(System.Int32,System.String)">
            <summary>
            Rope presets can be found in the gamefiles. One example is ropeFamily3, it is NOT a hash but rather a string.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.PinRopeVertex(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.RopeAreTexturesLoaded">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.RopeConvertToSimple(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.RopeDrawShadowEnabled(System.Int32@,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.RopeForceLength(System.Int32,System.Single)">
            <summary>
            Forces a rope to a certain length.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.GetRopeLength(System.Int32)">
            <summary>
            Get a ropes length.  Can be modified with ROPE_FORCE_LENGTH
            </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.RopeLoadTextures">
            <summary>
            Loads rope textures for all ropes in the current scene.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.RopeResetLength(System.Int32,System.Boolean)">
            <summary>
            Reset a rope to a certain length.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.RopeSetUpdatePinverts(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.RopeUnloadTextures">
            <summary>
            Unloads rope textures for all ropes in the current scene.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.SetCgoffset(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.SetCgAtBoundcenter(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.SetDamping(System.Int32,System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.SetDisableBreaking(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.SetDisableFragDamage(System.Int32,System.Boolean)">
            <summary>
            sometimes used used with NET_TO_OBJ
            hash collision last 2 words
            </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.StartRopeUnwindingFront(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.StartRopeWinding(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.StopRopeUnwindingFront(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.StopRopeWinding(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.UnpinRopeVertex(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.Unknown._0x271C9D3ACA5D6409(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.Unknown._0x0C112765300C7E1E(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.Unknown._0x84DE3B5FB3E666F0(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.Unknown._0xCC6E963682533882(System.Int32)">
            <summary>
            RESET_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.Unknown._0xBC0CE682D4D05650(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Most likely ROPE_ATTACH_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.Unknown._0xB1B6216CA2E7B55E(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.Unknown._0xB743F735C03D7810(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.Unknown._0x36CCB9BE67B970FD(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.Unknown._0xDC57A637A20006ED(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.Unknown._0x9EBD751E5787BAF2(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Physics.Unknown._0x15F944730C832252(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Player">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Player.IntToPlayerindex(System.Int32)">
            <summary>
            Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IntToParticipantindex(System.Int32)">
            <summary>
            Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
            --------------------------------------------------------
            if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(i)))
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ArePlayerFlashingStarsAboutToDrop">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ArePlayerStarsGreyedOut">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.AssistedMovementCloseRoute">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.AssistedMovementFlushRoute">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.CanPedHearPlayer(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.CanPlayerStartMission">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ChangePlayerPed(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            b2 and/or b3 maybe got something to do with keeping values from the last ped. Both of them set to 1 works great. 
            
            Examples from the decompiled scripts:
            
            PLAYER::CHANGE_PLAYER_PED(PLAYER::PLAYER_ID(), l_5C04/14/, 0, 1);
            PLAYER::CHANGE_PLAYER_PED(PLAYER::PLAYER_ID(), a_0a_0._f7/1/, a_2, 0);
            
            
            ===========================================================
            The only way I ever got this to work in GTA Online once is by setting both to 0, 0. However, when you switch from your online character to whomever, your character will start walking away as if you left the game. If from there you attempt to call this native once more to switch back to you online ped. You will freeze or if you try changing to another ped. Ive tried all posibilities so far.
            1, 1 (Freeze), 0, 0(Works Once), 1, 0 AND0, 1 (Freeze). Note of course trying to call this on another online player will crash. Anyone have any idea if implementing a blr within the xex itself on a possible check if it would prevent this freezing?
            ===========================================================
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ClearPlayerHasDamagedAtLeastOneNonAnimalPed">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ClearPlayerHasDamagedAtLeastOnePed">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ClearPlayerParachuteModelOverride">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ClearPlayerParachutePackModelOverride">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ClearPlayerParachuteVariationOverride">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ClearPlayerWantedLevel">
            <summary>
            This executes at the same as speed as PLAYER::SET_PLAYER_WANTED_LEVEL(player, 0, false);
            
            PLAYER::GET_PLAYER_WANTED_LEVEL(player); executes in less than half the time. Which means that its worth first checking if the wanted level needs to be cleared before clearing. However, this is mostly about good code practice and can important in other situations. The difference in time in this example is negligible. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.DisablePlayerFiring(System.Boolean)">
            <summary>
            Inhibits the player from using any method of combat including melee and firearms.
            
            NOTE: Only disables the firing for one frame
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.DisablePlayerVehicleRewards">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.DisplaySystemSigninUi(System.Boolean)">
            <summary>
            Purpose of the BOOL currently unknown.
            Both, true and false, work
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.EnableSpecialAbility(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ExpandWorldLimits(System.Single,System.Single,System.Single)">
            <summary>
            Appears only 3 times in the scripts, more specifically in michael1.ysc
            
            Console hash: 0x64ddb07d
            
            -
            This can be used to prevent dying if you are out of the world
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ForceCleanup(System.Int32)">
            <summary>
            used with 1,2,8,64,128 in the scripts
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ForceCleanupForAllThreadsWithThisName(System.String,System.Int32)">
            <summary>
            PLAYER::FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME(pb_prostitute, 1); // Found in decompilation
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ForceCleanupForThreadWithThisId(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerCamControlDisabled">
            <summary>
            Returns true when the player is not able to control the cam i.e. when running a benchmark test, switching the player or viewing a cutscene.
            
            Note: I am not 100% sure if the native actually checks if the cam control is disabled but it seems promising.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetCauseOfMostRecentForceCleanup">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetEntityPlayerIsFreeAimingAt(System.Int32@)">
            <summary>
            Returns TRUE if it found an entity in your crosshair within range of your weapon. Assigns the handle of the target to the entity that you pass it.
            Returns false if no entity found.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerLoggingInNp">
            <summary>
            this function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetMaxWantedLevel">
            <summary>
            Gets the maximum wanted level the player can get.
            Ranges from 0 to 5.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetNumberOfPlayers">
            <summary>
            Gets the number of players in the current session.
            If not multiplayer, always returns 1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayersLastVehicle">
            <summary>
            Alternative: GET_VEHICLE_PED_IS_IN(PLAYER_PED_ID(), 1);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerCurrentStealthNoise">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerGroup">
            <summary>
            Returns the group ID the player is member of.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerHasReserveParachute">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerInvincible">
            <summary>
            Returns the Players Invincible status.
            
            This function will always return false if 0x733A643B5B0C53C1 is used to set the invincibility status. To always get the correct result, use this:
            
             bool IsPlayerInvincible(Player player)
                {
                 auto addr = getScriptHandleBaseAddress(GET_PLAYER_PED(player)); 
            
                    if (addr)
                 {
                     DWORD flag = (DWORD )(addr + 0x188);
                        return ((flag AND(1  8)) != 0) OR ((flag AND(1  9)) != 0);
                  }
            
                   return false;
             }
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerMaxArmour">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerName">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerParachutePackTintIndex(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerParachuteSmokeTrailColor(System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerParachuteTintIndex(System.Int32@)">
            <summary>
            Tints:
              None = -1,
                Rainbow = 0,
              Red = 1,
              SeasideStripes = 2,
               WidowMaker = 3,
               Patriot = 4,
              Blue = 5,
             Black = 6,
                Hornet = 7,
               AirFocce = 8,
             Desert = 9,
               Shadow = 10,
              HighAltitude = 11,
                Airbone = 12,
             Sunrise = 13,
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerPed">
            <summary>
            Gets the ped id of a player
            
            
            -
            Please update and release your native hash translation table quicker, AB Team. Thanks, :).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerPedScriptIndex">
            <summary>
            Does the same like PLAYER::GET_PLAYER_PED
            
            why does it return an entity and not a ped?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerReserveParachuteTintIndex(System.Int32@)">
            <summary>
            Tints:
              None = -1,
                Rainbow = 0,
              Red = 1,
              SeasideStripes = 2,
               WidowMaker = 3,
               Patriot = 4,
              Blue = 5,
             Black = 6,
                Hornet = 7,
               AirFocce = 8,
             Desert = 9,
               Shadow = 10,
              HighAltitude = 11,
                Airbone = 12,
             Sunrise = 13,
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerRgbColour(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Returns RGB color of the player (duh)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerSprintStaminaRemaining">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerSprintTimeRemaining">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerTargetEntity(System.Int32@)">
            <summary>
            Assigns the handle of locked-on melee target to entity that you pass it.
            Returns false if no entity found.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerTeam">
            <summary>
            Gets the players team.
            Does nothing in singleplayer.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerUnderwaterTimeRemaining">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerWantedCentrePosition">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerWantedLevel">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetTimeSinceLastArrest">
            <summary>
            Returns the time since the character was arrested in (ms) milliseconds.
            
            example
            
            var time = Function.callint(Hash.GET_TIME_SINCE_LAST_ARREST();
            
            UI.DrawSubtitle(time.ToString());
            
            if player has not been arrested, the int returned will be -1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetTimeSinceLastDeath">
            <summary>
            Returns the time since the character died in (ms) milliseconds.
            
            example
            
            var time = Function.callint(Hash.GET_TIME_SINCE_LAST_DEATH();
            
            UI.DrawSubtitle(time.ToString());
            
            if player has not died, the int returned will be -1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetTimeSincePlayerDroveAgainstTraffic">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetTimeSincePlayerDroveOnPavement">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetTimeSincePlayerHitPed">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetTimeSincePlayerHitVehicle">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetWantedLevelRadius">
            <summary>
            Remnant from GTA IV. Does nothing in GTA V.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetWantedLevelThreshold(System.Int32)">
            <summary>
            Drft
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GiveAchievementToPlayer(System.Int32)">
            <summary>
            Achievements from 0-57
            
            
            more achievements came with update 1.29 (freemode events update), Id say that they now go to 60, but Ill need to check.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GivePlayerRagdollControl(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.HasAchievementBeenPassed(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.HasForceCleanupOccurred(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.HasPlayerBeenSpottedInStolenVehicle">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.HasPlayerDamagedAtLeastOneNonAnimalPed">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.HasPlayerDamagedAtLeastOnePed">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.HasPlayerLeftTheWorld">
            <summary>
            Gets the players info and calls a function that checks the players ped position.
            
            Heres the decompiled function that checks the position: pastebin.com/ZdHG2E7n
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerBeingArrested(System.Boolean)">
            <summary>
            Return true while player is being arrested / busted.
            
            If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)
            
            If atArresting is set to 0, this function will return 1 only when the busted screen is shown.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerClimbing">
            <summary>
            Returns TRUE if the player (s ped) is climbing at the moment.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerControlOn">
            <summary>
            Can the player control himself, used to disable controls for player for things like a cutscene.
            
            ---
            
            You cant disable controls with this, use SET_PLAYER_CONTROL(...) for this. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerDead">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerFreeAiming">
            <summary>
            Gets a value indicating whether the specified player is currently aiming freely.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerFreeAimingAtEntity(System.Int32)">
            <summary>
            Gets a value indicating whether the specified player is currently aiming freely at the specified entity.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerFreeForAmbientTask">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerOnline">
            <summary>
            Returns TRUE if the game is in online mode and FALSE if in offline mode.
            
            This is an alias for NETWORK_IS_SIGNED_ONLINE.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerPlaying">
            <summary>
            Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerPressingHorn">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerReadyForCutscene">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerRidingTrain">
            <summary>
            Returns true if the player is riding a train.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerScriptControlOn">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerTargettingAnything">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerTargettingEntity(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerTeleportActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsPlayerWantedLevelGreater(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsSpecialAbilityActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsSpecialAbilityEnabled">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsSpecialAbilityMeterFull">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsSpecialAbilityUnlocked(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.IsSystemUiBeingDisplayed">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.GetPlayerIndex">
            <summary>
            Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.PlayerId">
            <summary>
            This returns YOUR identity as a Player type.
            
            Always returns 0 in story mode.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.NetworkPlayerIdToInt">
            <summary>
            Does exactly the same thing as PLAYER_ID()
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.PlayerAttachVirtualBound(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Only 1 match. ob_sofa_michael.
            
            PLAYER::PLAYER_ATTACH_VIRTUAL_BOUND(-804.5928f, 173.1801f, 71.68436f, 0f, 0f, 0.590625f, 1f, 0.7f);1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.PlayerDetachVirtualBound">
            <summary>
            1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.PlayerPedId">
            <summary>
            Returns current player ped
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.RemovePlayerHelmet(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ReportCrime(System.Int32,System.Int32)">
            <summary>
            PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(), 37, PLAYER::GET_WANTED_LEVEL_THRESHOLD(1));
            
            From am_armybase.ysc.c4:
            
            PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(4), 36, PLAYER::GET_WANTED_LEVEL_THRESHOLD(4));
            
            -----
            
            This was taken from the GTAV.exe v1.334. The function is called sub_140592CE8. For a full decompilation of the function, see here: pastebin.com/09qSMsN7 
            
            -----
            crimeType:
            1: Firearms possession
            2: Person running a red light (5-0-5)
            3: Reckless driver
            4: Speeding vehicle (a 5-10)
            5: Traffic violation (a 5-0-5)
            6: Motorcycle rider without a helmet
            7: Vehicle theft (a 5-0-3)
            8: Grand Theft Auto
            9: ???
            10: ???
            11: Assault on a civilian (a 2-40)
            12: Assault on an officer
            13: Assault with a deadly weapon (a 2-45)
            14: Officer shot (a 2-45)
            15: Pedestrian struck by a vehicle
            16: Officer struck by a vehicle
            17: Helicopter down (an AC?)
            18: Civilian on fire (a 2-40)
            19: Officer set on fire (a 10-99)
            20: Car on fire
            21: Air unit down (an AC?)
            22: An explosion (a 9-96)
            23: A stabbing (a 2-45) (also something else I couldnt understand)
            24: Officer stabbed (also something else I couldnt understand)
            25: Attack on a vehicle (MDV?)
            26: Damage to property
            27: Suspect threatening officer with a firearm
            28: Shots fired
            29: ???
            30: ???
            31: ???
            32: ???
            33: ???
            34: A 2-45
            35: ???
            36: A 9-25
            37: ???
            38: ???
            39: ???
            40: ???
            41: ???
            42: ???
            43: Possible disturbance
            44: Civilian in need of assistance
            45: ???
            46: ???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ResetPlayerArrestState">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ResetPlayerInputGait">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ResetPlayerStamina">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.ResetWantedLevelDifficulty">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.RestorePlayerStamina(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetAirDragMultiplierForPlayersVehicle(System.Single)">
            <summary>
            This can be between 1.0f - 14.9f 
            
            You can change the max in IDA from 15.0. I say 15.0 as the function blrs if what you input is greater than or equal to 15.0 hence why its 14.9 max default.
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetAllRandomPedsFlee(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetAllRandomPedsFleeThisFrame">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetAutoGiveParachuteWhenEnterPlane(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetDisableAmbientMeleeMove(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetDispatchCopsForPlayer(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetEveryoneIgnorePlayer(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetIgnoreLowPriorityShockingEvents(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetMaxWantedLevel(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerCanBeHassledByGangs(System.Boolean)">
            <summary>
            Sets whether this player can be hassled by gangs.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerCanDoDriveBy(System.Boolean)">
            <summary>
            Set whether this player should be able to do drive-bys.
            
            A drive-by is when a ped is aiming/shooting from vehicle. This includes middle finger taunts. By setting this value to false I confirm the player is unable to do all that. Tested on tick.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerCanLeaveParachuteSmokeTrail(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerCanUseCover(System.Boolean)">
            <summary>
            Sets whether this player can take cover.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerClothLockCounter(System.Int32)">
            <summary>
            6 matches across 4 scripts. 5 occurrences were 240. The other was 255.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerClothPackageIndex(System.Int32)">
            <summary>
            Every occurrence was either 0 or 2.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerClothPinFrames(System.Boolean)">
            <summary>
            Every occurrence of p1 I found was true.1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerControl(System.Boolean,System.Int32)">
            <summary>
            Flags used in the scripts: 0,4,16,24,32,56,60,64,128,134,256,260,384,512,640,768,896,900,952,1024,1280,2048,2560
            
            Note to people who needs this with camera mods, etc.: 
            Flags(0, 4, 16, 24, 32, 56, 60, 64, 128, 134, 512, 640, 1024, 2048, 2560)
            - Disables camera rotation as well.
            Flags(256, 260, 384, 768, 896, 900, 952, 1280)
            - Allows camera rotation.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerForcedAim(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerForcedZoom(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerForceSkipAimIntro(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerHasReserveParachute">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerHealthRechargeMultiplier(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerInvincible(System.Boolean)">
            <summary>
            Simply sets you as invincible (Health will not deplete).
            
            Use 0x733A643B5B0C53C1 instead if you want Ragdoll enabled, which is equal to:
            (DWORD )(playerPedAddress + 0x188) OR (1  9);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerLockon(System.Boolean)">
            <summary>
            Example from fm_mission_controler.ysc.c4:
            
            PLAYER::SET_PLAYER_LOCKON(PLAYER::PLAYER_ID(), 1);
            
            All other decompiled scripts using this seem to be using the player id as the first parameter, so I feel the need to confirm it as so.
            
            No need to confirm it says PLAYER_ID() so it uses PLAYER_ID() lol.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerLockonRangeOverride(System.Single)">
            <summary>
            Affects the range of auto aim target.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerMaxArmour(System.Int32)">
            <summary>
            Default is 100. Use player id and not ped id. For instance: PLAYER::SET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID(), 100); // main_persistent.ct4
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerMayNotEnterAnyVehicle">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerMayOnlyEnterThisVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerMeleeWeaponDamageModifier(System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerMeleeWeaponDefenseModifier(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerModel(System.UInt32)">
            <summary>
            Make sure to request the model first and wait until it has loaded.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerNoiseMultiplier(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerParachuteModelOverride(System.UInt32)">
            <summary>
            example:
            
            PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), 0x73268708);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerParachutePackModelOverride(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerParachutePackTintIndex(System.Int32)">
            <summary>
            tints 0- 13
            0 - unkown
            1 - unkown
            2 - unkown
            3 - unkown
            4 - unkown
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerParachuteSmokeTrailColor(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerParachuteTintIndex(System.Int32)">
            <summary>
            Tints:
               None = -1,
                Rainbow = 0,
              Red = 1,
              SeasideStripes = 2,
               WidowMaker = 3,
               Patriot = 4,
              Blue = 5,
             Black = 6,
                Hornet = 7,
               AirFocce = 8,
             Desert = 9,
               Shadow = 10,
              HighAltitude = 11,
                Airbone = 12,
             Sunrise = 13,
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerParachuteVariationOverride(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            p1 was always 5.
            p4 was always false.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerResetFlagPreferRearSeats(System.Int32)">
            <summary>
            example:
            
            flags: 0-6
            
            PLAYER::SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS(PLAYER::PLAYER_ID(), 6);
            
            wouldnt the flag be the seatIndex?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerReserveParachuteTintIndex(System.Int32)">
            <summary>
            Tints:
               None = -1,
                Rainbow = 0,
              Red = 1,
              SeasideStripes = 2,
               WidowMaker = 3,
               Patriot = 4,
              Blue = 5,
             Black = 6,
                Hornet = 7,
               AirFocce = 8,
             Desert = 9,
               Shadow = 10,
              HighAltitude = 11,
                Airbone = 12,
             Sunrise = 13,
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerSimulateAiming(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerSneakingNoiseMultiplier(System.Single)">
            <summary>
            Values around 1.0f to 2.0f used in game scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerSprint(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerStealthPerceptionModifier(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerTargetingMode(System.Int32)">
            <summary>
            Sets your targeting mode.
            0 = Traditional GTA
            1 = Assisted Aiming
            2 = Free Aim
            
            Even tho gtaforums nor Alexander B supports this, if youre online in freemode already its nice to have this since retail or otherwise you have to go to SP to change it.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerTeam(System.Int32)">
            <summary>
            Set player team on deathmatch and last team standing..
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerVehicleDamageModifier(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerVehicleDefenseModifier(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerWantedCentrePosition(RAGE.Vector3,System.Boolean,System.Boolean)">
            <summary>
            # Predominant call signatures
            PLAYER::SET_PLAYER_WANTED_CENTRE_POSITION(PLAYER::PLAYER_ID(), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1));
            
            # Parameter value ranges
            P0: PLAYER::PLAYER_ID()
            P1: ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)
            P2: Not set by any call
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerWantedLevel(System.Int32,System.Boolean)">
            <summary>
            Call SET_PLAYER_WANTED_LEVEL_NOW for immediate effect
            
            wantedLevel is an integer value representing 0 to 5 stars even though the game supports the 6th wanted level but no police will appear since no definitions are present for it in the game files
            
            disableNoMission-  Disables When Off Mission- appears to always be false
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerWantedLevelNow(System.Boolean)">
            <summary>
            Forces any pending wanted level to be applied to the specified player immediately.
            
            Call SET_PLAYER_WANTED_LEVEL with the desired wanted level, followed by SET_PLAYER_WANTED_LEVEL_NOW.
            
            Second parameter is unknown (always false).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerWantedLevelNoDrop(System.Int32,System.Boolean)">
            <summary>
            p2 is always false in R scripts
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerWeaponDamageModifier(System.Single)">
            <summary>
            This modifies the damage value of your weapon. Whether it is a multiplier or base damage is unknown. 
            
            Based on tests, it is unlikely to be a multiplier.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPlayerWeaponDefenseModifier(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPoliceIgnorePlayer(System.Boolean)">
            <summary>
            The player will be ignored by the police if toggle is set to true
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetPoliceRadarBlips(System.Boolean)">
            <summary>
            If toggle is set to false:
             The police wont be shown on the (mini)map
            
            If toggle is set to true:
             The police will be shown on the (mini)map
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetRunSprintMultiplierForPlayer(System.Single)">
            <summary>
            Multiplier goes up to 1.49 any value above will be completely overruled by the game and the multiplier will not take effect, this can be edited in memory however.
            
            Just call it one time, it is not required to be called once every tick.
            
            Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and SWIM above. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why its 1.49 max default.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetSpecialAbilityMultiplier(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetSwimMultiplierForPlayer(System.Single)">
            <summary>
            Swim speed multiplier.
            Multiplier goes up to 1.49
            
            Just call it one time, it is not required to be called once every tick. - Note copied from below native.
            
            Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and RUN_SPRINT below. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why its 1.49 max default.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetWantedLevelDifficulty(System.Single)">
            <summary>
            Max value is 1.0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SetWantedLevelMultiplier(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SimulatePlayerInputGait(System.Single,System.Int32,System.Single,System.Boolean,System.Boolean)">
            <summary>
            This is to make the player walk without accepting input from INPUT.
            
            gaitType is in increments of 100s. 2000, 500, 300, 200, etc.
            
            p4 is always 1 and p5 is always 0.
            
            C# Example :
            
            Function.Call(Hash.SIMULATE_PLAYER_INPUT_GAIT, Game.Player, 1.0f, 100, 1.0f, 1, 0); //Player will go forward for 100ms
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SpecialAbilityChargeAbsolute(System.Int32,System.Boolean)">
            <summary>
            p1 appears as 5, 10, 15, 25, or 30. p2 is always true.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SpecialAbilityChargeContinuous(System.Int32)">
            <summary>
            p1 appears to always be 1 (only comes up twice)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SpecialAbilityChargeLarge(System.Boolean,System.Boolean)">
            <summary>
            2 matches. p1 was always true.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SpecialAbilityChargeMedium(System.Boolean,System.Boolean)">
            <summary>
            Only 1 match. Both p1 ANDp2 were true.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SpecialAbilityChargeNormalized(System.Single,System.Boolean)">
            <summary>
            
            normalizedValue is from 0.0 - 1.0
            p2 is always 1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SpecialAbilityChargeSmall(System.Boolean,System.Boolean)">
            <summary>
            Every occurrence of p1 ANDp2 were both true.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SpecialAbilityDeactivate">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SpecialAbilityDeactivateFast">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SpecialAbilityDepleteMeter(System.Boolean)">
            <summary>
            p1 was always true.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SpecialAbilityFillMeter(System.Boolean)">
            <summary>
            Also known as _RECHARGE_SPECIAL_ABILITY
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SpecialAbilityLock(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SpecialAbilityReset">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SpecialAbilityUnlock(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.StartFiringAmnesty(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.StartPlayerTeleport(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.StopPlayerTeleport">
            <summary>
            Disables the players teleportation
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.SwitchCrimeType(System.Int32)">
            <summary>
            This was previously named as RESERVE_ENTITY_EXPLODES_ON_HIGH_EXPLOSION_COMBO
            which is obviously incorrect.
            
            Seems to only appear in scripts used in Singleplayer. p1 ranges from 2 - 46.
            
            
            I assume this switches the crime type
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.HasPlayerTeleportFinished">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x2F41A3BAE005E5FA(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x5501B7A5CDB79D37(System.Int32)">
            <summary>
            DISABLE_
            
            p0 seems to be Player or int
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xB885852C39CC265D">
            <summary>
            Old Gen: 0x47D6004E
            
            Disables something. Used only once in R scripts (freemode.ysc).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xAD73CE5A09E42D12">
            <summary>
            This has been found in use in the decompiled files.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x1C186837D0619335(System.Int32)">
            <summary>
            p0 = int (?)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xDD2620B7B9D16FF1(System.Single)">
            <summary>
            2 occurrences in agency_heist3a. p1 was 0.7f then 0.4f.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x5FC472C501CCADB3">
            <summary>
            Appears once in re_dealgonewrong
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xF10B44FD479D69F3(System.Int32)">
            <summary>
            Only 1 occurrence. p1 was 2.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xB9CF1F793A9F1BF1">
            <summary>
            Seem to return bool
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xCB645E85E97EA48B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x1FC200409F10E6F1(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x56105E599CAB0EFA(System.Int32@)">
            <summary>
            GET_PLAYER_
            
            Seems to do something with network (?)
            PLAYER::_56105E599CAB0EFA(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(ped))
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x8BC515BAE4AAF8FF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xBC0753C9CA14B506(System.Int32,System.Boolean)">
            <summary>
            var num3 = PLAYER::GET_PLAYER_PED(l_2171); // proof l_2171 is a player
            
            var num17 = PLAYER::0x9DF75B2A(l_2171, 100, 0); // l_2171
            
            .ysc:
                if (PLAYER::GET_PLAYER_WANTED_LEVEL(l_6EF)  v_4) { // l_6EF is a player
                    PLAYER::SET_PLAYER_WANTED_LEVEL(l_6EF, v_4, 0); // l_6EF
                    PLAYER::SET_PLAYER_WANTED_LEVEL_NOW(l_6EF, 0); // l_6EF
                } else { 
                    PLAYER::_4669B3ED80F24B4E(l_6EF); // l_6EF
                    UI::_BA8D65C1C65702E5(1);
                    a_0 = 1;
                }
            
                    if (l_4B24l_6F2/156/._f8C != PLAYER::_BC0753C9CA14B506(l_6EF, 100, 0)) { // l_6EF
                        l_4B24l_6F2/156/._f8C = PLAYER::_BC0753C9CA14B506(l_6EF, 100, 0); // l_6EF
                    }
            
            Both was taken from fm_mission_controller
            
            GET_PLAYER_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x9EDD76E87D5D51BA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x38D28DA81E4E9BF9">
            <summary>
            Returns true if an unk value is greater than 0.0f
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x65FAEE425DE637B0(System.Int32)">
            <summary>
            IS_PLAYER_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x6E4361FF3E8CD7CA(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x690A61A6D13583F6(System.Int32)">
            <summary>
            p0 seems to be Ped
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x7E07C78925D5FD96(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xDC64D2C53493ED12">
            <summary>
            Has something to do with police.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x0032A6DBA562C518">
            <summary>
            2 matches in 1 script - am_hold_up
            
            Used in multiplayer scripts?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xDA1DF03D5A315F4E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xC2AFFFDABBDC2C5C(System.Int32,System.Int32)">
            <summary>
            This seems to be related to Steam achievements.
            
            p0 and p1 are int (?)
            
            ------
            
            Cant say anything about the Steam version but it is hardcoded to always return false in the retail version.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xDE45D1A1EF45EE61(System.Boolean)">
            <summary>
            No use in scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xC3376F42B1FACCC6">
            <summary>
            - This is called after SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x2382AB11450AE7BA(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xD2B315B6689D537D(System.Boolean)">
            <summary>
            1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xFAC75988A7D078D3(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xB45EFF719D8427A6(System.Single)">
            <summary>
            PLAYER::0xBF6993C7(rPtr((AND_122) + 71)); // Found in decompilation
            
            
            
            In am_hold_up.ysc used once:
            
            l_8d._f47 = GAMEPLAY::GET_RANDOM_FLOAT_IN_RANGE(18.0, 28.0);
            PLAYER::_B45EFF719D8427A6((l_8d._f47));
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x5DC40A8869C22141(System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xCAC57395B151135F(System.Boolean)">
            <summary>
            Found in director_mode, fm_bj_race_controler, fm_deathmatch_controler, fm_impromptu_dm_controler, fm_race_controler, gb_deathmatch.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x55FCC0C390620314(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xD821056B9ACF8052(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xEFD79FA81DFBA9CB(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xC388A0F065F5BC34(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xEE4EBDD2593BA844(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x6BC97F4F4BB3C04B(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xFF300C7649724A0B(System.Boolean)">
            <summary>
            gets byte at offset 0x862 in the specified players data (ped data + 0xbd0) and stores the bool p1 in it.
            lwz       r3, 0xBD0(r3) ;r3 is player data
            lbz       r4, 0x862(r3) ;r4 is now the byte
            insrwi    r4, r31, 1,28 ;stores p1 as a bit in place 28 idk
            stb       r4, 0x862(r3) ; puts the newly modified one back in
            
            SET_PLAYER_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x8D768602ADEF2245(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x2F7CEB6520288061(System.Boolean)">
            <summary>
            Used with radios:
            
            void sub_cf383(auto _a0) {
                if ((a_0)==1) {
                    if (GAMEPLAY::IS_BIT_SET((g_240005._f1), 3)) {
                        PLAYER::_2F7CEB6520288061(0);
                        AUDIO::SET_AUDIO_FLAG(AllowRadioDuringSwitch, 0);
                        AUDIO::SET_MOBILE_PHONE_RADIO_STATE(0);
                        AUDIO::SET_AUDIO_FLAG(MobileRadioInGame, 0);
                    }
                    sub_cf3f6(1);
                } else { 
                    if (GAMEPLAY::IS_BIT_SET((g_240005._f1), 3)) {
                        PLAYER::_2F7CEB6520288061(1);
                        AUDIO::SET_AUDIO_FLAG(AllowRadioDuringSwitch, 1);
                        AUDIO::SET_MOBILE_PHONE_RADIO_STATE(1);
                        AUDIO::SET_AUDIO_FLAG(MobileRadioInGame, 1);
                    }
                    sub_cf3f6(0);
                }
            }
            
            SET_PLAYER_S
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x5702B917B99DB1CD(System.Int32)">
            <summary>
            Jenkins hash: 0x772DA539
            
            p0 looks like Player or int (found in am_pi_menu)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xA0D3E4F7AAFB7E78(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xBCFDE9EDE4CF27DC(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x31E90B8873A4CD3B(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xB214D570EAD7F81A(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x821FDC827D6F4090(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xC9A763D8FE87436A">
            <summary>
            Seems to be called before SPECIAL_ABILITY_DEACTIVATE. Needs more research.
            
            SPECIAL_ABILITY_CHARGE_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x17F7471EACA78290(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x4669B3ED80F24B4E">
            <summary>
            This has been found in use in the decompiled files.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0x36F1B38855F2A8DF">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xFFEE8FA29AB9A18E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Player.Unknown._0xBC9490CA15AEA8FB">
            <summary>
            Seems to only appear in scripts used in Singleplayer.
            
            Always used like this in scripts
            PLAYER::_BC9490CA15AEA8FB(PLAYER::PLAYER_ID());
            </summary>				
        </member>
        <member name="T:RAGE.Game.Recording">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Recording.StopAndDiscardClip">
            <summary>
            Stops recording and discards the recorded clip.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Recording.IsRecording">
            <summary>
            Checks if youre recording, returns TRUE when you start recording (F1) or turn on action replay (F2)
            
            mov al, cs:g_bIsGameplay // byte_141DD0CD0 in b944
            retn
            </summary>				
        </member>
        <member name="M:RAGE.Game.Recording.Start(System.Int32)">
            <summary>
            Starts recording a replay.
            If mode is 0, turns on action replay.
            If mode is 1, starts recording.
            If already recording a replay, does nothing.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Recording.StopAndSaveClip">
            <summary>
            Stops recording and saves the recorded clip.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Recording.Unknown._0x4282E08174868BE3">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Recording.Unknown._0xDF4B952F7D381B95">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Recording.Unknown._0x33D47E85B476ABCD(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Recording.Unknown._0x13B350B8AD0EEE10">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Recording.Unknown._0xAF66DCEE6609B148">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Recording.Unknown._0xEB2D525B57F42B40">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Recording.Unknown._0x293220DA1B46CEBC(System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Recording.Unknown._0xF854439EFBB3B583">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Recording.Unknown._0x48621C9FCA3EBD28(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Recording.Unknown._0x81CBAE94390F9F89">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Recording.Unknown._0x644546EC5287471B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Recording.Unknown._0x208784099002BC30(System.String,System.Int32)">
            <summary>
            -This function appears to be deprecated/ unused. Tracing the call internally leads to a _nullsub -
            
            first one seems to be a string of a mission name, second one seems to be a bool/toggle
            
            p1 was always 0.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Recording.Unknown._0x66972397E0757E7A(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Rendering">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Rendering.ActivateRockstarEditor">
            <summary>
            Show Rockstar Editor Menu
            
            by Im Not MentaL
            
            ----------
            
            new_editor menu
            </summary>				
        </member>
        <member name="M:RAGE.Game.Rendering.ResetEditorValues">
            <summary>
            Sets (almost, not sure) all Rockstar Editor values (bIsRecording etc) to 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Rendering.IsInteriorRenderingDisabled">
            <summary>
            Returns a bool if interior rendering is disabled, if yes, all normal rendered interiors are invisible
            </summary>				
        </member>
        <member name="M:RAGE.Game.Rendering.Unknown._0xE058175F8EAFE79A(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Rendering.Unknown._0x5AD3932DAEB1E5D3">
            <summary>
            Disables some other rendering (internal)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Rendering.Unknown._0x7E2BD3EF6C205F09(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Script">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Script.DoesScriptExist(System.String)">
            <summary>
            For a full list, see here: pastebin.com/yLNWicUi
            </summary>				
        </member>
        <member name="M:RAGE.Game.Script.DoesScriptWithNameHashExist(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.GetEventAtIndex(System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.GetEventData(System.Boolean,System.Int32,System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.GetEventExists(System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.GetHashOfThisScriptName">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.GetIdOfThisThread">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.GetNameOfThread(System.Int32)">
            <summary>
            The reversed code looks like this (Sasuke78200)
            
            //
            char g_szScriptName64;
            
            const char _0xBE7ACD89(int a_iThreadID)
            {
              scrThread l_pThread;
             
              // Get the script thread
              l_pThread = GetThreadByID(a_iThreadID); 
              
              if(l_pThread == 0 OR l_pThread-m_iThreadState == 2)
               {
                 strncpy(g_szScriptName, , 64);
                }
             else
              {
                 strncpy(g_szScriptName, l_pThread-m_szScriptName, 64);
                }   
              
              return g_szScriptName;
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Script.GetNoLoadingScreen">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.GetNumberOfEvents(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.GetNumberOfInstancesOfScriptWithNameHash(System.UInt32)">
            <summary>
            Gets the number of instances of the specified script is currently running.
            
            Actually returns numInstances - 1.
            if (scriptPtr)
                v3 = GetNumberOfInstancesOfScript(scriptPtr) - 1;
            return v3;
            </summary>				
        </member>
        <member name="M:RAGE.Game.Script.GetThisScriptName">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.HasScriptLoaded(System.String)">
            <summary>
            Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
            
            For a full list, see here: pastebin.com/yLNWicUi
            </summary>				
        </member>
        <member name="M:RAGE.Game.Script.HasScriptWithNameHashLoaded(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.IsThreadActive(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.RequestScript(System.String)">
            <summary>
            For a full list, see here: pastebin.com/yLNWicUi
            </summary>				
        </member>
        <member name="M:RAGE.Game.Script.RequestScriptWithNameHash(System.UInt32)">
            <summary>
            formerly _REQUEST_STREAMED_SCRIPT
            </summary>				
        </member>
        <member name="M:RAGE.Game.Script.GetIdOfNextThreadInEnumeration">
            <summary>
            MulleDK19: Gets the ID of the next active thread.
            First call _BEGIN_ENUMERATE_THREADS (0xDADFADA5A20143A8).
            Any subsequent call to this function will then return the ID of the next active thread.
            
            If the function returns 0, the end of the enumeration has been reached.
            
            -----------------------------------------------------------------------
            Some other guy: Heres an example:
            
               std::vectorint vecCurrentThreads;
             void update_current_threads_list()
                {
                 vecCurrentThreads.clear();
                    
                  _BEGIN_ENUMERATING_THREADS();
                 int id = _GET_ID_OF_NEXT_THREAD_IN_ENUMERATION();
                 
                  while (id != 0)
                   {
                     id = _GET_ID_OF_NEXT_THREAD_IN_ENUMERATION();
                     vecCurrentThreads.push_back(id);
                  }
             }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Script.BeginEnumeratingThreads">
            <summary>
            MulleDK19: Starts a new enumeration of the current threads.
            Call this first, then _GET_ID_OF_NEXT_THREAD_IN_ENUMERATION (0x30B4FA1C82DD4B9F)
            
            -----------------------------------------------------------------------
            Some other guy: See _GET_ID_OF_NEXT_THREAD_IN_ENUMERATION (0x30B4FA1C82DD4B9F) for an example
            </summary>				
        </member>
        <member name="M:RAGE.Game.Script.SetNoLoadingScreen(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.SetScriptAsNoLongerNeeded(System.String)">
            <summary>
            For a full list, see here: pastebin.com/yLNWicUi
            </summary>				
        </member>
        <member name="M:RAGE.Game.Script.SetScriptWithNameHashAsNoLongerNeeded(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.ShutdownLoadingScreen">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.TerminateThisThread">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.TerminateThread(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.TriggerScriptEvent(System.Boolean,System.Int32@,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.Unknown._0x0F6F1EBBC4E1D5E6">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.Unknown._0xDC2BACD920D0A0DD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.Unknown._0x107E5CC7CA942BC1">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.Unknown._0x22E21FBCFC88C149">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.Unknown._0x829CD22E043A2577">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.Unknown._0x836B62713E0534CA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.Unknown._0x760910B49D2B98EA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.Unknown._0x9D5A25BADB742ACD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.Unknown._0x75B18E49607874C7">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.Unknown._0xB1577667C3708F9B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Script.Unknown._0xA40CC53DF8E50837(System.Boolean,System.Int32@,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Shapetest">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Shapetest.GetShapeTestResult(System.Int32,System.Int32@,RAGE.Vector3,RAGE.Vector3,System.Int32@)">
            <summary>
            Parameters:
            rayHandle - Ray Handle from a casted ray, as returned by CAST_RAY_POINT_TO_POINT
            hit - Where to store whether or not it hit anything. False is when the ray reached its destination.
            endCoords - Where to store the world-coords of where the ray was stopped (by hitting its desired max range or by colliding with an entity/the map)
            surfaceNormal - Where to store the surface-normal coords (NOT relative to the game world) of where the entity was hit by the ray
            entityHit - Where to store the handle of the entity hit by the ray
            
            Returns:
            Result? Some type of enum.
            
            NOTE: To get the offset-coords of where the ray hit relative to the entity that it hit (which is NOT the same as surfaceNormal), you can use these two natives:
            Vector3 offset = ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(entityHit, endCoords.x, endCoords.y, endCoords.z);
            Vector3 entitySpotCoords = ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(entityHit, offset.x, offset.y, offset.z);
            
            Use ENTITY::GET_ENTITY_TYPE(entityHit) to quickly distinguish what type of entity you hit (ped/vehicle/object - 1/2/3)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Shapetest.GetShapeTestResultEx(System.Int32,System.Int32@,RAGE.Vector3,RAGE.Vector3,System.Int32@,System.Int32@)">
            <summary>
            behaves exactly the same way as GET_SHAPE_TEST_RESULT except it has one extra parameter (_materialHash).
            
            Quick disassembly seems to indicate that the unknown is a hash. EDIT: Seems to be the hash of the hit material or surface type.
            
            found a materialFX.dat list of them but not sure if it has to do with this native yet.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Shapetest.StartShapeTestRay(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Not sure how or why this differs from 0x7EE9F5D83DD4F90E, but it does.
            
            This function casts a ray from Point1 to Point2 and returns its ray handle.  A simple ray cast will shoot a line from point A to point B, and return whether or not the ray reached its destination or if it hit anything and if it did hit anything, will return the handle of what it hit (entity handle) and coordinates of where the ray reached.
            
            You can use _GET_RAYCAST_RESULT to get the result of the raycast
            
            Entity is an entity to ignore, such as the player.
            
            Flags are intersection bit flags.  They tell the ray what to care about and what not to care about when casting. Passing -1 will intersect with everything, presumably.
            
            Flags:
            1: Intersect with map
            2: Intersect with vehicles (used to be mission entities?) (includes train)
            4: Intersect with peds? (same as 8)
            8: Intersect with peds? (same as 4)
            16: Intersect with objects
            32: Unknown
            64: Unknown
            128: Unknown
            256: Intersect with vegetation (plants, coral. trees not included)
            
            NOTE: Raycasts that intersect with mission_entites (flag = 2) has limited range and will not register for far away entites. The range seems to be about 30 metres. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Shapetest.StartShapeTestBound(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Shapetest.StartShapeTestBoundingBox(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Shapetest.StartShapeTestBox(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Shapetest.StartShapeTestCapsule(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Raycast from point to point, where the ray has a radius. 
            
            flags:
            vehicles=10
            peds =12
            
            Iterating through flags yields many ped / vehicle/ object combinations
            
            p9 = 7, but no idea what it does
            
            Entity is an entity to ignore
            </summary>				
        </member>
        <member name="M:RAGE.Game.Shapetest.StartShapeTestLosProbe(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a ray (?) going from x1, y1, z1 to x2, y2, z2.
            entity = 0 most of the time.
            p8 = 7 most of the time.
            
            Result of this function is passed to WORLDPROBE::_GET_RAYCAST_RESULT as a first argument.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Shapetest.Unknown._0x2B3334BCA57CD799(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Shapetest.Unknown._0xFF6BE494C7987F34(RAGE.Vector3,RAGE.Vector3,System.Int32,System.Int32,System.Int32)">
            <summary>
            Actual name starts with START_SHAPE_TEST_??? and it returns a ShapeTest handle that can be used with GET_SHAPE_TEST_RESULT.
            
            In its only usage in game scripts its called with flag set to 511, entity to player_ped_id and flag2 set to 7
            </summary>				
        </member>
        <member name="M:RAGE.Game.Shapetest.Unknown._0xE6AC6C45FBE83004(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Performs the same type of trace as START_SHAPE_TEST_CAPSULE, but with some different hardcoded parameters.
            </summary>				
        </member>
        <member name="T:RAGE.Game.Socialclub">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Socialclub.ScGetNickname">
            <summary>
            Returns the nickname of the logged-in Rockstar Social Club account.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.ScEmailMessageClearRecipList">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.ScEmailMessagePushGamerToRecipList(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.ScInboxGetEmails(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.IsScInboxValid(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.ScInboxMessageInit(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.GetTotalScInboxIds">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.ScInboxMessagePush(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.ScInboxMessageGetDataBool(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.ScInboxMessageGetDataInt(System.Int32,System.String,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.ScInboxMessageGetDataString(System.Int32,System.String,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.ScInboxMessageGetString(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.ScInboxMessageGetUgcdata(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.ScInboxMessagePop(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.ScStartCheckStringTask(System.String,System.Int32@)">
            <summary>
            Starts a task to check an entered string for profanity on the ROS/Social Club services.
            
            See also: 1753344C770358AE, 82E4A58BABC15AE7.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.ScGetCheckStringStatus(System.Int32)">
            <summary>
            Returns the status of a _SC_START_CHECK_STRING_TASK task.
            
            Possible return values:
            
            0: not a profane string
            1: a profane string
            3: server error occurred
            -1: internal error occurred
            </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.ScHasCheckStringTaskCompleted(System.Int32)">
            <summary>
            Returns whether or not a task started with _SC_START_CHECK_STRING_TASK has completed.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x225798743970412B(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xBFA0A56A817C6C7D(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xC2C97EA97711D1AE">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x19853B5B17D77BCA(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x33DF47CC0642061B">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x4ED9C8D6DA297639">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x4A7D6E727F941747(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x50A8A36201DBF83E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xC5A35C73B68F3C49">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x2570E26BE63964E3">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x710BCDA8071EDED1">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x8CC469AB4D349B7C(System.Int32,System.String,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xE75A4A2E5E316D86">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x9DE5D2F723575ED0">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x699E4A5C8C893A18(System.Int32,System.String,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x1D12A56FC95BE92E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xFF8F3A92B75ED67A">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xA468E0BE12B12C70">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x450819D8CF90C416">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x44ACA259D67651DB(System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x4737980E8A283806(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x7DB18CA8CAD5B098">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x16DA8172459434AA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x116FB94DC4B79F17(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x07DBD622D9533857(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x2D874D4AE612A65F">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x8416FE4E4629D7D7(System.String)">
            <summary>
            sfink: from scripts:
            func_720(socialclub::_0x8416FE4E4629D7D7(bIgnoreCheaterOverride));
            func_719(socialclub::_0x8416FE4E4629D7D7(bIgnoreBadSportOverride));
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xA770C8EEC6FB2AC5">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xC85A7127E7AD02AA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x7FFCBFEE44ECFABF">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xDF649C4E9AFDD788">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x418DC16FAE452C1C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xBC1CC91205EC8D6E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x87E0052F08BD64E6(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xDA024BDBD600F44A(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x6AFD2CD753FEEF83(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xA68D3D229F4F3B06(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x1989C6E6F67E76A8(System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xF6BAAAF762E1BF40(System.String,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x07C61676E5BB52CD(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x8147FFF6A718E1AD(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x9237E334F6E43156(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xF22CA0FD74B80E7A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x700569DBA175A77C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xD302E99EDF0449CF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x5C4EBFFA98BDB41C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x1D4446A62D35B0D0(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x2E89990DDFF670C3(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x0F73393BAC7E6730(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xD0EE05FE193646EA(System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xC4C4575F62534A24">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x1F1E9682483697C7(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x287F1F75D2803595(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x487912FD248EFDDF(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xEB2BF817463DFA28(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x85535ACF97FC0969(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x930DE22F07B1CCE3(System.Int32)">
            <summary>
            Unknown.
            
            Seems to return either 0, 1, or -1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x675721C9F644D161">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x92DA6E70EF249BD1(System.String,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x3001BEF2FECA3680">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0x6BFB12CE158E3DD4(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xD8122C407663B995">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Socialclub.Unknown._0xFE4C1D0D3B9CC17E(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Stats">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Stats.GetPstatBoolHash(System.Int32,System.Boolean,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.GetPstatIntHash(System.Int32,System.Boolean,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.GetNgstatBoolHash(System.Int32,System.Boolean,System.Boolean,System.Int32,System.String)">
            <summary>
            Needs more research. Gets the stat name of a masked bool?
            
            p4 - Usually _NGPSTAT_BOOL or _NGTATPSTAT_BOOL. There may be more that I missed.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.GetNgstatIntHash(System.Int32,System.Boolean,System.Boolean,System.Int32,System.String)">
            <summary>
            Needs more research. Gets the stat name of a masked int?
            
            p4 - Usually one of the following (there may be more that I missed):
            ----- _APAPSTAT_INT
            ----- _LRPSTAT_INT
            ----- _NGPSTAT_INT
            ----- _MP_APAPSTAT_INT
            ----- _MP_LRPSTAT_INT
            ----- _MP_NGPSTAT_INT
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.GetTupstatBoolHash(System.Int32,System.Boolean,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.GetTupstatIntHash(System.Int32,System.Boolean,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Leaderboards2ReadByHandle(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Leaderboards2ReadByRadius(System.Int32@,System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Leaderboards2ReadByRank(System.Int32@,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Leaderboards2ReadByRow(System.Int32@,System.Int32@,System.Int32,System.Int32@,System.Int32,System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Leaderboards2ReadByScoreFloat(System.Int32@,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Leaderboards2ReadByScoreInt(System.Int32@,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Leaderboards2ReadFriendsByRow(System.Int32@,System.Int32@,System.Int32,System.Boolean,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Leaderboards2WriteData(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.LeaderboardsCacheDataRow(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.LeaderboardsClearCacheData">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.LeaderboardsGetCacheDataRow(System.Int32,System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.LeaderboardsGetCacheExists(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.LeaderboardsGetCacheTime(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.LeaderboardsGetColumnId(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.LeaderboardsGetColumnType(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.LeaderboardsGetNumberOfColumns(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.LeaderboardsReadClear(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.LeaderboardsReadClearAll">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.LeaderboardsReadPending(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.LeaderboardsReadSuccessful(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.PlaystatsAwardXp(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.PlaystatsCheatApplied(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.PlaystatsClothChange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.PlaystatsAmbientMissionCrateCreated(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.PlaystatsFriendActivity(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.PlaystatsMatchStarted(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.PlaystatsMissionCheckpoint(System.Int32@,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.PlaystatsMissionOver(System.Int32@,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.PlaystatsMissionStarted(System.Int32@,System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.PlaystatsNpcInvite(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.PlaystatsPropChange(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.PlaystatsRaceCheckpoint(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.PlaystatsRankUp(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.PlaystatsShopItem(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.PlaystatsWebsiteVisited(System.UInt32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatClearSlotForReload(System.Int32)">
            <summary>
            Please change to void!
            ---------------------------------
            
            Example:
            
            for (v_2 = 0; v_2 = 4; v_2 += 1) {
                STATS::STAT_CLEAR_SLOT_FOR_RELOAD(v_2);
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatDeleteSlot(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatGetBool(System.UInt32,System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatGetBoolMasked(System.UInt32,System.Int32,System.Int32)">
            <summary>
            p2 - Default value? Seems to be -1 most of the time.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatGetDate(System.UInt32,System.Int32@,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatGetFloat(System.UInt32,System.Single@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatGetInt(System.UInt32,System.Int32@,System.Int32)">
            <summary>
            p2 appears to always be -1
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatGetLicensePlate(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatGetMaskedInt(System.Int32,System.Int32@,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatGetNumberOfDays(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatGetNumberOfHours(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatGetNumberOfMinutes(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatGetNumberOfSeconds(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatGetPos(System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatGetString(System.UInt32,System.Int32)">
            <summary>
            p1 is always -1 in the script files
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatGetUserId(System.Int32)">
            <summary>
            Needs more research. Seems to return STAT_UNKNOWN if no such user id exists.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatIncrement(System.UInt32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatLoad(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatLoadPending(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSave(System.Int32,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSavePending">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSavePendingOrRequested">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSetBool(System.UInt32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSetBoolMasked(System.UInt32,System.Boolean,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSetCurrentPosixTime(System.UInt32,System.Boolean)">
            <summary>
            p1 always true.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSetDate(System.UInt32,System.Int32@,System.Int32,System.Boolean)">
            <summary>
            value is a structure to a structure, numFields is how many fields there are in said structure (usually 7).
            
            The structure looks like this:
            
            int year
            int month
            int day
            int hour
            int minute
            int second
            int millisecond
            
            The decompiled scripts use TIME::GET_POSIX_TIME to fill this structure.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSetFloat(System.UInt32,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSetGxtLabel(System.UInt32,System.String,System.Boolean)">
            <summary>
            The following values have been found in the decompiled scripts:
            RC_ABI1
            RC_ABI2
            RC_BA1
            RC_BA2
            RC_BA3
            RC_BA3A
            RC_BA3C
            RC_BA4
            RC_DRE1
            RC_EPS1
            RC_EPS2
            RC_EPS3
            RC_EPS4
            RC_EPS5
            RC_EPS6
            RC_EPS7
            RC_EPS8
            RC_EXT1
            RC_EXT2
            RC_EXT3
            RC_EXT4
            RC_FAN1
            RC_FAN2
            RC_FAN3
            RC_HAO1
            RC_HUN1
            RC_HUN2
            RC_JOS1
            RC_JOS2
            RC_JOS3
            RC_JOS4
            RC_MAU1
            RC_MIN1
            RC_MIN2
            RC_MIN3
            RC_MRS1
            RC_MRS2
            RC_NI1
            RC_NI1A
            RC_NI1B
            RC_NI1C
            RC_NI1D
            RC_NI2
            RC_NI3
            RC_OME1
            RC_OME2
            RC_PA1
            RC_PA2
            RC_PA3
            RC_PA3A
            RC_PA3B
            RC_PA4
            RC_RAM1
            RC_RAM2
            RC_RAM3
            RC_RAM4
            RC_RAM5
            RC_SAS1
            RC_TON1
            RC_TON2
            RC_TON3
            RC_TON4
            RC_TON5
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSetInt(System.UInt32,System.Int32,System.Boolean)">
            <summary>
            Add Cash example:
            for (int i = 0; i  3; i++)
            {
            char statNameFull32;
            sprintf_s(statNameFull, SP%d_TOTAL_CASH, i);
            Hash hash = GAMEPLAY::GET_HASH_KEY(statNameFull);
            int val;
            STATS::STAT_GET_INT(hash, ANDal, -1);
            val += 1000000;
            STATS::STAT_SET_INT(hash, val, 1);
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSetLicensePlate(System.UInt32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSetMaskedInt(System.UInt32,System.Int32,System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSetPos(System.UInt32,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSetProfileSetting(System.Int32,System.Int32)">
            <summary>
            Does not take effect immediately, unfortunately.
            
            profileSetting seems to only be 936, 937 and 938 in scripts
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSetString(System.UInt32,System.String,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSetUserId(System.UInt32,System.String,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.StatSlotIsLoaded(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.PlaystatsOddjobDone(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xB3DA2606774A8E2D">
            <summary>
            This function is hard-coded to always return 1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x44919CC079BB60BF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xD1C9B92BDD3F151D(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xA3C53804BDB68ED2(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x6BCCF9948492FD85(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x6F361B8889A792A3">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x6BC0ACD0673ACEBE(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x5EAD2BF6484852E4">
            <summary>
            example from completionpercentage_controller.ysc.c4
            
            if (STATS::_5EAD2BF6484852E4()) {
                        GAMEPLAY::SET_BIT(g_17b95._f20df._ff10, 15);
                        STATS::_11FF1C80276097ED(0xe9ec4dd1, 200, 0);
                    }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x792271AB35C356A4(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xF1AE5DCDBFCA2721(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            LEADERBOARDS2_READ_BY_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x71B008056E5692D6">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x38491439B6BA7F7D(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x34770B9CE0E03B91(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x88578F6EC36B4A3A(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xA0F93D5465B3094D(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xC38DC1E90D22547C(System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xC980E62E33DF1D5C(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x8EC74CEB042E7CFF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x58A651CD201D89AD(System.Int32)">
            <summary>
            LEADERBOARDS_GET_CACHE_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xA31FD15197B192BD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x0BCA1D2C47B0D269(System.Int32,System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x2E65248609523599(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xCEA553E35C2246E1(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xF4D8E7AC2A27758C(System.Int32)">
            <summary>
            Needs more research. Possibly used to calculate the mask when calling STAT_SET_BOOL_MASKED?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x94F12ABF9C79E339(System.Int32)">
            <summary>
            Needs more research. Possibly used to calculate the mask when calling STAT_SET_MASKED_INT?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xD558BEC0BBA7E8D2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x79AB33F0FBFAC40C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xA071E0ED98F91286(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x46326E13DA4E0546(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x47B32F5611E6E483(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x5009DFD741329729(System.String,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x516FC96EB88EEFE5(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x7B18DA61F6BAE9D5(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x53CAE13E9B426993(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xE3261D791EB44ACB(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x930F504203F561C9(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x73001E34F85137F8(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x14EDA9EE27BD1626(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x7D36291161859389(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x06EAF70AE066441E(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xD6781E42755531F7(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xF06A6F41CB445443(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x678F86D8FC040BDB(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xA6F54BB2FFCA35EA(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x8D8ADB562F09A245(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x282B6739644F4347(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x5FF2C33B13A02A11(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x88087EE1F28024AE(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xFCC228E07217FCAC(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xD1A1EE3B4FA8E760(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x28ECB8AC2F607DB2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x0B565B0AAE56A0E8(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xB7257BA2550EA10A(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x1CAE5D2E3F9A07F0(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x6DEE77AFF8C21BD1(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x2605663BD4F23B5D(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x848B66100EE33B05(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x501478855A6074CE(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xBAA2F0490E146BE8(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x6A60E43998228229(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x3DE3AA516FB126A4(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x6551B1F7F6CD46EA(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xEDBF6C9B0D2C65C8(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x0A9C7F36E5D7B683(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x84DFC579C2FC214C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x2CD90358F67D0AA8(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x164C5FF663790845(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x419615486BBF1956(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x1A7CE7CD3E653485(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x8C9D11605E59D955(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xBFAFDB5FAAA5C5AB(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x0EACDF8487D5155A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xDAF80797FC534BEC(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xF4FF020A08BC8863(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x60EEDC12AF66E846(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xCB00196B31C39EB1(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x5DA3A8DE8CB6226F(System.Int32)">
            <summary>
            longest time being ilde?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x7D8BA05688AD64C7(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x2B69F5074C894811(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xF8C54A461C3E11DC(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xF5BB8DAC426A52C0(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xA736CF7FB7C5BFF4(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x14E0B2D1AD1044E0(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xC5BE134EC7BA96A0(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x8989CBD7B4E82534(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x03C2EEBB04B3FB72(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xF534D94DFA2EAD26(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xCC25A4553DFBF9EA(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xBF371CD2B64212FD(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x9572BD4DD6B72122(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x203B381133817079(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x90D0622866E80445(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xADDD1C754E2E2914(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x71862B1D855F32E1(System.Int32@,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x04D90BA8207ADA2D(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x27AA1C973CACFE63(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x121FB4DDDC2D5291(System.Int32,System.Int32,System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xC729991A9065376E(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xD1032E482629049E(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x320C35147D5B5DDD(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xBE509B0A3693DE8B(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x098760C7461724CD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x928DBFB892638EF3">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x8A800DACCC0DA55D">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x0A50D2604E05CB94(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xE95C8A1875A02CA4(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x30A6614C1F7799B8(System.Int32,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x11FF1C80276097ED(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x6483C25849031C4F(System.Int32,System.Int32,System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x7033EEFD9B28088E(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x015B03EE1C43E6EC(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xAA525DFF66BB82F5(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x0D01D20616FC73FB(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xC141B8917E0017EC">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xDAC073C7901F9E15(System.Int32)">
            <summary>
            Set profile setting 866
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x723C1CE13FBFDB67(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x55384438FC55AD8E(System.Int32)">
            <summary>
            Sets profile setting 935
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x38BAAA5DD4C9D19F(System.Int32)">
            <summary>
            Sets profile setting 934
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xF1A1803D3476F215(System.Int32)">
            <summary>
            Sets profile setting 933
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xB475F27C6A994D65">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xF6792800AC95350D(System.Int32)">
            <summary>
            Set profile setting 501
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x3EBEAC6C3F81F6BD(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x96E6D5150DBF1C09(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x9B4BD21D69B1E609">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xA8733668D1047B51(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x7F2C4CDF2E82DF4C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xE496A53BA5F50A56(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x7E6946F68A38B74F(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xBED9F5693F34ED17(System.UInt32,System.Int32,System.Single@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x5A556B229A169402">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xB1D2BB1E1631F5B1">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x629526ABA383BCAA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x98E2BC1CA26287C3">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x567384DFA67029E6">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x6E0A5253375C4584">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xBA9749CC94C1FD85">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x32CAC93C9DE73D32">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x84A810B375E69C0E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x9EC8858184CD253A">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xE8853FBCE7D8D0D6">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xA943FD1722E11EFD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xAFF47709F1D5DCCE">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x55A8BECAF28A4EB7">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x1A8EA222F9C67DBB(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xC0E0D686DDFC6EAE">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xF11F01D98113536A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xCE5AA445ABA8DEE0(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x886913BBEACA68C1(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x0B8B7F74BF061C6D">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xF9F2922717B819EC">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x8B9CDBD6C566C38C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xBE3DB208333D9844">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xECB41AC6AB754401">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xA78B8FA58200DA56(System.Int32)">
            <summary>
            STATS::0xE3247582(0);
            STATS::0xE3247582(1);
            STATS::0xE3247582(2);
            STATS::0xE3247582(3);
            STATS::0xE3247582(4);
            STATS::0xE3247582(5);
            STATS::0xE3247582(6);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x4C89FE2BDEB3F169">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x5BD5F255321C4AAF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xDEAAF77EB3687E97(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xC6E0E2616A7576BB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xC847B43F369AC0B5">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x9A62EC95AE10E011">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xA5C80D8E768A9E66(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x428EAF89E24F6C36(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x26D7399B9587FE89(System.Int32)">
            <summary>
            STATS::0x343B27E2(0);
            STATS::0x343B27E2(1);
            STATS::0x343B27E2(2);
            STATS::0x343B27E2(3);
            STATS::0x343B27E2(4);
            STATS::0x343B27E2(5);
            STATS::0x343B27E2(6);
            STATS::0x343B27E2(7);
            
            Identical in ingamehud ANDmaintransition.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x4FEF53183C3C6414">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x3270F67EED31FBC1(System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xC70DDCE56D0D3A99">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xF434A10BA01C37D0(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x047CBED6F6F8B63C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x5688585E6D563CD8(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0x33D72899E24C3365(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Stats.Unknown._0xA761D4AC6115623D">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Streaming">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Streaming.BeginSrl">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.ClearFocus">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.ClearHdArea">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.DoesAnimDictExist(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.EndSrl">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.GetIdealPlayerSwitchType(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            x1, y1, z1 -- Coords of your ped model
            x2, y2, z2 -- Coords of the ped you want to switch to
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.GetNumberOfStreamingRequests">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.GetPlayerShortSwitchState">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.GetPlayerSwitchState">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.GetPlayerSwitchType">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.HasAnimDictLoaded(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.HasAnimSetLoaded(System.String)">
            <summary>
            Gets whether the specified animation set has finished loading. An animation set provides movement animations for a ped. See SET_PED_MOVEMENT_CLIPSET.
            
            Animation set and clip set are synonymous.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.HasClipSetLoaded(System.String)">
            <summary>
            Alias for HAS_ANIM_SET_LOADED.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.HasCollisionForModelLoaded(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.HasModelLoaded(System.UInt32)">
            <summary>
            Checks if the specified model has loaded into memory.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.HasNamedPtfxAssetLoaded(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.HasPtfxAssetLoaded">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.IsEntityFocus(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.IsIplActive(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.IsModelAPed(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.IsModelAVehicle(System.UInt32)">
            <summary>
            Returns whether the specified model represents a vehicle.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.IsModelInCdimage(System.UInt32)">
            <summary>
            Check if model is in cdimage(rpf)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.IsModelValid(System.UInt32)">
            <summary>
            Returns whether the specified model exists in the game.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.IsNetworkLoadingScene">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.IsNewLoadSceneActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.IsNewLoadSceneLoaded">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.IsPlayerSwitchInProgress">
            <summary>
            Returns true if the player is currently switching, false otherwise.
            (When the camera is in the sky moving from Trevor to Franklin for example)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.IsSrlLoaded">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.LoadAllObjectsNow">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.LoadScene(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.NetworkUpdateLoadScene">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.NewLoadSceneStart(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.NewLoadSceneStartSphere(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            if (!sub_8f12(START LOAD SCENE SAFE)) {
                if (CUTSCENE::GET_CUTSCENE_TIME()  4178) {
                    STREAMING::_ACCFB4ACF53551B0(1973.845458984375, 3818.447265625, 32.43629837036133, 15.0, 2);
                    sub_8e9e(START LOAD SCENE SAFE, 1);
                }
            }
            
            (Previously known as STREAMING::_NEW_LOAD_SCENE_START_SAFE)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.NewLoadSceneStop">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.PrefetchSrl(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RemoveAnimDict(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RemoveAnimSet(System.String)">
            <summary>
            Unloads the specified animation set. An animation set provides movement animations for a ped. See SET_PED_MOVEMENT_CLIPSET.
            
            Animation set and clip set are synonymous.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RemoveClipSet(System.String)">
            <summary>
            Alias for REMOVE_ANIM_SET.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RemoveIpl(System.String)">
            <summary>
            Removes an IPL from the map.
            IPL List: pastebin.com/pwkh0uRP 
            
            Example:
            C#:
            Function.Call(Hash.REMOVE_IPL, trevorstrailertidy);
            
            C++:
            STREAMING::REMOVE_IPL(trevorstrailertidy);
            
            iplName = Name of IPL you want to remove.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RemoveNamedPtfxAsset(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RemovePtfxAsset">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RequestCollisionAtCoord(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RequestAdditionalCollisionAtCoord(System.Single,System.Single,System.Single)">
            <summary>
            MulleDK19: Alias of REQUEST_COLLISION_AT_COORD.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RequestAnimDict(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RequestAnimSet(System.String)">
            <summary>
            Starts loading the specified animation set. An animation set provides movement animations for a ped. See SET_PED_MOVEMENT_CLIPSET.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RequestClipSet(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RequestIpl(System.String)">
            <summary>
            Exemple: REQUEST_IPL(TrevorsTrailerTrash);
            
            IPL + Coords: http://pastebin.com/FyV5mMma
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RequestMenuPedModel(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RequestModel(System.UInt32)">
            <summary>
            Request a model to be loaded into memory
            
            Looking it the disassembly, it seems like it actually returns the model if its already loaded.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RequestCollisionForModel(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RequestInteriorRoomByName(System.Int32,System.String)">
            <summary>
            REQUEST_
            
            Something to do with interiors that have been loaded.
            
            STREAMING::_8A7A40100EDFEC58(l_13BC, V_FIB01_cur_elev);
            STREAMING::_8A7A40100EDFEC58(l_13BC, limbo);
            STREAMING::_8A7A40100EDFEC58(l_13BB, V_Office_gnd_lifts);
            STREAMING::_8A7A40100EDFEC58(l_13BB, limbo);
            STREAMING::_8A7A40100EDFEC58(l_13BC, v_fib01_jan_elev);
            STREAMING::_8A7A40100EDFEC58(l_13BC, limbo);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RequestNamedPtfxAsset(System.String)">
            <summary>
             From the b678d decompiled scripts:
            
             STREAMING::REQUEST_NAMED_PTFX_ASSET(core_snow);
             STREAMING::REQUEST_NAMED_PTFX_ASSET(fm_mission_controler);
             STREAMING::REQUEST_NAMED_PTFX_ASSET(proj_xmas_firework);
             STREAMING::REQUEST_NAMED_PTFX_ASSET(scr_apartment_mp);
             STREAMING::REQUEST_NAMED_PTFX_ASSET(scr_biolab_heist);
             STREAMING::REQUEST_NAMED_PTFX_ASSET(scr_indep_fireworks);
             STREAMING::REQUEST_NAMED_PTFX_ASSET(scr_indep_parachute);
             STREAMING::REQUEST_NAMED_PTFX_ASSET(scr_indep_wheelsmoke);
             STREAMING::REQUEST_NAMED_PTFX_ASSET(scr_mp_cig_plane);
             STREAMING::REQUEST_NAMED_PTFX_ASSET(scr_mp_creator);
             STREAMING::REQUEST_NAMED_PTFX_ASSET(scr_mp_tankbattle);
             STREAMING::REQUEST_NAMED_PTFX_ASSET(scr_ornate_heist);
             STREAMING::REQUEST_NAMED_PTFX_ASSET(scr_prison_break_heist_station);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.RequestPtfxAsset">
            <summary>
            maps script name (thread + 0xD0) by lookup via scriptfx.dat - does nothing when script name is empty
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.SetFocusEntity(System.Int32)">
            <summary>
            It seems to make the entitys coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.SetFocusArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Override the area where the camera will render the terrain.
            p3, p4 and p5 are usually set to 0.0
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.SetGamePausesForStreaming(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.SetHdArea(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.SetInteriorActive(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.SetModelAsNoLongerNeeded(System.UInt32)">
            <summary>
            Unloads model from memory
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.SetPedPopulationBudget(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.SetPlayerSwitchOutro(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.SetReducePedModelBudget(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.SetReduceVehicleModelBudget(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.SetSrlTime(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.SetStreaming(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.SetVehiclePopulationBudget(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.ShutdownCreatorBudget">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.StartPlayerSwitch(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            // this enum comes directly from R so dont edit this
            enum ePlayerSwitchTypes
            {
              SWITCH_TYPE_AUTO,
             SWITCH_TYPE_LONG,
             SWITCH_TYPE_MEDIUM,
               SWITCH_TYPE_SHORT
            };
            
            Use GET_IDEAL_PLAYER_SWITCH_TYPE for the best switch type.
            
            ----------------------------------------------------
            
            Examples from the decompiled scripts:
            
            STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 0, 3);
            STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 2050, 3);
            STREAMING::START_PLAYER_SWITCH(PLAYER::PLAYER_PED_ID(), l_832._f3, 1024, 3);
            STREAMING::START_PLAYER_SWITCH(g_141F27, PLAYER::PLAYER_PED_ID(), 513, v_14);
            
            Note: DO NOT, use SWITCH_TYPE_LONG with flag 513. It leaves you stuck in the clouds. Youll have to call STOP_PLAYER_SWITCH() to return to your ped.
            
            Flag 8 w/ SWITCH_TYPE_LONG will zoom out 3 steps, then zoom in 2/3 steps and stop on the 3rd and just hang there.
            Flag 8 w/ SWITCH_TYPE_MEDIUM will zoom out 1 step, and just hang there.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.StopPlayerSwitch">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.FormatFocusHeading(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.SwitchOutPlayer(System.Int32,System.Int32,System.Int32)">
            <summary>
            fucks up on mount chilliad
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.SetDitchPoliceModels(System.Boolean)">
            <summary>
            This is a NOP function. It does nothing at all.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x0BC3144DEB678666(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x8E2A065ABDAE6994">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0xAD5FDF34B81BFE79">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x74DE2E8739086740">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x43D1680C6D19A8E9">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0xBD605B8E0E18B3BB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0xD4793DFF3AF2ABCD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x03F1A106BDA7DD3E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x0C15B0E443B2349D">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x5B48A06DD0E792A5">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x08C2D6C52A3104BB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x78C0D93253149435">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x3D3D8B3BE5A83D35">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0xB5A4DB34FE89B88A">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x63EB2B972A218CAC">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0xF4A0DADB70F57FA6">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x5068F488DDB54DD8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0xFB199266061F820A">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x95A7DABDDBB78AE7(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x71E7B2E657449AAD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x07C313F94746702C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0xBC9823AB80A3DCAC">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0xDFA80CB25D0A19B3">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x5B74EA8CFD5E3E7E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x933BBEEB8C61B5F4">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0xA76359FC80B2438E(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0xBED8CA5FF5E04113(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0xF086AD9354FAC3A3(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0xAF12610C644A35C9(System.String,System.Boolean)">
            <summary>
            Possible p0 values:
            
            prologue
            Prologue_Main
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x5F2013F8BC24EE69(System.Int32)">
            <summary>
            SET_PLAYERS_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x0FDE9DBFC0A6BC65(System.Int32@)">
            <summary>
            SET_PLAYERS_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x40AEFD1A244741F2(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x0811381EF5062FEC(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x1E9057A74FD73E23">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0xF8155A7F03DDFC8E(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x20C6C7E4EB082A7F(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0xEF39EE20C537E98C(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0xBEB2D9A1D9A8F55A(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x1F3F018BC3AFA77C(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x0AD9710CEE2F590F(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x1EE7D8DF4425F053(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x7D41E9D2D17C5B2D(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x472397322E92A856">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0xD8295AF639FD9CB8(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Streaming.Unknown._0x4E52E752C76E7E7A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Task">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Task.AddScriptToRandomPed(System.String,System.UInt32,System.Single,System.Single)">
            <summary>
            BRAIN::ADD_SCRIPT_TO_RANDOM_PED(pb_prostitute, ${s_f_y_hooker_01}, 100, 0);
            
            - Nacorpio
            
            -----
            
            Hardcoded to not work in Multiplayer.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Task.DisableScriptBrainSet(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Task.EnableScriptBrainSet(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Task.IsObjectWithinBrainActivationRange(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Task.IsWorldPointWithinBrainActivationRange">
            <summary>
            Gets whether the world point the calling script is registered to is within desired range of the player.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Task.RegisterObjectScriptBrain(System.String,System.UInt32,System.Int32,System.Single,System.Int32,System.Int32)">
            <summary>
            Registers a script for any object with a specific model hash.
            
            BRAIN::REGISTER_OBJECT_SCRIPT_BRAIN(ob_telescope, ${prop_telescope_01}, 100, 4.0, -1, 9);
            
            - Nacorpio
            </summary>				
        </member>
        <member name="M:RAGE.Game.Task.RegisterWorldPointScriptBrain(System.Int32@,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Task.Unknown._0x4D953DF78EBF8158">
            <summary>
            Something like flush_all_scripts 
            
            Most of time comes after NETWORK_END_TUTORIAL_SESSION() or before TERMINATE_THIS_THREAD()
            </summary>				
        </member>
        <member name="M:RAGE.Game.Task.Unknown._0x0B40ED49D7D6FF84">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Task.Unknown._0x6E91B04E08773030(System.String)">
            <summary>
            Looks like a cousin of above function _6D6840CEE8845831 as it was found among them. Must be similar
            
            Here are possible values of argument - 
            
            ob_tv
            launcher_Darts
            </summary>				
        </member>
        <member name="M:RAGE.Game.Task.Unknown._0x6D6840CEE8845831(System.String)">
            <summary>
            Possible values:
            
            act_cinema
            am_mp_carwash_launch
            am_mp_carwash_control
            am_mp_property_ext
            chop
            fairgroundHub
            launcher_BasejumpHeli
            launcher_BasejumpPack
            launcher_CarWash
            launcher_golf
            launcher_Hunting_Ambient
            launcher_MrsPhilips
            launcher_OffroadRacing
            launcher_pilotschool
            launcher_Racing
            launcher_rampage
            launcher_rampage
            launcher_range
            launcher_stunts
            launcher_stunts
            launcher_tennis
            launcher_Tonya
            launcher_Triathlon
            launcher_Yoga
            ob_mp_bed_low
            ob_mp_bed_med
            </summary>				
        </member>
        <member name="T:RAGE.Game.Ui">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Ui.ActivateFrontendMenu(System.UInt32,System.Boolean,System.Int32)">
            <summary>
            Does stuff like this:
            gyazo.com/7fcb78ea3520e3dbc5b2c0c0f3712617
            
            Example:
            int GetHash = GET_HASH_KEY(fe_menu_version_corona_lobby);
            ACTIVATE_FRONTEND_MENU(GetHash, 0, -1);
            
            BOOL p1 is a toggle to define the game in pause.
            int p2 is unknown but -1 always works, not sure why though.
            
            30/03/2017 ins1de :
            
            the int p2 is actually a component variable. When the pause menu is visible, it opens the tab related to it.
            
            Example : Function.Call(Hash.ACTIVATE_FRONTEND_MENU,-1171018317, 0, 42);
            Result : Opens the Online tab without pausing the menu, with -1 it opens the map.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddBlipForCoord(System.Single,System.Single,System.Single)">
            <summary>
            Creates an orange ( default ) Blip-object. Returns a Blip-object which can then be modified.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddBlipForEntity(System.Int32)">
            <summary>
            Returns red ( default ) blip attached to entity.
            
            Example:
            Blip blip; //Put this outside your case or option
            blip = UI::ADD_BLIP_FOR_ENTITY(YourPedOrBodyguardName);
            UI::SET_BLIP_AS_FRIENDLY(blip, true);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddBlipForPickup(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddBlipForRadius(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddNextMessageToPreviousBriefs(System.Boolean)">
            <summary>
            hash collision?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddTextComponentFloat(System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddTextComponentFormattedInteger(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddTextComponentInteger(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddTextComponentSubstringBlipName(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddTextComponentSubstringPlayerName(System.String)">
            <summary>
            • Description :
            
             Processes a string and removes the player name(max len 99)
             You can use this function to create notifications/subtitles
            --------------------------------------------------------------------
            • Usage(Colors) :
            
             ~r~ = red
             ~y~ = yellow
             ~g~ = green
             ~b~ = light blue
             ~w~ = white
             ~p~ = purple
             ~n~ = new line
            
            --------------------------------------------------------------------
            • Usage(Input) :
            ~INPUT_CONTEXT~ will show button symbol (regarding last input device - keyboard/gamepad)
            example:
            string info = Context action is assigned to ~INPUT_CONTEXT~!;
            
            --------------------------------------------------------------------
            • Example (C++):
            
            void ShowNotification(char text)  
            { 
                    UI::_SET_NOTIFICATION_TEXT_ENTRY(STRING); 
                    UI::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text); 
                    UI::_DRAW_NOTIFICATION(FALSE, FALSE); // if first param = 1, the message flashes 1 or 2 times
            }
            
            • Colors example : 
            
            string red = ~r~Red test;
            string white_and_yellow = ~w~White and ~y~yellow;
            string text_with_double_line = First line.~n~Second line;
            
            This native (along with 0x5F68520888E69014 and 0x94CF4AC034C9C986) do not actually filter anything. They simply add the provided text (as of 944)
            
            Used to be known as _ADD_TEXT_COMPONENT_STRING
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddTextComponentSubstringWebsite(System.String)">
            <summary>
            This native (along with 0x5F68520888E69014 and 0x6C188BE134E074AA) do not actually filter anything. They simply add the provided text (as of 944)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddTextComponentScaleform(System.String)">
            <summary>
            This native (along with 0x6C188BE134E074AA and 0x94CF4AC034C9C986) do not actually filter anything. They simply add the provided text (as of 944)
            
            did you even check the disassembly?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddTextComponentAppTitle(System.String,System.Int32)">
            <summary>
            p1 was always -1.
            used for phone applications; scaleform
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddTextComponentSubstringTextLabel(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddTextComponentSubstringTextLabelHashKey(System.UInt32)">
            <summary>
            It adds the localized text of the specified GXT entry name. Eg. if the argument is GET_HASH_KEY(ES_HELP), adds Continue. Just uses a text labels hash key
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddTextComponentSubstringTime(System.Int32,System.Int32)">
            <summary>
            Adds a timer (e.g. 00:00:00:000). The appearance of the timer depends on the flags, which needs more research.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.BeginTextCommandObjective(System.String)">
            <summary>
            nothin doin. 
            
            void message()
             {
                 _BEGIN_TEXT_COMMAND_OBJECTIVE(AHT_RTIT);
                  _END_TEXT_COMMAND_OBJECTIVE(0);
               }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetLoadingPromptTextEntry(System.String)">
            <summary>
            Initializes the text entry for the the text next to a loading prompt. All natives for for building UI texts can be used here
            
            
            e.g
            void StartLoadingMessage(char text, int spinnerType = 3)
              {
                 _SET_LOADING_PROMPT_TEXT_ENTRY(STRING);
                   ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
                   _SHOW_LOADING_PROMPT(spinnerType);
                }
            /OR/
             void ShowLoadingMessage(char text, int spinnerType = 3, int timeMs = 10000)
              {
                 _SET_LOADING_PROMPT_TEXT_ENTRY(STRING);
                   ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
                   _SHOW_LOADING_PROMPT(spinnerType);
                    WAIT(timeMs);
                 _REMOVE_LOADING_PROMPT();
             }
            
            
            These are some localized strings used in the loading spinner.
            PM_WAIT                   = Please Wait
            CELEB_WPLYRS              = Waiting For Players.
            CELL_SPINNER2             = Scanning storage.
            ERROR_CHECKYACHTNAME = Registering your yachts name. Please wait.
            ERROR_CHECKPROFANITY   = Checking your text for profanity. Please wait.
            FM_COR_AUTOD                        = Just spinner no text
            FM_IHELP_WAT2                        = Waiting for other players
            FM_JIP_WAITO                            = Game options are being set
            FMMC_DOWNLOAD                    = Downloading
            FMMC_PLYLOAD                         = Loading
            FMMC_STARTTRAN                    = Launching session
            HUD_QUITTING                           =  Quiting session
            KILL_STRIP_IDM                         = Waiting for to accept
            MP_SPINLOADING                      = Loading
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.BeginTextCommandClearPrint(System.String)">
            <summary>
            clears a print text command with this text
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.BeginTextCommandDisplayHelp(System.String)">
            <summary>
            Used to be known as _SET_TEXT_COMPONENT_FORMAT
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.BeginTextCommandDisplayText(System.String)">
            <summary>
            The following were found in the decompiled script files:
            STRING, TWOSTRINGS, NUMBER, PERCENTAGE, FO_TWO_NUM, ESMINDOLLA, ESDOLLA, MTPHPER_XPNO, AHD_DIST, CMOD_STAT_0, CMOD_STAT_1, CMOD_STAT_2, CMOD_STAT_3, DFLT_MNU_OPT, F3A_TRAFDEST, ES_HELP_SOC3
            
            ESDOLLA - cash
            ESMINDOLLA - cash (negative)
            
            Used to be known as _SET_TEXT_ENTRY
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.BeginTextCommandLineCount(System.String)">
            <summary>
            gets line count
            
            
            int GetLineCount(char text, float x, float y)
                {
                 _BEGIN_TEXT_COMMAND_LINE_COUNT(STRING);
                            ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
                  return _END_TEXT_COMMAND_GET_LINE_COUNT(x, y);
                }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.BeginTextCommandWidth(System.String)">
            <summary>
            Example:
            _BEGIN_TEXT_COMMAND_WIDTH(NUMBER);
            ADD_TEXT_COMPONENT_FLOAT(69.420f, 2);
            float width = _END_TEXT_COMMAND_GET_WIDTH(1);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.BeginTextCommandIsMessageDisplayed(System.String)">
            <summary>
            nothin doin. 
            
            BOOL Message(const char text)
               {
                 BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED(STRING);
                  ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
                   return END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED();
               }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.BeginTextCommandIsThisHelpMessageBeingDisplayed(System.String)">
            <summary>
            BOOL IsContextActive(char ctx)
                {
                 BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(ctx);
                 return END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(0);
              }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.BeginTextCommandTimer(System.String)">
            <summary>
              void message(char text)
              {
                 _BEGIN_TEXT_COMMAND_TIMER(STRING);
                    ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
                   _END_TEXT_COMMAND_TIMER(0);
               }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.BeginTextCommandPrint(System.String)">
            <summary>
            Used to be known as _SET_TEXT_ENTRY_2
            
            void ShowSubtitle(char text)
            {
              BEGIN_TEXT_COMMAND_PRINT(STRING);
             ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
               END_TEXT_COMMAND_PRINT(2000, 1);
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.BeginTextCommandSetBlipName(System.String)">
            <summary>
            example:
            
            UI::BEGIN_TEXT_COMMAND_SET_BLIP_NAME(STRING);
            UI::_ADD_TEXT_COMPONENT_STRING(Name);
            UI::END_TEXT_COMMAND_SET_BLIP_NAME(blip);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetNotificationTextEntry(System.String)">
            <summary>
            Declares the entry type of a notification, for example STRING.
            
            int ShowNotification(char text)
            {
              _SET_NOTIFICATION_TEXT_ENTRY(STRING);
             ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
               return _DRAW_NOTIFICATION(1, 1);
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsLoadingPromptBeingDisplayed">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.RemoveLoadingPrompt">
            <summary>
            Removes the loading prompt at the bottom right of the screen, created by the UI::_SHOW_LOADING_PROMPT native.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetPlayerCashChange(System.Int32,System.Int32)">
            <summary>
            Displays cash change notifications on HUD.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ClearAdditionalText(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ClearAllHelpMessages">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ClearBrief">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ClearFloatingHelp(System.Int32,System.Boolean)">
            <summary>
            p0 looks like int in script
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ClearGpsFlags">
            <summary>
            Clears the GPS flags. Only the script that originally called SET_GPS_FLAGS can clear them.
            
            Doesnt seem like the flags are actually read by the game at all.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ClearGpsPlayerWaypoint">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ClearGpsRaceTrack">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ClearHelp(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ClearPedInPauseMenu">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ClearPrints">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ClearSmallPrints">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ClearThisPrint(System.String)">
            <summary>
            p0: found arguments in the b617d scripts: pastebin.com/X5akCN7z
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AbortTextChat">
            <summary>
            Aborts the current message in the text chat.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.CreateMpGamerTag(System.Int32,System.String,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            p0 was the return of NET_TO_PED in fm_mission_controler.
            p4 was always .
            returns headDisplayId
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMpGamerTagColor(System.Int32,System.String,System.Boolean,System.Boolean,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMapFullScreen(System.Boolean)">
            <summary>
            If toggle is true, the map is shown in full screen
            If toggle is false, the map is shown in normal mode
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DisableFrontendThisFrame">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DisplayAmmoThisFrame(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DisplayAreaName(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DisplayCash(System.Boolean)">
            <summary>
            DISPLAY_CASH(false); makes the cash amount render on the screen when appropriate
            DISPLAY_CASH(true); disables cash amount rendering
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DisplayHelpTextThisFrame(System.String,System.Boolean)">
            <summary>
            The messages are localized strings.
            Examples:
            No_bus_money
            Enter_bus
            Tour_help
            LETTERS_HELP2
            Dummy
            
            The bool appears to always be false (if it even is a bool, as its represented by a zero)
            --------
            p1 doesnt seem to make a difference, regardless of the state its in. 
            
            
            picture of where on the screen this is displayed? 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DisplayHud(System.Boolean)">
            <summary>
            If Hud should be displayed
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DisplayRadar(System.Boolean)">
            <summary>
            If Minimap / Radar should be displayed.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DisplaySniperScopeThisFrame">
            <summary>
            Displays the crosshair for this frame.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DoesBlipExist(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DoesPedHaveAiBlip(System.Int32)">
            <summary>
            Returns whether the peds blip is controlled by the game. 
            Its the default blip you can see on enemies during freeroam in singleplayer (the one that fades out quickly). 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DoesTextBlockExist(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DoesTextLabelExist(System.String)">
            <summary>
            Checks if the passed gxt name exists in the game files.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.CenterPlayerOnRadarThisFrame">
            <summary>
            When calling this, the current frame will have the players arrow icon be focused on the dead center of the radar.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.EndTextCommandObjective(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ShowLoadingPrompt(System.Int32)">
            <summary>
            This does NOT get called per frame. Call it once to show, then use UI::_REMOVE_LOADING_PROMPT to remove it
            
            Changes the the above natives (UI::_SET_LOADING_PROMPT_TEXT_ENTRY) spinning circle type.
            
            Types:
            enum LoadingPromptTypes
            {
             LOADING_PROMPT_LEFT,
              LOADING_PROMPT_LEFT_2,
                LOADING_PROMPT_LEFT_3,
                SAVE_PROMPT_LEFT,
             LOADING_PROMPT_RIGHT,
            };
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.EndTextCommandClearPrint">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.EndTextCommandDisplayHelp(System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            shape goes from -1 to 50 (may be more).
            p0 is always 0.
            
            Example:
            void FloatingHelpText(const char text)
            {
                BEGIN_TEXT_COMMAND_DISPLAY_HELP(STRING);
              ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
               END_TEXT_COMMAND_DISPLAY_HELP (0, 0, 1, -1);
            }
            
            Image:
            - imgbin.org/images/26209.jpg
            
            more inputs/icons:
            - pastebin.com/nqNYWMSB
            
            Used to be known as _DISPLAY_HELP_TEXT_FROM_STRING_LABEL
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.EndTextCommandDisplayText(System.Single,System.Single,System.Int32)">
            <summary>
            After applying the properties to the text (See UI::SET_TEXT_), this will draw the text in the applied position. Also 0.0f  x, y  1.0f, percentage of the axis.
            
            Used to be known as _DRAW_TEXT
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.EndTextCommandGetLineCount(System.Single,System.Single)">
            <summary>
            Determines how many lines the text string will use when drawn on screen. 
            Must use 0x521FB041D93DD0E4 for setting up
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.EndTextCommandGetWidth(System.Int32)">
            <summary>
            In scripts font most of the time is passed as 1.
            Use _BEGIN_TEXT_COMMAND_WIDTH
            
            param is not font from what ive tested
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.EndTextCommandIsMessageDisplayed">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.EndTextCommandIsThisHelpMessageBeingDisplayed(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.EndTextCommandTimer(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.EndTextCommandPrint(System.Int32,System.Boolean)">
            <summary>
            Draws the subtitle at middle center of the screen.
            
            int duration = time in milliseconds to show text on screen before disappearing
            
            drawImmediately = If true, the text will be drawn immediately, if false, the text will be drawn after the previous subtitle has finished
            
            Used to be known as _DRAW_SUBTITLE_TIMED
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.EndTextCommandSetBlipName(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DrawNotificationAward(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Example:
            
            UI::_SET_NOTIFICATION_TEXT_ENTRY(HUNT);
            UI::_0xAA295B6F28BD587D(Hunting, Hunting_Gold_128, 0, 109, HUD_MED_UNLKED);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DrawNotificationApartmentInvite(System.Boolean,System.Boolean,System.Int32@,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This function and the one below it are for after you receive an invite, not sending it.
            
            p0 = 1 or 0
            
            nothin doin. 
            int invite(Player player)
              {
                 int iVar2, iVar3;
                 networkHandleMgr handle;
                  NETWORK_HANDLE_FROM_PLAYER(player, ANDandle.netHandle, 13);
                    networkClanMgr clan;
            
                    char playerName = GET_PLAYER_NAME(player);
                   _SET_NOTIFICATION_TEXT_ENTRY(STRING);
                 _SET_NOTIFACTION_COLOR_NEXT(0);
                   ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
                 if (NETWORK_CLAN_PLAYER_GET_DESC(ANDlan, 35, ANDandle.netHandle))
                   {
                     iVar2 = 0;
                        if (ARE_STRINGS_EQUAL(clan.unk22, Leader) AND clan.unk30 == 0)
                     {
                         iVar2 = 1;
                        }
                     if (clan.unk21  0)
                        {
                         iVar3 = 0;
                        }
                     else
                      {
                         iVar3 = 1;
                        }
                     BOOL unused = _0x54E79E9C(ANDlan.clanHandle, 35);
                      return _DRAW_NOTIFICATION_APARTMENT_INVITE(iVar3, 0 /unused/, ANDlan.unk17, clan.unk30, iVar2, 0, clan.clanHandle, 0, 0, 0);
                 }
             }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DrawNotificationClanInvite(System.Boolean,System.Boolean,System.Int32@,System.Int32,System.Boolean,System.Boolean,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            p0 = 1 or 0
            
            crashes my game...
            this is for sending invites to network players - jobs/apartment/ect... 
            return notification handle
            
            int invite(Player player)
               {
                 networkHandleMgr netHandle;
                   networkClanMgr clan;
                  char playerName = GET_PLAYER_NAME(player);
                   _SET_NOTIFICATION_TEXT_ENTRY(STRING);
                 _SET_NOTIFACTION_COLOR_NEXT(1);
                   ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
                 NETWORK_HANDLE_FROM_PLAYER(player, ANDetHandle.netHandle, 13);
                 if (NETWORK_CLAN_PLAYER_IS_ACTIVE(ANDetHandle.netHandle))
                  {
                     NETWORK_CLAN_PLAYER_GET_DESC(ANDlan.clanHandle, 35, ANDetHandle.netHandle);
                     _DRAW_NOTIFICATION_CLAN_INVITE(0, _0x54E79E9C(ANDlan.clanHandle, 35), ANDlan.unk17, clan.isLeader, 0, 0, clan.clanHandle, playerName, 0, 0, 0);
                 }
             }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetNotificationMessage2(System.String,System.String,System.Boolean,System.Int32,System.String,System.String)">
            <summary>
            List of picNames: pastebin.com/XdpJVbHz
            
            
            flash is a bool for fading in.
            iconTypes:
            1 : Chat Box
            2 : Email
            3 : Add Friend Request
            4 : Nothing
            5 : Nothing
            6 : Nothing
            7 : Right Jumping Arrow
            8 : RP Icon
            9 : $ Icon
            
            sender is the very top header. This can be any old string.
            subject is the header under the sender.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetNotificationMessage3(System.String,System.String,System.Boolean,System.Int32,System.String,System.String)">
            <summary>
            Needs more research.
            
            Only one type of usage in the scripts:
            
            UI::_C6F580E4C94926AC(CHAR_ACTING_UP, CHAR_ACTING_UP, 0, 0, DI_FEED_CHAR, a_0);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetNotificationMessage4(System.String,System.String,System.Boolean,System.Int32,System.String,System.String,System.Single)">
            <summary>
            NOTE: duration is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
            
            Example, only occurrence in the scripts:
            v_8 = UI::_1E6611149DB3DB6B(CHAR_SOCIAL_CLUB, CHAR_SOCIAL_CLUB, 0, 0, AND_9, , a_5);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetNotificationMessageClanTag(System.String,System.String,System.Boolean,System.Int32,System.String,System.String,System.Single,System.String)">
            <summary>
            List of picNames pastebin.com/XdpJVbHz
            
            flash is a bool for fading in.
            iconTypes:
            1 : Chat Box
            2 : Email
            3 : Add Friend Request
            4 : Nothing
            5 : Nothing
            6 : Nothing
            7 : Right Jumping Arrow
            8 : RP Icon
            9 : $ Icon
            
            sender is the very top header. This can be any old string.
            subject is the header under the sender.
            duration is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
            clanTag shows a crew tag in the sender header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. MK becomes ___MK, ACE becomes ___ACE, etc.)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetNotificationMessageClanTag2(System.String,System.String,System.Boolean,System.Int32,System.String,System.String,System.Single,System.String,System.Int32,System.Int32)">
            <summary>
            List of picNames: pastebin.com/XdpJVbHz
            
            flash is a bool for fading in.
            iconTypes:
            1 : Chat Box
            2 : Email
            3 : Add Friend Request
            4 : Nothing
            5 : Nothing
            6 : Nothing
            7 : Right Jumping Arrow
            8 : RP Icon
            9 : $ Icon
            
            sender is the very top header. This can be any old string.
            subject is the header under the sender.
            duration is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
            clanTag shows a crew tag in the sender header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. MK becomes ___MK, ACE becomes ___ACE, etc.)
            iconType2 is a mirror of iconType. It shows in the subject line, right under the original iconType.
            
            
            int IconNotification(char text, char text2, char Subject)
            {
                _SET_NOTIFICATION_TEXT_ENTRY(STRING);
             ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
               _SET_NOTIFICATION_MESSAGE_CLAN_TAG_2(CHAR_SOCIAL_CLUB, CHAR_SOCIAL_CLUB, 1, 7, text2, Subject, 1.0f, __EXAMPLE, 7);
               return _DRAW_NOTIFICATION(1, 1);
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DrawNotificationWithIcon(System.Int32,System.Int32,System.String)">
            <summary>
            returns a notification handle, prints out a notification like below:
            type range: 0 - 2
            if you set type to 1, image goes from 0 - 39 - Xbox you can add text to
            
            example: 
            UI::_0xD202B92CBF1D816F(1, 20, Who you trynna get crazy with, ese? Dont you know Im LOCO?!);
            - imgur.com/lGBPCz3
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DrawNotificationWithButton(System.Int32,System.String,System.String)">
            <summary>
            returns a notification handle, prints out a notification like below:
            type range: 0 - 2
            if you set type to 1, button accepts ~INPUT_SOMETHING~
            
            example:
            UI::_0xDD6CB2CCE7C2735C(1, ~INPUT_TALK~, Who you trynna get crazy with, ese? Dont you know Im LOCO?!);
            - imgur.com/UPy0Ial
            
            
            Examples from the scripts:
            l_D11/1/=UI::_DD6CB2CCE7C2735C(1,~INPUT_REPLAY_START_STOP_RECORDING~,);
            l_D12/1/=UI::_DD6CB2CCE7C2735C(1,~INPUT_SAVE_REPLAY_CLIP~,);
            l_D11/1/=UI::_DD6CB2CCE7C2735C(1,~INPUT_REPLAY_START_STOP_RECORDING~,);
            l_D12/1/=UI::_DD6CB2CCE7C2735C(1,~INPUT_REPLAY_START_STOP_RECORDING_SECONDARY~,);
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetNotificationMessage(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.String,System.String)">
            <summary>
            List of picNames: pastebin.com/XdpJVbHz
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DrawNotification(System.Boolean,System.Boolean)">
            <summary>
            Draws a notification above the map and returns the notifications handle
            
            Color syntax:
            ~r~ = Red
            ~b~ = Blue
            ~g~ = Green
            ~y~ = Yellow
            ~p~ = Purple
            ~o~ = Orange
            ~c~ = Grey
            ~m~ = Darker Grey
            ~u~ = Black
            ~n~ = New Line
            ~s~ = Default White
            ~w~ = White
            ~h~ = Bold Text
            ~nrt~ = ???
            
            Special characters:
            ¦ = Rockstar Verified Icon (U+00A6:Broken Bar - Alt+0166)
            ÷ = Rockstar Icon (U+00F7:Division Sign - Alt+0247)
            ? = Rockstar Icon 2 (U+2211:N-Ary Summation)
            
            Example C#:
                        Function.Call(Hash._ADD_TEXT_COMPONENT_STRING3, Now I need you to bring the ~b~vehicle~w~ back to me!);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DrawNotification4(System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DrawNotification2(System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DrawNotification3(System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.FlashAbilityBar(System.Boolean)">
            <summary>
            If set to true ability bar will flash
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.FlashMinimapDisplay">
            <summary>
            adds a short flash to the Radar/Minimap
            Usage: UI.FLASH_MINIMAP_DISPLAY
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.FlashWantedDisplay(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetBlipAlpha(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetBlipColour(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetBlipFromEntity(System.Int32)">
            <summary>
            Returns the Blip handle of given Entity.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetBlipHudColour(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetBlipInfoIdCoord(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetBlipCoords(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetBlipInfoIdDisplay(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetBlipInfoIdEntityIndex(System.Int32)">
            <summary>
             
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetBlipInfoIdType(System.Int32)">
            <summary>
            Returns a value based on what the blip is attached to
            1 - Vehicle
            2 - Ped
            3 - Object
            4 - Coord
            5 - unk
            6 - Pickup
            7 - Radius
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetBlipSprite(System.Int32)">
            <summary>
            Blips Images + IDs:
            gtaxscripting.blogspot.com/2016/05/gta-v-blips-id-and-image.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetTextSubstring(System.String,System.Int32,System.Int32)">
            <summary>
            Returns a substring of a specified length starting at a specified position.
            
            Example:
            // Get STRING text from MY_STRING
            subStr = UI::_GET_TEXT_SUBSTRING(MY_STRING, 3, 6);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetTextSubstringSlice(System.String,System.Int32,System.Int32)">
            <summary>
            Returns a substring that is between two specified positions. The length of the string will be calculated using (endPosition - startPosition).
            
            Example:
            // Get STRING text from MY_STRING
            subStr = UI::_GET_TEXT_SUBSTRING_SLICE(MY_STRING, 3, 9);
            // Overflows are possibly replaced with underscores (needs verification)
            subStr = UI::_GET_TEXT_SUBSTRING_SLICE(MY_STRING, 3, 10); // STRING_?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetTextSubstringSafe(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a substring of a specified length starting at a specified position. The result is guaranteed not to exceed the specified max length.
            
            NOTE: The maxLength parameter might actually be the size of the buffer that is returned. More research is needed. -CL69
            
            Example:
            // Condensed example of how Rockstar uses this function
            strLen = UI::GET_LENGTH_OF_LITERAL_STRING(GAMEPLAY::GET_ONSCREEN_KEYBOARD_RESULT());
            subStr = UI::_GET_TEXT_SUBSTRING_SAFE(GAMEPLAY::GET_ONSCREEN_KEYBOARD_RESULT(), 0, strLen, 63);
            
            --
            
            fm_race_creator.ysc, line 85115:
            // parameters modified for clarity
            BOOL sub_8e5aa(char text, int length) {
                for (i = 0; i = (length - 2); i += 1) {
                    if (!GAMEPLAY::ARE_STRINGS_EQUAL(UI::_GET_TEXT_SUBSTRING_SAFE(text, i, i + 1, 1),  )) {
                        return FALSE;
                    }
                }
                return TRUE;
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetCurrentFrontendMenu">
            <summary>
            if (UI::_2309595AD6145265() == ${fe_menu_version_empty_no_background})
            
            Seems to get the current frontend menu
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetCurrentWebsiteId">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetLabelText(System.String)">
            <summary>
            Gets a string literal from a label name.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetFirstBlipInfoId(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetHudColour(System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            HUD colors and their values: pastebin.com/d9aHPbXN
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetHudComponentPosition(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetScreenCoordFromWorldCoord(System.Single,System.Single,System.Single,System.Single@,System.Single@)">
            <summary>
            World to relative screen coords
            
            this world to screen will keep the text on screen. it will keep it in the screen pos
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetLengthOfLiteralString(System.String)">
            <summary>
            Returns the length of the string passed (much like strlen).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetLengthOfString(System.String)">
            <summary>
            gets the length of a null terminated string, without checking unicode encodings
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetLengthOfStringWithThisTextLabel(System.String)">
            <summary>
            Returns the string length of the string from the gxt string .
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetMainPlayerBlipId">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetUseridsUihidden(System.Int32,System.Int32@)">
            <summary>
            Hash collision! Please change back to _0xEF4CED81CEBEDC6D
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsMinimapAreaRevealed(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetNamedRendertargetRenderId(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DisableBlipNameForVar">
            <summary>
            Hash collision!!! 
            
            Returns a blip handle.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetNextBlipInfoId(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetNumberOfActiveBlips">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetPauseMenuState">
            <summary>
            Returns:
            
            0
            5
            10
            15
            20
            25
            30
            35
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetTextScaleHeight(System.Single,System.Int32)">
            <summary>
            This gets the height of the FONT and not the total text. You need to get the number of lines your text uses, and get the height of a newline (Im using a smaller value) to get the total text height.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetStreetNameFromHashKey(System.UInt32)">
            <summary>
            This functions converts the hash of a street name into a readable string.
            
            For how to get the hashes, see PATHFIND::GET_STREET_NAME_AT_COORD.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetBlipInfoIdIterator">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GivePedToPauseMenu(System.Int32,System.Int32)">
            <summary>
            p1 is either 1 or 2 in the PC scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.HasAdditionalTextLoaded(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsScriptedHudComponentActive(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.HasThisAdditionalTextLoaded(System.String,System.Int32)">
            <summary>
            Checks if the specified gxt has loaded into the passed slot.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetDefaultScriptRendertargetRenderId">
            <summary>
            This function is hard-coded to always return 1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.HideHelpTextThisFrame">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.HideHudAndRadarThisFrame">
            <summary>
            I think this works, but seems to prohibit switching to other weapons (or accessing the weapon wheel)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.HideHudComponentThisFrame(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.HideLoadingOnFadeThisFrame">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.DisableRadarThisFrame">
            <summary>
            confirmed working 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.HideNumberOnBlip(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.HideScriptedHudComponentThisFrame(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ShowWeaponWheel(System.Boolean)">
            <summary>
            Forces the weapon wheel to appear on screen.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsBlipFlashing(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsBlipOnMinimap(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsBlipShortRange(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsHelpMessageBeingDisplayed">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsHelpMessageFadingOut">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsHelpMessageOnScreen">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsHudComponentActive(System.Int32)">
            <summary>
            Full list of components below
            
            HUD = 0;
            HUD_WANTED_STARS = 1;
            HUD_WEAPON_ICON = 2;
            HUD_CASH = 3;
            HUD_MP_CASH = 4;
            HUD_MP_MESSAGE = 5;
            HUD_VEHICLE_NAME = 6;
            HUD_AREA_NAME = 7;
            HUD_VEHICLE_CLASS = 8;
            HUD_STREET_NAME = 9;
            HUD_HELP_TEXT = 10;
            HUD_FLOATING_HELP_TEXT_1 = 11;
            HUD_FLOATING_HELP_TEXT_2 = 12;
            HUD_CASH_CHANGE = 13;
            HUD_RETICLE = 14;
            HUD_SUBTITLE_TEXT = 15;
            HUD_RADIO_STATIONS = 16;
            HUD_SAVING_GAME = 17;
            HUD_GAME_STREAM = 18;
            HUD_WEAPON_WHEEL = 19;
            HUD_WEAPON_WHEEL_STATS = 20;
            MAX_HUD_COMPONENTS = 21;
            MAX_HUD_WEAPONS = 22;
            MAX_SCRIPTED_HUD_COMPONENTS = 141;
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsHudHidden">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsHudPreferenceSwitchedOn">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsMessageBeingDisplayed">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsRadarEnabled">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsMissionCreatorBlip(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsMpGamerTagActive(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddTrevorRandomModifier(System.Int32)">
            <summary>
            Hash collision!
            _IS_MP_GAMER_TAG_ACTIVE_2
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.HasMpGamerTag">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsTextChatActive">
            <summary>
            Returns whether or not the text chat (MULTIPLAYER_CHAT Scaleform component) is active.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsNamedRendertargetLinked(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsNamedRendertargetRegistered(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsSocialClubActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsPauseMenuActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsPauseMenuRestarting">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsRadarHidden">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsRadarPreferenceSwitchedOn">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsStreamingAdditionalText(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsSubtitlePreferenceSwitchedOn">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.HasMpGamerTag2(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsWarningMessageActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.IsWaypointActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.LinkNamedRendertarget(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.LockMinimapAngle(System.Int32)">
            <summary>
            Locks the minimap to the specified angle in integer degrees.
            
            angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.LockMinimapPosition(System.Single,System.Single)">
            <summary>
            Locks the minimap to the specified world position.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetTextChatUnk(System.Boolean)">
            <summary>
            Sets an unknown boolean value in the text chat.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ShowSocialClubLegalScreen">
            <summary>
            probs one frame
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.AddFrontendMenuContext(System.UInt32)">
            <summary>
            Seems to add/set the current menu context (to show/hide buttons?)
            
            Pausemenu.xml:
            ContextsALL, DISPLAY_CORONA_BUTTONS, NONE, BET_LOCKED, BET_AVAILABLE, SCROLL_OPTION/Contexts
            Code:
            if (...) {
                sub_bbd34(a_0, 0, FM_BET_HELP);
                UI::_DD564BDD0472C936(${bet_available}); // This native
                UI::OBJECT_DECAL_TOGGLE(${bet_locked});
            } else { 
                sub_bbd34(a_0, 0, );
                UI::OBJECT_DECAL_TOGGLE(${bet_available});
                UI::_DD564BDD0472C936(${bet_locked}); // This native
            }
            
            OBJECT_DECAL_TOGGLE seems to remove a context, It also has a hash collision
            
            // Old
            Scripts do not make this natives purpose clear. However, this native most likely has something to do with decals since in nearly every instance, OBJECT_DECAL_TOGGLE is called prior.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ObjectDecalToggle(System.UInt32)">
            <summary>
            Please change back to _0x444D8CF241EC25C5 (hash collision)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.EnableDeathbloodSeethrough(System.Boolean)">
            <summary>
            Please change back to _0x4895BDEA16E7C080 (hash collision)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.PulseBlip(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.RefreshWaypoint">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.RegisterNamedRendertarget(System.String,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ReleaseNamedRendertarget(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.RemoveBlip(System.Int32@)">
            <summary>
            In the C++ SDK, this seems not to work-- the blip isnt removed immediately. I use it for saving cars.
            
            E.g.:
            
            Ped pped = PLAYER::PLAYER_PED_ID();
            Vehicle v = PED::GET_VEHICLE_PED_IS_USING(pped);
            Blip b = UI::ADD_BLIP_FOR_ENTITY(v);
            
            works fine.
            But later attempting to delete it with:
            
            Blip b = UI::GET_BLIP_FROM_ENTITY(v);
            if (UI::DOES_BLIP_EXIST(b)) UI::REMOVE_BLIP(AND);
            
            doesnt work. And yes, doesnt work without the DOES_BLIP_EXIST check either. Also, if you attach multiple blips to the same thing (say, a vehicle), and that thing disappears, the blips randomly attach to other things (in my case, a vehicle).
            
            Thus for me, UI::REMOVE_BLIP(AND) only works if theres one blip, (in my case) the vehicle is marked as no longer needed, you drive away from it and it eventually despawns, AND there is only one blip attached to it. I never intentionally attach multiple blips but if the user saves the car, this adds a blip. Then if they delete it, it is supposed to remove the blip, but it doesnt. Then they can immediately save it again, causing another blip to re-appear.
            -------------
            
            Passing the address of the variable instead of the value works for me.
            e.g.
            int blip = UI::ADD_BLIP_FOR_ENTITY(ped);
            UI::REMOVE_BLIP(ANDlip);
            
            
            Remove blip will currently crash your game, just artificially remove the blip by setting the sprite to a id that is invisible.
            
            --
            It crashes my game.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.RemoveMpGamerTag(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.RemoveMultiplayerBankCash">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.RemoveMultiplayerHudCash">
            <summary>
            Removes multiplayer cash hud each frame
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetHudColoursSwitch(System.Int32,System.Int32)">
            <summary>
            HUD colors and their values: pastebin.com/d9aHPbXN
            --------------------------------------------------
            makes hudColorIndex2 color into hudColorIndex color
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetHudColour(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            HUD colors and their values: pastebin.com/d9aHPbXN
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.RequestAdditionalText(System.String,System.Int32)">
            <summary>
            Request a gxt into the passed slot.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.RequestAdditionalText2(System.String,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ResetHudComponentValues(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ResetReticuleValues">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.RestartFrontendMenu(System.UInt32,System.Int32)">
            <summary>
            Before using this native click the native above and look at the decription.
            
            Example:
            int GetHash = Function.Callint(Hash.GET_HASH_KEY, fe_menu_version_corona_lobby);
            Function.Call(Hash.ACTIVATE_FRONTEND_MENU, GetHash, 0, -1);
            Function.Call(Hash.RESTART_FRONTEND_MENU(GetHash, -1);
            
            This native refreshes the frontend menu.
            
            p1 = Hash of Menu
            p2 = Unknown but always works with -1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetAbilityBarValue(System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetRadarBigmapEnabled(System.Boolean,System.Boolean)">
            <summary>
            Toggles the big minimap state like in GTA:Online.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipAlpha(System.Int32,System.Int32)">
            <summary>
            Sets alpha-channel for blip color.
            
            Example:
            
            Blip blip = UI::ADD_BLIP_FOR_ENTITY(entity);
            UI::SET_BLIP_COLOUR(blip , 3);
            UI::SET_BLIP_ALPHA(blip , 64);
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipAsFriendly(System.Int32,System.Boolean)">
            <summary>
            false for enemy
            true for friendly
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipShrink(System.Int32,System.Boolean)">
            <summary>
            Makes a blip go small when off the minimap.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipAsMissionCreatorBlip(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipAsShortRange(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipBright(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipCategory(System.Int32,System.Int32)">
            <summary>
            int index:
            
            1 = No Text on blip or Distance
            2 = Text on blip
            3 = No text, just distance
            4+ No Text on blip or distance
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipColour(System.Int32,System.Int32)">
            <summary>
            Color:
            
            0: white
            1: red
            2: green
            3: blue
            17: orange
            19: purple
            20: grey
            21: brown
            23: pink
            25: dark green
            27: dark purple
            29: dark blue
            Default (Function not used): yellow
            
            Those are not the only ones. i.e: 17 is Trevors orange.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipCoords(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipDisplay(System.Int32,System.Int32)">
            <summary>
            displayId = 8 : shows on radar
            
            displayId:
            3 = Shows on Main map but not Radar (not selectable on map)
            
            displayId = 2 (Shows on Main map + Radar + selectable)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipFade(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipFlashes(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipFlashesAlternate(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipFlashInterval(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipFlashTimer(System.Int32,System.Int32)">
            <summary>
            Adds up after viewing multiple R scripts. I believe that the duration is in miliseconds.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipHighDetail(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipNameFromTextFile(System.Int32,System.String)">
            <summary>
            Doesnt work if the label text of gxtEntry is = 80.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipNameToPlayerName(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipPriority(System.Int32,System.Int32)">
            <summary>
            See this topic for more details : gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-35?p=1069477935
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipRotation(System.Int32,System.Int32)">
            <summary>
            After some testing, looks like you need to use UI:CEIL() on the rotation (vehicle/ped heading) before using it there.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipRoute(System.Int32,System.Boolean)">
            <summary>
            Enable / disable showing route for the Blip-object.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipRouteColour(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipScale(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipSecondaryColour(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipShowCone(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipSprite(System.Int32,System.Int32)">
            <summary>
            Takes a blip object and adds a sprite to it on the map.
            
            You may have your own list, but since dev-c didnt show it I was bored and started looking through scripts and functions to get a presumable almost positive list of a majority of blip IDs
            h t t p://pastebin.com/Bpj9Sfft
            
            Blips Images + IDs:
            gtaxscripting.blogspot.com/2016/05/gta-v-blips-id-and-image.html
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetNotificationColorNext(System.Int32)">
            <summary>
            sets font color for the next notification
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMinimapAttitudeIndicatorLevel(System.Single,System.Boolean)">
            <summary>
            Argument must be 0.0f or above 38.0f, or it will be ignored.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetPlayerBlipPositionThisFrame(System.Single,System.Single)">
            <summary>
            Sets the position of the arrow icon representing the player on both the minimap and world map.
            
            Too bad this wouldnt work over the network (obviously not). Could spoof where we would be.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetFrontendActive(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetGpsFlags(System.Int32,System.Single)">
            <summary>
            Only the script that originally called SET_GPS_FLAGS can set them again. Another script cannot set the flags, until the first script that called it has called CLEAR_GPS_FLAGS.
            
            Doesnt seem like the flags are actually read by the game at all.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetGpsFlashes(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetHudComponentPosition(System.Int32,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMinimapBlockWaypoint(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMinimapComponent(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Please change to void.
            
            p2 appears to be always -1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMinimapRevealed(System.Boolean)">
            <summary>
            If true, the entire map will be revealed.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetNorthYanktonMap(System.Boolean)">
            <summary>
            Toggles the North Yankton map
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.KeyHudColour(System.Boolean,System.Int32)">
            <summary>
            hash collision
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMissionName(System.Boolean,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetCursorSprite(System.Int32)">
            <summary>
            Changes the mouse cursors sprite. 
            1 = Normal
            6 = Left Arrow
            7 = Right Arrow
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ShowCursorThisFrame">
            <summary>
            Shows the cursor on screen for the frame its called.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMpGamerTagIcons(System.Int32,System.Boolean)">
            <summary>
            Displays a bunch of icons above the players name, and level, and their name twice
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMpGamerTagAlpha(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets flags sprite transparency. 0-255.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMpGamerTagChatting(System.Int32,System.String)">
            <summary>
            Sets the string displayed when flag 3 (AudioSpeaker) active.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMpGamerTagColour(System.Int32,System.Int32,System.Int32)">
            <summary>
            Ranges from 0 to 255. 0 is grey health bar, ~50 yellow, 200 purple.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMpGamerTagHealthBarColour(System.Int32,System.Int32)">
            <summary>
            Ranges from 0 to 255. 0 is grey health bar, ~50 yellow, 200 purple.
            Should be enabled as flag (2). Has 0 opacity by default.
            
            - This was _SET_MP_GAMER_TAG_HEALTH_BAR_COLOR,
            - Rockstar use the EU spelling of color so I hashed the same name with COLOUR and it came back as the correct hash, so it has been corrected above.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMpGamerTagName(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMpGamerTagVisibility(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            enum MpGamerTagComponent
            {
              GAMER_NAME = 0,
              CREW_TAG,
              healthArmour,
              BIG_TEXT,
              AUDIO_ICON,
              MP_USING_MENU,
              MP_PASSIVE_MODE,
              WANTED_STARS,
              MP_DRIVER,
              MP_CO_DRIVER,
              MP_TAGGED,
              GAMER_NAME_NEARBY,
              ARROW,
              MP_PACKAGES,
              INV_IF_PED_FOLLOWING,
              RANK_TEXT,
              MP_TYPING
            };
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMpGamerTagWantedLevel(System.Int32,System.Int32)">
            <summary>
            displays wanted star above head
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMultiplayerBankCash">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetNewWaypoint(System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetPauseMenuActive(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.HideSpecialAbilityLockonOperation(System.Int32,System.Boolean)">
            <summary>
            Hash collision
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetAiBlipMaxDistance(System.Int32,System.Single)">
            <summary>
            Previously named _0x97C65887D4B37FA9.
            Sets the maximum view distance for the AI BIP
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetPedEnemyAiBlip(System.Int32,System.Boolean)">
            <summary>
            Previously named _0xD30C50DF888D58B5, this native turns on the AI blip on the specified ped. It also disappears automatically when the ped is too far or if the ped is dead. You dont need to control it with other natives. 
            
            See gtaforums.com/topic/884370-native-research-ai-blips for further information.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetDirectorMode(System.Boolean)">
            <summary>
            If toggle is true, hides special ability bar / character name in the pause menu
            If toggle is false, shows special ability bar / character name in the pause menu
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetRadarAsExteriorThisFrame">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetRadarAsInteriorThisFrame(System.UInt32,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            List of interior hashes: pastebin.com/1FUyXNqY
            Not for every interior zoom  0 available.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetRadarZoom(System.Int32)">
            <summary>
            zoomLevel ranges from 0 to 200 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.RespondingAsTemp(System.Single)">
            <summary>
            Please change back to _0xBD12C5EEE184C33 (hash collision)
            actual native starts with SET_RADAR_ZOOM_...
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetRadarZoomLevelThisFrame(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetTextCentre(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetTextColour(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            colors you input not same as you think?
            A: for some reason its R B G A
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetTextDropshadow(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            distance - shadow distance in pixels, both horizontal and vertical
            r, g, b, a - color
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetTextDropShadow">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetTextFont(System.Int32)">
            <summary>
            fonts that mess up your text where made for number values/misc stuff
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetTextJustification(System.Int32)">
            <summary>
            Types -
            0: Center-Justify
            1: Left-Justify
            2: Right-Justify
            
            Right-Justify requires SET_TEXT_WRAP, otherwise it will draw to the far right of the screen
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetTextLeading(System.Boolean)">
            <summary>
            from script am_mp_yacht.c int?
            ui::set_text_leading(2);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetTextOutline">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetTextRenderId(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetTextRightJustify(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetTextScale(System.Single,System.Single)">
            <summary>
            Size range : 0F to 1.0F
            p0 is unknown and doesnt seem to have an effect, yet in the game scripts it changes to 1.0F sometimes.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetTextWrap(System.Single,System.Single)">
            <summary>
            It sets the text in a specified box and wraps the text if it exceeds the boundries. Both values are for X axis. Useful when positioning text set to center or aligned to the right.
            
            start - left boundry on screen position (0.0 - 1.0)
            end - right boundry on screen position (0.0 - 1.0)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetWarningMessage(System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            You can only use text entries. No custom text.
            
            Example: SET_WARNING_MESSAGE(t20, 3, adder, false, -1, 0, 0, true);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetWarningMessage2(System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            You can only use text entries. No custom text.
            
            24/03/2017 by ins1de :
            
            C# Example :
            Function.Call(Hash._SET_WARNING_MESSAGE_2, HUD_QUIT, HUD_CGIGNORE, 2, HUD_CGINVITE, 0, -1, 0, 0, 1);
            
            @unknown, you can recreate this easily with scaleforms
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetWarningMessage3(System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            You can only use text entries. No custom text.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetWaypointOff">
            <summary>
            This native removes the current waypoint from the map.
            
            Example:
            C#:
            Function.Call(Hash.SET_WAYPOINT_OFF);
            
            C++:
            UI::SET_WAYPOINT_OFF();
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetWidescreenFormat(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipFriend(System.Int32,System.Boolean)">
            <summary>
            Highlights a blip by a half cyan circle.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ShowHeadingIndicatorOnBlip(System.Int32,System.Boolean)">
            <summary>
            Adds the GTA: Online player heading indicator to a blip.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ShowHudComponentThisFrame(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ShowNumberOnBlip(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipFriendly(System.Int32,System.Boolean)">
            <summary>
            Highlights a blip by a cyan color circle.
             
            Color can be changed with SET_BLIP_SECONDARY_COLOUR
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetBlipChecked(System.Int32,System.Boolean)">
            <summary>
            Adds a green checkmark on top of a blip.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetCurrentNotification">
            <summary>
            Returns the handle for the notification currently displayed on the screen.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.RemoveNotification(System.Int32)">
            <summary>
            Removes a notification instantly instead of waiting for it to disappear
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetNotificationBackgroundColor(System.Int32)">
            <summary>
            From the decompiled scripts:
            UI::_92F0DA1E27DB96DC(6);
            UI::_92F0DA1E27DB96DC(184);
            UI::_92F0DA1E27DB96DC(190);
            
            sets background color for the next notification
            6 = red
            184 = green
            190 = yellow
            
            Here is a list of some colors that can be used: gyazo.com/68bd384455fceb0a85a8729e48216e15
            
            this seems to set the alpha to 255 automatically, if you have a work around let me know 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetNotificationFlashColor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            sets color for notification flash
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ClearNotificationsPos(System.Single)">
            <summary>
            _CLEAR_NOTIFICATIONS_POS(0.5f);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ToggleStealthRadar(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.UnlockMinimapAngle">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.UnlockMinimapPosition">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.GetBlipInfoIdPickupIndex(System.Int32)">
            <summary>
            This function is hard-coded to always return 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetTextProportional(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetTextEdge(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.SetMultiplayerHudCash(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.ClearReminderMessage">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.LogDebugInfo(System.String)">
            <summary>
            Not present in retail version of the game, actual definiton seems to be
            _LOG_DEBUG_INFO(const char category, const char debugText);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xCE5D0E5E315DB238(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x311438A071DD9B1A(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xA905192A6781C41B(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xE67C6DFD386EA5E7(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xCC3FDDED67BCFC63">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x60734CC207C9833C(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xF13FE2A80C05C561">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xB2A592B04648A9CB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xD12882D3FF82BF11">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x7792424AA0EAC32E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xE6DE0561D9232A64">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x67EEDEA1B9BAFD94">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xD2B32BE3FC1626C6">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x66E7CB63C97B7D20">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x2708FC083123F9FF">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x551DF99658DB6EE8(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x1EAE6DD17B7A5EFA(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xD8E694757BCEA8E9">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x9245E81072704B8A(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x7669F9E39DC17063">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x402F9ED62087E898">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x82CEDC33687E1F50(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xDD2238F57B977751(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x55F5A5F07134DE60">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xBF4F34A85CA2970C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x8EFCCF6EC66D85E4(System.Int32@,System.Int32@,System.Int32@,System.Boolean,System.Boolean)">
            <summary>
            Example, only occurrence in the scripts:
            UI::_8EFCCF6EC66D85E4(AND_23, AND_13, AND_13, 1, v_34);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x33EE12743CCD6343(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xC8F3AAF93D0600BF(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x7AE0589093A2E088(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xB6871B0555B02996(System.Int32@,System.Int32@,System.Int32,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xCEF214315D276FD1(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x6B1DE27EE78E6A19(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xEE4C0E6DBC6F2C6F">
            <summary>
            Hides the hud element displayed by _0x523A590C1A3CC0D3
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x8817605C2BA76200">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x57D760D55F54E071(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xBA8D65C1C65702E5(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x1121BFA1A1A522A8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x7CD934010E115C2C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x56176892826A4FE8(System.Int32)">
            <summary>
            Returns the current AI BLIP for the specified ped
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x2C173AE2BDB9385E(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x8F08017F9D7C47BD(System.Int32,System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xCA6B2F7CE32AB653(System.Int32,System.Int32@,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x24A49BEAF468DC90(System.Int32,System.Int32@,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xD484BF71050CA1EE(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x01A358D9128B7A86">
            <summary>
            native only found once in appinternet.c4
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xC2D2AD9EAAE265B8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x98C3CF913D895111(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xE3B05614DCE1D014(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x7E17BE53E1AAABAF(System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x052991E59076E4E4(System.UInt32,System.Int32@)">
            <summary>
            p0 was always 0xAE2602A3.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x5FBD7095FE7AE57F(System.Int32,System.Single@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x90A6526CF0381030(System.Int32,System.Int32@,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x36C1451A88A09630(System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xE0130B41D3CF4574">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x632B2940C67F4EA9(System.Int32,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x3F0CF9CB7E589B88">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x5BFF36D6ED83E0AE">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xA238192F33110615(System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x593FEAE1F73392D4">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xA277800A9EAE340E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x2E22FEFA0100275E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xF284AC67940C6812">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x214CD562A939246A">
            <summary>
            example
            
            if (UI::IS_HELP_MESSAGE_BEING_DISPLAYED()AND(!UI::_214CD562A939246A())) {
                    return 0;
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x4A9923385BDB9DAD">
            <summary>
            example:
            
            if (!((v_7)==UI::_4A9923385BDB9DAD())) {
                    UI::SET_BLIP_SPRITE((v_6), (v_7));
                }
            
            
            This function is hard-coded to always return 1.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x20FE7FDFEEAD38C0">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xA4DEDE28B1814289">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x488043841BBE156F">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xA48931185F0536FE">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xA13E93403F26C812(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x72C1056D678BB7D8(System.UInt32)">
            <summary>
            Appears to be a HIDE_ native.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x14C9FDCC41F81F63(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x0AFC4AF510774B47">
            <summary>
            calling this each frame, it stops the player from receiving a weapon via the weapon wheel.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x2432784ACA090DA4(System.Int32)">
            <summary>
            p0 is int or bool
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x3BAB9A4E4F2FF5C7">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x4167EFE0527D706E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x801879A9B4F4B2FB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x3D9ACB1EB139E702">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x4E3CD0EF8A489541">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x6F72CD94F7B5B68C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x9049FE339D5F6F6F">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x9135584D09A3437E">
            <summary>
            return bool according to scripts
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x09C0403ED9A751C2(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x2F057596F2BD0061">
            <summary>
            Appears to return whether the player is using the pause menu store. Cant be sure though.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xAF42195A42C63BBA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x7C226D5346D4D10A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x523A590C1A3CC0D3">
            <summary>
            Shows a hud element for reporting jobs
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x75D3691713C3B05A">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xF47E567B3630DD12(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x6A1738B4323FE2D9(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x77F16B447824DA6C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xCDCA26E80FAECB8F">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xDE03620F8703A9DF">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xC8E1071177A23BE5(System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x359AF31A4B52F5ED">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x13C4B962653A5280">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x84698AB38D0C6636(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x2A25ADC48F87841F">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xC78E239AC5B2DDB9(System.Boolean,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xF06EBB91A81E09E3(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x2DE6C5E2E996F178(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xC65AB383CD91DF98">
            <summary>
            Often called after _REMOVE_LOADING_PROMPT. Unsure what exactly it does, but It references busy_spinner, I can only guess its freeing the busy_spinner scaleform from memory
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x14621BB1DF14E2B2">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x2916A928514C9827">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xC594B315EDF2D4AF(System.Int32)">
            <summary>
            Interesting fact: A hash collision for this is RESET_JETPACK_MODEL_SETTINGS
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x95CF81BD06EE1887">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x6EF54AB721DC6242">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xB99C4E4D9499DF29(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x577599CCED639CA2(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xEE76FF7E6A0166B0(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xC4278F70131BAA6D(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x54318C915D27E4CE(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xB552929B85FC27EC(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xA8B6AFDAC320AC87(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x4B5B620C9B59ED34(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x2C9F302398E13141(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xD1942374085C8469(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x817B86108EB94E51(System.Boolean,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            UI::_817B86108EB94E51(1, AND_189F36._f10CD10/16/, AND_189F36._f10CD11/16/, AND_189F36._f10CD12/16/, AND_189F36._f10CD13/16/, AND_189F36._f10CD14/16/, AND_189F36._f10CD15/16/, AND_189F36._f10CD16/16/, AND_189F36._f10CD17/16/);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x04655F9D075D0AE5(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x2632482FD6B9AB87">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xA17784FCA9548D15(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xCD74233600C4EA6B(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x7679CC1BCEBE3D4C(System.Int32,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x788E7FD431BD67F1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xB094BC1DB4018240(System.Int32,System.Int32,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x784BA7E0ECEB4178(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x2790F4B17D098E26(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x900086F371220B6F(System.Boolean,System.Int32,System.Int32)">
            <summary>
            SET_GPS_???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x3DDA37128DD1ACA8(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x3F5CC444DCAAA8F2(System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xB9C362BABECDDC7A(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x06A320535F5F0248(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x975D66A0BC17064C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x62E849B7EB28E770(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x0923DBF87DFF735E(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x71BDB63DBAF8DA59(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x35EDD5B2E3FF01C0">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xE45087D85F468BC2(System.Boolean,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x98215325A695E78A(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x9C16459B2324B2CF(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xC2D15BEF167E27BC">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x3CA6050692BC61B0(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xECF128344E9FF9F1(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x0C4BBF625CA98C4E(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xE52B8E7F85D39A08(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xFCFACD0DB9D7A57D(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xB13DCB4C6FAAD238(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x7B21E0BB01E8224A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x41350B4FC28E3941(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x1EAC5F91BCBC5073(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xF98E4B3E56AFC7B1(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x25615540D894B814(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x0CF54F20DE43879C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xD68A5FF8A3A89874(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x16A304E6CB2BFAB9(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x9E778248D6685FE0(System.String)">
            <summary>
            UI::0x7AD67C95(Gallery);
            UI::0x7AD67C95(Missions);
            UI::0x7AD67C95(General);
            UI::0x7AD67C95(Playlists);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x1185A8087587322C(System.Boolean)">
            <summary>
            SET_TEXT_??? - Used in golf and golf_mp
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x6CDD58146A436083(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xDAF87174BE7454FF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x0C5A80A9E096D529(System.Int32,System.Int32@,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x15803FEC3B9A872B(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x60E892BA4F5BDCA4">
            <summary>
            Something with Social Club or online.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xDCFB5D4DB8BF367E(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x75A16C3DA34F1245(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xF1A6C18B35BCADE6(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xDB34E8D56FC13B08(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x3D3D15AF7BCAAF83(System.Int32,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xBA751764F0821256">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xEC9264727EEC0F28">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xADED7F5748ACAFE6">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x56C8B608CFD49854">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x80FE4F3AB4E1B62A">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xA8FDB297A8D25FBA">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x583049884A2EEE3C">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xA13C11E1B5C06BFC">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xFDEC055AB549E328">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x32888337579A5970">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x25F87B30C382FCA7">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xA9CBFD40B3FA3010">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x6F1554B0CC2089FA(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xFDB423997FA30340">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xB695E2CD0A2DA9EE">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xD4438C0564490E63">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xFDD85225B2DEA55E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xE1CD1E48E025E661">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x17AD8C9706BDD88A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xBAE4F9B97CD43B30(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x4A0C7C9BB10ABB36(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x15CFA549788D35EF">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x317EBA71D7543F52(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            From the decompiled scripts, called 61 times:
            UI::_317EBA71D7543F52(AND_13, AND_13, AND_3, AND_3);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x72DD432F3CDFC0EE(System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x170F541E1CADD1DE(System.Boolean)">
            <summary>
            Related to displaying cash on the HUD
            Always called before UI::_SET_SINGLEPLAYER_HUD_CASH in decompiled scripts
            </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x0C698D8F099174C7(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0xD2049635DEB9C375">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Ui.Unknown._0x211C4EF450086857">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Utils">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Utils.Ceil(System.Single)">
            <summary>
            Im guessing this rounds a float value up to the next whole number, and FLOOR rounds it down
            </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Cos(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Floor(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Pow(System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Round(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Settimera(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Settimerb(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.ShiftLeft(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.ShiftRight(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Sin(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Sqrt(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Timera">
            <summary>
            Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Timerb">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Timestep">
            <summary>
            Gets the current frame time.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.ToFloat(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Vdist2(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculates distance between vectors but does not perform Sqrt operations. (Its way faster)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Vdist(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculates distance between vectors.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Vmag2(System.Single,System.Single,System.Single)">
            <summary>
            Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Vmag(System.Single,System.Single,System.Single)">
            <summary>
            Calculates the magnitude of a vector.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.StartNewScript(System.String,System.Int32)">
            <summary>
            Examples:
             g_384A = SYSTEM::START_NEW_SCRIPT(cellphone_flashhand, 1424);
             l_10D = SYSTEM::START_NEW_SCRIPT(taxiService, 1828);
             SYSTEM::START_NEW_SCRIPT(AM_MP_YACHT, 5000);
             SYSTEM::START_NEW_SCRIPT(emergencycall, 512);
             SYSTEM::START_NEW_SCRIPT(emergencycall, 512); 
             SYSTEM::START_NEW_SCRIPT(FM_maintain_cloud_header_data, 1424);
             SYSTEM::START_NEW_SCRIPT(FM_Mission_Controller, 31000);
             SYSTEM::START_NEW_SCRIPT(tennis_family, 3650);
             SYSTEM::START_NEW_SCRIPT(Celebrations, 3650);
            
            Decompiled examples of usage when starting a script:
             
                SCRIPT::REQUEST_SCRIPT(a_0);
                if (SCRIPT::HAS_SCRIPT_LOADED(a_0)) {
                    SYSTEM::START_NEW_SCRIPT(a_0, v_3);
                    SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(a_0);
                    return 1;
                }
             
            or:
            
                v_2 = MrsPhilips2;
                SCRIPT::REQUEST_SCRIPT(v_2);
                while (!SCRIPT::HAS_SCRIPT_LOADED(v_2)) {
                SCRIPT::REQUEST_SCRIPT(v_2);
                SYSTEM::WAIT(0);
                }
                sub_8792(36);
                SYSTEM::START_NEW_SCRIPT(v_2, 17000);
                SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(v_2);
            
            All native script names: pastebin.com/K9adDsu4 and pastebin.com/yLNWicUi
            </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.StartNewScriptWithArgs(System.String,System.Int32@,System.Int32,System.Int32)">
            <summary>
            return : script thread id, 0 if failed
            Pass pointer to struct of args in p1, size of struct goes into p2
            </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.StartNewScriptWithNameHash(System.UInt32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.StartNewScriptWithNameHashAndArgs(System.UInt32,System.Int32@,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Wait(System.Int32)">
            <summary>
            Pauses execution of the current script, please note this behavior is only seen when called from one of the game script files(ysc). In order to wait an asi script use 
                static void WAIT(DWORD time);
            found in main.h 
            
            --------------------------------------------------------------------
            It does not actually seem to wait the amount of milliseconds stated like the normal WAIT() command does, but it does seem to make task sequences work more smoothly
            
            System native hashes do not change on gameupdate
            </summary>				
        </member>
        <member name="M:RAGE.Game.Utils.Unknown._0x42B65DEEF2EDF2A1(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Vehicle">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Vehicle.AddVehicleStuckCheckWithWarp(System.Int32,System.Single,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.AddVehicleUpsidedownCheck(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.AreAllVehicleWindowsIntact(System.Int32)">
            <summary>
            Appears to return false if any window is broken.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.AreAnyVehicleSeatsFree(System.Int32)">
            <summary>
            Returns false if every seat is occupied.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.ArePropellersUndamaged(System.Int32)">
            <summary>
            Found this in the decompiled scripts, Id do more research before changing the name --
            
            if (!ENTITY::IS_ENTITY_DEAD(l_1911)) {
                if (!VEHICLE::_755D6D5267CBBD7E(l_1911)) {
                    sub_1ba80(TRAFFICKING AIR: FAILING - PROPELLERS ARE DAMAGED);
                    l_12CE = 9;
                }
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.AreVehicleWingsIntact(System.Int32)">
            <summary>
            ADD_A_MARKER_OVER_VEHICLE was a hash collision!!!
            
            Can be used for planes only!
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.AttachVehicleToCargobob(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.AttachVehicleToTowTruck(System.Int32,System.Int32,System.Boolean,System.Single,System.Single,System.Single)">
            <summary>
            HookOffset defines where the hook is attached. leave at 0 for default attachment.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.AttachVehicleToTrailer(System.Int32,System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleHalt(System.Int32,System.Single,System.Int32,System.Boolean)">
            <summary>
            This native makes the vehicle stop immediately, as happens when we enter a MP garage.
            
            . distance defines how far it will travel until stopping. Garage doors use 3.0.
            
            . If killEngine is set to 1, you cannot resume driving the vehicle once it stops. This looks like is a bitmapped integer.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetBoatAnchor(System.Int32)">
            <summary>
            Console Hash: 0xE97A4F5E
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.CanShuffleSeat(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.ClearVehicleCustomPrimaryColour(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.ClearVehicleCustomSecondaryColour(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.CloseBombBayDoors(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.ControlLandingGear(System.Int32,System.Int32)">
            <summary>
            Works for vehicles with a retractable landing gear
            
            landing gear states:
            
            0: Deployed
            1: Closing
            2: Opening
            3: Retracted
            
            what can I use to make the hydra thing forward?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.CreateMissionTrain(System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Train models HAVE TO be loaded (requested) before you use this.
            For variation 15 - request:
            
            freight
            freightcar
            freightgrain
            freightcont1
            freightcont2
            freighttrailer
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.CreatePickUpRopeForCargobob(System.Int32,System.Int32)">
            <summary>
            Drops the Hook/Magnet on a cargobob
            
            state
            enum eCargobobHook
            {
              CARGOBOB_HOOK = 0,
                CARGOBOB_MAGNET = 1,
            };
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.CreateScriptVehicleGenerator(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Creates a script vehicle generator at the given coordinates. Most parameters after the model hash are unknown.
            
            Parameters:
            x/y/z - Generator position
            heading - Generator heading
            p4 - Unknown (always 5.0)
            p5 - Unknown (always 3.0)
            modelHash - Vehicle model hash
            p7/8/9/10 - Unknown (always -1)
            p11 - Unknown (usually TRUE, only one instance of FALSE)
            p12/13 - Unknown (always FALSE)
            p14 - Unknown (usally FALSE, only two instances of TRUE)
            p15 - Unknown (always TRUE)
            p16 - Unknown (always -1)
            
            Vector3 coords = GET_ENTITY_COORDS(PLAYER_PED_ID(), 0);    CREATE_SCRIPT_VEHICLE_GENERATOR(coords.x, coords.y, coords.z, 1.0f, 5.0f, 3.0f, GET_HASH_KEY(adder), -1. -1, -1, -1, -1, true, false, false, false, true, -1);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.CreateVehicle(System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            p6 - last parameter does not mean vehicle handle is returned
            maybe a quick view in disassembly will tell us what is actually does
            
            
            p6 seems to check for something with the script in the disassembly
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DeleteAllTrains">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DeleteMissionTrain(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DeleteScriptVehicleGenerator(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DeleteVehicle(System.Int32@)">
            <summary>
            Deletes a vehicle.
            The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
            
            eg how to use:
            SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
            DELETE_VEHICLE(ANDehicle);
            
            Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DetachVehicleFromAnyCargobob(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DetachVehicleFromAnyTowTruck(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DetachVehicleFromCargobob(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DetachVehicleFromTowTruck(System.Int32,System.Int32)">
            <summary>
            First two parameters swapped. Scripts verify that towTruck is the first parameter, not the second.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DetachVehicleFromTrailer(System.Int32)">
            <summary>
            Public Sub detatchTrailer(vh1 As Vehicle)
                    Native.Function.Call(Hash.DETACH_VEHICLE_FROM_TRAILER, vh1)
                End Sub
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DisablePlaneAileron(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            hash collision??? - Dont think so. I fits alphabetically and it used with a plane in the scripts
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DisableVehicleWeapon(System.Boolean,System.UInt32,System.Int32,System.Int32)">
            <summary>
            how does this work?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DoesCargobobHavePickupMagnet(System.Int32)">
            <summary>
            Returns true only when the magnet is active, will return false if the hook is active
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DoesCargobobHavePickUpRope(System.Int32)">
            <summary>
            Returns true only when the hook is active, will return false if the magnet is active
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DoesExtraExist(System.Int32,System.Int32)">
            <summary>
            Checks via CVehicleModelInfo
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DoesScriptVehicleGeneratorExist(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DoesVehicleExistWithDecorator(System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DoesVehicleHaveRoof(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DoesVehicleHaveStuckVehicleCheck(System.Int32)">
            <summary>
            Maximum amount of vehicles with vehicle stuck check appears to be 16.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DoesVehicleHaveWeapons(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.ExplodeVehicle(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Explodes a selected vehicle.
            
            Vehicle vehicle = Vehicle you want to explode.
            BOOL isAudible = If explosion makes a sound.
            BOOL isInvisible = If the explosion is invisible or not.
            
            First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.ExplodeVehicleInCutscene(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleAttachedToEntity(System.Int32)">
            <summary>
            Get the vehicle attached to the object/entity? May also just convert it to a vehicle, but Im not sure.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.FixVehicleWindow(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetAllVehicles(System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetAreBombBayDoorsOpen(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetCargobobHookPosition(System.Int32)">
            <summary>
            Gets the position of the cargobob hook, in world coords.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.HasVehicleJumpingAbility(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetClosestVehicle(System.Single,System.Single,System.Single,System.Single,System.UInt32,System.Int32)">
            <summary>
            Example usage
            VEHICLE::GET_CLOSEST_VEHICLE(x, y, z, radius, hash, unknown leave at 70) 
            
            x, y, z: Position to get closest vehicle to.
            radius: Max radius to get a vehicle.
            modelHash: Limit to vehicles with this model. 0 for any.
            flags: The bitwise flags altering the functions behaviour.
            
            Does not return police cars or helicopters.
            
            It seems to return police cars for me, does not seem to return helicopters, planes or boats for some reason
            
            Only returns non police cars and motorbikes with the flag set to 70 and modelHash to 0. ModelHash seems to always be 0 when not a modelHash in the scripts, as stated above. 
            
            These flags were found in the b617d scripts: 0,2,4,6,7,23,127,260,2146,2175,12294,16384,16386,20503,32768,67590,67711,98309,100359.
            Converted to binary, each bit probably represents a flag as explained regarding another native here: gtaforums.com/topic/822314-guide-driving-styles
            
            Conversion of found flags to binary: pastebin.com/kghNFkRi
            
            At exactly 16384 which is 0100000000000000 in binary and 4000 in hexadecimal only planes are returned. 
            
            Its probably more convenient to use worldGetAllVehicles(int arr, int arrSize) and check the shortest distance yourself and sort if you want by checking the vehicle type with for example VEHICLE::IS_THIS_MODEL_A_BOAT
            
            -------------------------------------------------------------------------
            
            Conclusion: This native is not worth trying to use. Use something like this instead: pastebin.com/xiFdXa7h
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetConvertibleRoofState(System.Int32)">
            <summary>
            0 - up
            1 - lowering down
            2 - down
            3 - raising up
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetCurrentPlaybackForVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetDisplayNameFromVehicleModel(System.UInt32)">
            <summary>
            Returns model name of vehicle in all caps. Needs to be displayed through localizing text natives to get proper display name.
            -----------------------------------------------------------------------------------------------------------------------------------------
            While often the case, this does not simply return the model name of the vehicle (which could be hashed to return the model hash). Variations of the same vehicle may also use the same display name.
            -----------------------------------------------------------------------------------------------------------------------------------------
            
            Returns CARNOTFOUND if the hash doesnt match a vehicle hash.
            
            Using UI::_GET_LABEL_TEXT, you can get the localized name.
            
            For a full list, see here: pastebin.com/wvpyS4kS (pastebin.com/dA3TbkZw)
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleDamaged(System.Int32)">
            <summary>
            Appears to return true if the vehicle has any damage, including cosmetically.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetEntityAttachedToTowTruck(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetEntryPositionOfDoor(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleSuspensionHeight(System.Int32)">
            <summary>
            Gets the height of the vehicles suspension.
            The higher the value the lower the suspension. Each 0.002 corresponds with one more level lowered.
            0.000 is the stock suspension.
            0.008 is Ultra Suspension.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetHasLowerableWheels(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.HasVehicleRocketBoost(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetHeliMainRotorHealth(System.Int32)">
            <summary>
            Max 1000.
            At 0 the main rotor will stall.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetHeliEngineHealth(System.Int32)">
            <summary>
            Max 1000.
            At -100 both helicopter rotors will stall.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetHeliTailRotorHealth(System.Int32)">
            <summary>
            Max 1000.
            At 0 the tail rotor will stall.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DoesVehicleHaveDoor(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetIsLeftVehicleHeadlightDamaged(System.Int32)">
            <summary>
            From the drivers perspective, is the left headlight broken.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetIsRightVehicleHeadlightDamaged(System.Int32)">
            <summary>
            From the drivers perspective, is the right headlight broken.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetIsVehicleEngineRunning(System.Int32)">
            <summary>
            Returns true when in a vehicle, false whilst entering/exiting.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetIsVehiclePrimaryColourCustom(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetIsVehicleSecondaryColourCustom(System.Int32)">
            <summary>
            Check if Vehicle Secondary is avaliable for customize
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetLandingGearState(System.Int32)">
            <summary>
            landing gear states:
            
            0: Deployed
            1: Closing
            2: Opening
            3: Retracted
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetLastDrivenVehicle">
            <summary>
            Not exactly sure on this one, but heres a snippet of code:
            
            if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
                v_2 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0);
            } else { 
                v_2 = VEHICLE::_B2D06FAEDE65B577();
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetLastPedInVehicleSeat(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetLiveryName(System.Int32,System.Int32)">
            <summary>
            Second Param = LiveryIndex
            
            example 
            
            int count = VEHICLE::GET_VEHICLE_LIVERY_COUNT(veh);
            for (int i = 0; i  count; i++)  
              {
                 const char LiveryName = VEHICLE::GET_LIVERY_NAME(veh, i);
              }
            
            
            this example will work fine to fetch all names 
            for example for Sanchez we get 
            
            SANC_LV1
            SANC_LV2
            SANC_LV3
            SANC_LV4
            SANC_LV5
            
            
            Use _GET_LABEL_TEXT, to get the localized livery name.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetModSlotName(System.Int32,System.Int32)">
            <summary>
            Returns the name for the type of vehicle mod(Armour, engine etc)
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetModTextLabel(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the text label of a mod type for a given vehicle
            
            Use _GET_LABEL_TEXT to get the part name in the games language
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetNumberOfVehicleColours(System.Int32)">
            <summary>
            Actually number of color combinations
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetNumberOfVehicleDoors(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetNumberOfVehicleNumberPlates">
            <summary>
            Returns the number of types of licence plates, enumerated below in SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetNumModColors(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetNumModKits(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetNumVehicleMods(System.Int32,System.Int32)">
            <summary>
            Returns how many possible mods a vehicle has for a given mod type
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetNumVehicleWindowTints">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetPedInVehicleSeat(System.Int32,System.Int32,System.Int32)">
            <summary>
            -1 (driver) = index  GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetPedUsingVehicleDoor(System.Int32,System.Int32)">
            <summary>
            Quick disassembly and test seems to indicate that this native gets the Ped currently using the specified door.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetPositionInRecording(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetPositionOfVehicleRecordingAtTime(System.Int32,System.Single,System.String)">
            <summary>
            p1 is some kind of tolerance
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetRandomVehicleBackBumperInSphere(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetRandomVehicleFrontBumperInSphere(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetRandomVehicleInSphere(System.Single,System.Single,System.Single,System.Single,System.UInt32,System.Int32)">
            <summary>
            Gets a random vehicle in a sphere at the specified position, of the specified radius.
            
            x: The X-component of the position of the sphere.
            y: The Y-component of the position of the sphere.
            z: The Z-component of the position of the sphere.
            radius: The radius of the sphere. Max is 9999.9004.
            modelHash: The vehicle model to limit the selection to. Pass 0 for any model.
            flags: The bitwise flags that modifies the behaviour of this function.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetRotationOfVehicleRecordingAtTime(System.Int32,System.Single,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetTimePositionInRecording(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetTotalDurationOfVehicleRecording(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetTotalDurationOfVehicleRecordingId(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetTrainCarriage(System.Int32,System.Int32)">
            <summary>
            Corrected p1. its basically the carriage/trailer number. So if the train has 3 trailers youd call the native once with a var or 3 times with 1, 2, 3.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleAcceleration(System.Int32)">
            <summary>
            static - max acceleration
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleAttachedToCargobob(System.Int32)">
            <summary>
            Returns attached vehicle (Vehicle in parameter must be cargobob)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleBodyHealth(System.Int32)">
            <summary>
            Seems related to vehicle health, like the one in IV.
            Max 1000, min 0.
            Vehicle does not necessarily explode or become undrivable at 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleBombs(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.CanVehicleParachuteBeActivated(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleCauseOfDestruction(System.Int32)">
            <summary>
            iVar3 = get_vehicle_cause_of_destruction(uLocal_248iVar2);
            if (iVar3 == joaat(weapon_stickybomb))
            {
                 func_171(726);
                 iLocal_260 = 1;
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleClass(System.Int32)">
            <summary>
            Returns an int
            
            Vehicle Classes:
            0: Compacts
            1: Sedans
            2: SUVs
            3: Coupes
            4: Muscle
            5: Sports Classics
            6: Sports
            7: Super
            8: Motorcycles
            9: Off-road
            10: Industrial
            11: Utility
            12: Vans
            13: Cycles
            14: Boats
            15: Helicopters
            16: Planes
            17: Service
            18: Emergency
            19: Military
            20: Commercial
            21: Trains
            
            char buffer128;
            std::sprintf(buffer, VEH_CLASS_%i, VEHICLE::GET_VEHICLE_CLASS(vehicle));
            
            const char className = UI::_GET_LABEL_TEXT(buffer);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleClassFromName(System.UInt32)">
            <summary>
            For a full enum, see here : pastebin.com/i2GGAjY0
            
            char buffer128;
            std::sprintf(buffer, VEH_CLASS_%i, VEHICLE::GET_VEHICLE_CLASS_FROM_NAME (hash));
            
            const char className = UI::_GET_LABEL_TEXT(buffer);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleClassMaxAcceleration(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleClassMaxAgility(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleClassMaxBraking(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleClassMaxTraction(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleColor(System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Whats this for? Primary and Secondary RGB have their own natives and this one doesnt seem specific.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleColours(System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleColourCombination(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleCountermeasures(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleCustomPrimaryColour(System.Int32,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleCustomSecondaryColour(System.Int32,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleDeformationAtPos(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            The only example I can find of this function in the scripts, is this:
            
            struct _s = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(rPtr((A_0) + 4), 1.21f, 6.15f, 0.3f);
            
            -----------------------------------------------------------------------------------------------------------------------------------------
            PC scripts:
            
            v_5/{3}/ = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(a_0._f1, 1.21, 6.15, 0.3);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleDirtLevel(System.Int32)">
            <summary>
            Dirt level 0..15
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleDoorsLockedForPlayer(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleDoorAngleRatio(System.Int32,System.Int32)">
            <summary>
            example in vb:
                Public Shared Function Get_Vehicle_Door_Angle(Vehicle As Vehicle, Door As VehicleDoor) As Single
                    Return Native.Function.Call(Of Single)(Hash.GET_VEHICLE_DOOR_ANGLE_RATIO, Vehicle.Handle, Door)
                End Function
            
            Im Not MentaL
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleDoorLockStatus(System.Int32)">
            <summary>
            2 seems to disable getting vehicle in modshop
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleEngineHealth(System.Int32)">
            <summary>
            Returns 1000.0 if the function is unable to get the address of the specified vehicle or if its not a vehicle.
            
            Minimum: -4000
            Maximum: 1000
            
            -4000: Engine is destroyed
            0 and below: Engine catches fire and health rapidly declines
            300: Engine is smoking and losing functionality
            1000: Engine is perfect
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleEnveffScale(System.Int32)">
            <summary>
            formerly known as _GET_VEHICLE_PAINT_FADE
            
            The result is a value from 0-1, where 0 is fresh paint.
            -----------------------------------------------------------------------
            The actual value isnt stored as a float but as an unsigned char (BYTE).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleExtraColours(System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleInteriorColour(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleDashboardColour(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleHoverModePercentage(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.HasVehicleParachute(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleBodyHealth2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            0 min 100 max
            starts at 100
            Seams to have health zones
            Front of vehicle when damaged goes from 100-50 and stops at 50.
            Rear can be damaged from 100-0
            Only tested with two cars.
            
            any idea how this differs from the first one?
            
            --
            May return the vehicle health on a scale of 0.0 - 100.0 (needs to be confirmed)
            
            example:
            
            v_F = ENTITY::GET_ENTITY_MODEL(v_3);
            if (((v_F == ${tanker}) OR (v_F == ${armytanker})) OR (v_F == ${tanker2})) {
                if (VEHICLE::_GET_VEHICLE_BODY_HEALTH_2(v_3) = 1.0) {
                    NETWORK::NETWORK_EXPLODE_VEHICLE(v_3, 1, 1, -1);
                }
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleLayoutHash(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleLightsState(System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleLivery(System.Int32)">
            <summary>
            -1 = no livery
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleLiveryCount(System.Int32)">
            <summary>
            Returns -1 if the vehicle has no livery
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleOwner(System.Int32,System.Int32@)">
            <summary>
            The resulting entity can be a Vehicle or Ped.
            
            The native is stored between GET_VEHICLE_LIVERY_COUNT and GET_VEHICLE_MAX_BRAKING so the actual name is either GET_VEHICLE_L or GET_VEHICLE_M
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleMaxBraking(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleMaxNumberOfPassengers(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleMaxTraction(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleMod(System.Int32,System.Int32)">
            <summary>
            In b944, there are 50 (0 - 49) mod types.
            
            Returns -1 if the vehicle mod is stock
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleModelAcceleration(System.UInt32)">
            <summary>
            Returns the acceleration of the specified model.
            
            For a full list, see here: pastebin.com/GaN6vT4R
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleModelMaxSpeed(System.UInt32)">
            <summary>
            Returns max speed (without mods) of the specified vehicle model in m/s.
            
            For a full list, see here: pastebin.com/AUuHHK06
            
            GET_VEHICLE_MODEL_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleModelMaxBraking(System.UInt32)">
            <summary>
            Returns max braking of the specified vehicle model.
            
            For a full list, see here: pastebin.com/3N8DVbpG
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleModelMaxTraction(System.UInt32)">
            <summary>
            Returns max traction of the specified vehicle model.
            
            For a full list, see here: pastebin.com/ERnntVjK
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleModelNumberOfSeats(System.UInt32)">
            <summary>
            Returns max number of passengers (including the driver) for the specified vehicle model.
            
            For a full list, see here: pastebin.com/MdETCS1j
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleModColor1(System.Int32,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleModColor1Name(System.Int32,System.Boolean)">
            <summary>
            returns a string which is the codename of the vehicles currently selected primary color
            
            p1 is always 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleModColor2(System.Int32,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleModColor2Name(System.Int32)">
            <summary>
            returns a string which is the codename of the vehicles currently selected secondary color
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleModData(System.Int32,System.Int32,System.Int32)">
            <summary>
            Can be used for IS_DLC_VEHICLE_MOD and _0xC098810437312FFF
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleModKit(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleModKitType(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleModModifierValue(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleModVariation(System.Int32,System.Int32)">
            <summary>
            Only used for wheels(ModType = 23/24) Returns true if the wheels are custom wheels
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleNeonLightsColour(System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets the color of the neon lights of the specified vehicle.
            
            See _SET_VEHICLE_NEON_LIGHTS_COLOUR (0x8E0A582209A62695) for more information
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleNeonLightEnabled(System.Int32,System.Int32)">
            <summary>
            indices:
            0 = Left
            1 = Right
            2 = Front
            3 = Back
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleNumberOfPassengers(System.Int32)">
            <summary>
            Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to also check for the driver
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleNumberPlateText(System.Int32)">
            <summary>
            Returns the license plate text from a vehicle.  8 chars maximum.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleNumberPlateTextIndex(System.Int32)">
            <summary>
            Returns the PlateType of a vehicle
                  Blue_on_White_1 = 3,
                  Blue_on_White_2 = 0,
                  Blue_on_White_3 = 4,
                  Yellow_on_Blue = 2,
                   Yellow_on_Black = 1,
                  North_Yankton = 5,
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehiclePetrolTankHealth(System.Int32)">
            <summary>
            1000 is max health
            Begins leaking gas at around 650 health
            -999.90002441406 appears to be minimum health, although nothing special occurs
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehiclePlateType(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleRecordingId(System.Int32,System.String)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleTrailerVehicle(System.Int32,System.Int32@)">
            <summary>
            Gets the trailer of a vehicle and puts it into the trailer parameter.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleTyresCanBurst(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleTyreSmokeColor(System.Int32,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleWheelType(System.Int32)">
            <summary>
            Returns an int
            
            Wheel Types:
            0: Sport
            1: Muscle
            2: Lowrider
            3: SUV
            4: Offroad
            5: Tuner
            6: Bike Wheels
            7: High End
            
            Tested in Los Santos Customs
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetVehicleWindowTint(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.HasPreloadModsFinished(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.HasVehicleAssetLoaded(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.HasVehicleRecordingBeenLoaded(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleModLoadDone(System.Int32)">
            <summary>
            Returns whether or not the vehicle has a CVehicleStreamRequestGfx thats trying to load mods.
            
            True if it isnt loading mods, false if it is.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.AnyPassengersRappeling(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsAnyVehicleNearPoint(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsBigVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsCopVehicleInArea3d(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Usage:
            
            public bool isCopInRange(Vector3 Location, float Range)
                    {
                        return Function.Callbool(Hash.IS_COP_PED_IN_AREA_3D, Location.X - Range, Location.Y - Range, Location.Z - Range, Location.X + Range, Location.Y + Range, Location.Z + Range);
                    }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleNearEntity(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsHeliPartBroken(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.VehicleHasLandingGear(System.Int32)">
            <summary>
            Vehicle has landing gear?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsPlaybackGoingOnForVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsPlaybackUsingAiGoingOnForVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleRocketBoostActive(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsTaxiLightOn(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsThisModelAnAmphibiousCar(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsThisModelABicycle(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsThisModelABike(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsThisModelABoat(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsThisModelACar(System.UInt32)">
            <summary>
            To check if the model is an amphibious car, see gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-33#entry1069317363 (for build 944 and above only!)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsThisModelAHeli(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsThisModelAnEmergencyBoat(System.UInt32)">
            <summary>
            Checks if model is a boat, then checks an additional flag.
            
            Returns true for these models:
            PREDATOR
            SEASHARK2
            SPEEDER
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsThisModelAPlane(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsThisModelAQuadbike(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsThisModelATrain(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsToggleModOn(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleAlarmActivated(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleAttachedToCargobob(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleAttachedToTowTruck(System.Int32,System.Int32)">
            <summary>
            Scripts verify that towTruck is the first parameter, not the second.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleAttachedToTrailer(System.Int32)">
            <summary>
            Public Function isVehicleAttachedToTrailer(vh As Vehicle) As Boolean
                    Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_ATTACHED_TO_TRAILER, vh)
                End Function
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleAConvertible(System.Int32,System.Boolean)">
            <summary>
            p1 is false almost always.
            
            However, in launcher_carwash/carwash1/carwash2 scripts, p1 is true and is accompanied by DOES_VEHICLE_HAVE_ROOF 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleBumperBrokenOff(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleDoorDamaged(System.Int32,System.Int32)">
            <summary>
            doorID starts at 0, not seeming to skip any numbers. Four door vehicles intuitively range from 0 to 3.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleDoorFullyOpen(System.Int32,System.Int32)">
            <summary>
            doorIndex:
            0 = Front Left Door
            1 = Front Right Door
            2 = Back Left Door
            3 = Back Right Door
            4 = Hood
            5 = Trunk
            6 = Trunk2
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleDriveable(System.Int32,System.Boolean)">
            <summary>
            p1 is always 0 in the scripts.
            
            p1 = check if vehicle is on fire
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleExtraTurnedOn(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleHighDetail(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleInBurnout(System.Int32)">
            <summary>
            Returns whether the specified vehicle is currently in a burnout.
            
            
            vb.net
            Public Function isVehicleInBurnout(vh As Vehicle) As Boolean
                    Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_IN_BURNOUT, vh)
                End Function
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleInGarageArea(System.String,System.Int32)">
            <summary>
            garageName example Michael - Beverly Hills
            
            For a full list, see here: pastebin.com/73VfwsmS
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleModel(System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleOnAllWheels(System.Int32)">
            <summary>
             Public Function isVehicleOnAllWheels(vh As Vehicle) As Boolean
                    Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_ON_ALL_WHEELS, vh)
                End Function
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleSearchlightOn(System.Int32)">
            <summary>
            Possibly: Returns whether the searchlight (found on police vehicles) is toggled on.
            
            @Author Nac
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleSeatFree(System.Int32,System.Int32,System.Int32)">
            <summary>
            Has an additional BOOL parameter since version ???.
            
            Check if a vehicle seat is free.
            -1 being the driver seat.
            Use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 for last seat index.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleSirenSoundOn(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleSirenOn(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleShopResprayAllowed(System.Int32)">
            <summary>
            Checks some flag in the vehicles model. If this function returns false, mod shops will not allow respray. it checks for FLAG_NO_RESPRAY
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleStolen(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleStopped(System.Int32)">
            <summary>
            Returns true if the vehicles current speed is less than, or equal to 0.0025f.
            
            For some vehicles it returns true if the current speed is = 0.00039999999.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleStoppedAtTrafficLights(System.Int32)">
            <summary>
            is this for red lights only?  more testing required.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleStuckOnRoof(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleStuckTimerUp(System.Int32,System.Int32,System.Int32)">
            <summary>
            p1 can be anywhere from 0 to 3 in the scripts. p2 is generally somewhere in the 1000 to 10000 range.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleTyreBurst(System.Int32,System.Int32,System.Boolean)">
            <summary>
            wheelID used for 4 wheelers seem to be (0, 1, 4, 5)
            completely - is to check if tire completely gone from rim.
            
            0 = wheel_lf / bike, plane or jet front
            1 = wheel_rf
            2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
            3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
            4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
            5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
            45 = 6 wheels trailer mid wheel left
            47 = 6 wheels trailer mid wheel right
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleVisible(System.Int32)">
            <summary>
            must be called after TRACK_VEHICLE_VISIBILITY 
            
            its not instant so probabilly must pass an update to see correct result.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.IsVehicleWindowIntact(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.LowerConvertibleRoof(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleEnginePowerMultiplier(System.Int32,System.Single)">
            <summary>
            Vehicle power multiplier.
            Does not have to be looped each frame. Can be set once.
            Values lower than 1f dont work.
            
            Note: If the value is set with GET_RANDOM_FLOAT_IN_RANGE, the vehicle will have an absurdly high ammount of power, and will become almost undrivable for the player or NPCs. The range doesnt seem to matter.
            
            An high value like 10000000000f will visually remove the wheels that apply the power (front wheels for FWD, rear wheels for RWD), but the power multiplier will still apply, and the wheels still work.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.OpenBombBayDoors(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.PausePlaybackRecordedVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.EjectJb700Roof(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DetachVehicleWindscreen(System.Int32)">
            <summary>
            Detaches the vehicles windscreen.
            For further information, see : gtaforums.com/topic/859570-glass/#entry1068894566
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.PreloadVehicleMod(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RaiseConvertibleRoof(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.ReleasePreloadMods(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RemovePickUpRopeForCargobob(System.Int32)">
            <summary>
            Retracts the hook on the cargobob.
            
            Note: after you retract it the natives for dropping the hook no longer work
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RemoveVehiclesFromGeneratorsInArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RemoveVehicleAsset(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RemoveVehicleHighDetailModel(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RemoveVehicleMod(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RemoveVehicleRecording(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RemoveVehicleStuckCheck(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RemoveVehicleUpsidedownCheck(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RemoveVehicleWindow(System.Int32,System.Int32)">
            <summary>
            windowIndex:
            0 = Front Right Window
            1 = Front Left Window
            2 = Back Right Window
            3 = Back Left Window
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RequestVehicleAsset(System.UInt32,System.Int32)">
            <summary>
            REQUEST_VEHICLE_ASSET(GET_HASH_KEY(cargobob3), 3);
            
            vehicle found that have assets:
            cargobob3
            submersible
            blazer
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RequestVehicleHighDetailModel(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RequestVehicleRecording(System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.ResetVehicleStuckTimer(System.Int32,System.Int32)">
            <summary>
            The inner function has a switch on the second parameter. Its the stuck timer index.
            
            Heres some pseudo code I wrote for the inner function:
            void __fastcall NATIVE_RESET_VEHICLE_STUCK_TIMER_INNER(CUnknown unknownClassInVehicle, int timerIndex)
            {
             switch (timerIndex)
               {
             case 0:
                   unknownClassInVehicle-FirstStuckTimer = (WORD)0u;
             case 1:
                   unknownClassInVehicle-SecondStuckTimer = (WORD)0u;
                case 2:
                   unknownClassInVehicle-ThirdStuckTimer = (WORD)0u;
             case 3:
                   unknownClassInVehicle-FourthStuckTimer = (WORD)0u;
                case 4:
                   unknownClassInVehicle-FirstStuckTimer = (WORD)0u;
                 unknownClassInVehicle-SecondStuckTimer = (WORD)0u;
                    unknownClassInVehicle-ThirdStuckTimer = (WORD)0u;
                 unknownClassInVehicle-FourthStuckTimer = (WORD)0u;
                    break;
                };
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.ResetVehicleWheels(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RollDownWindow(System.Int32,System.Int32)">
            <summary>
            windowIndex:
            0 = Front Right Window
            1 = Front Left Window
            2 = Back Right Window
            3 = Back Left Window
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RollDownWindows(System.Int32)">
            <summary>
            Roll down all the windows of the vehicle passed through the first parameter.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RollUpWindow(System.Int32,System.Int32)">
            <summary>
            0 = Front Right Window
            1 = Front Left Window
            2 = Back Right Window
            3 = Back Left Window
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetAllLowPriorityVehicleGeneratorsActive(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetAllVehicleGeneratorsActive">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetAllVehicleGeneratorsActiveInArea(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetSomeVehicleDensityMultiplierThisFrame(System.Single)">
            <summary>
            Judging from the effect, this is some sort of vehicle density multiplier.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetBikeLeanAngle(System.Int32,System.Single,System.Single)">
            <summary>
            Only works on bikes, both X and Y work in the -1 - 1 range.
            
            X forces the bike to turn left or right (-1, 1)
            Y forces the bike to lean to the left or to the right (-1, 1)
            
            Example with X -1/Y 1
            http://i.imgur.com/TgIuAPJ.jpg
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetBoatAnchor(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetCanResprayVehicle(System.Int32,System.Boolean)">
            <summary>
            Hardcoded to not work in multiplayer.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetCargobobPickupMagnetActive(System.Int32,System.Boolean)">
            <summary>
            Wont attract or magnetize to any helicopters or planes of course, but thats common sense. 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetCargobobPickupMagnetStrength(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetCarHighSpeedBumpSeverityMultiplier(System.Single)">
            <summary>
            Something to do with high speed bump severity?
            
            if (!sub_87a46(SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER)) {
                VEHICLE::_84FD40F56075E816(0.0);
                sub_8795b(SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER, 1);
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetConvertibleRoof(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetDisableVehiclePetrolTankDamage(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetDisableVehiclePetrolTankFires(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.DisplayDistantVehicles(System.Boolean)">
            <summary>
            Toggles to render distant vehicles. They may not be vehicles but images to look like vehicles.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleDoorCanBreak(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Keeps Vehicle Doors/Hood/Trunk from breaking off
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetFarDrawVehicles(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetForceHdVehicle(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetGarbageTrucks(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetHeliBladesFullSpeed(System.Int32)">
            <summary>
            Equivalent of SET_HELI_BLADES_SPEED(vehicleHandle, 1.0f);
            
            this native works on planes to?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetHeliBladesSpeed(System.Int32,System.Single)">
            <summary>
            Sets the speed of the helicopter blades in percentage of the full speed.
            
            vehicleHandle: The helicopter.
            speed: The speed in percentage, 0.0f being 0% and 1.0f being 100%.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetHelicopterRollPitchYawMult(System.Int32,System.Single)">
            <summary>
            value between 0.0 and 1.0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetLastDrivenVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetMissionTrainAsNoLongerNeeded(System.Int32@,System.Boolean)">
            <summary>
            p1 is always 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetMissionTrainCoords(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetNumberOfParkedVehicles(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetParkedVehicleDensityMultiplierThisFrame(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetCargobobHookPosition(System.Int32,System.Single,System.Single,System.Int32)">
            <summary>
            For now, I changed the last one from bool to int.
            According to scripts specifically fm_mission_controller this last parameter is false/0 when its called after the create rope native above is called for the magnet and true/1 after the create rope native above is called for the hook.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetPlaybackSpeed(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetPlaybackToUseAi(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetPlaybackToUseAiTryToRevertBackLater(System.Int32,System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetPlayersLastVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetRandomBoats(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetRandomTrains(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetRandomVehicleDensityMultiplierThisFrame(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetRenderTrainAsDerailed(System.Int32,System.Boolean)">
            <summary>
            makes the train all jumbled up and derailed as it moves on the tracks (though that wont stop it from its normal operations)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleRocketBoostActive(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleRocketBoostPercentage(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleRocketBoostRefillTime(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetScriptVehicleGenerator(System.Int32,System.Boolean)">
            <summary>
            Only called once in the decompiled scripts. Presumably activates the specified generator.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.JitterVehicle(System.Int32,System.Boolean,System.Single,System.Single,System.Single)">
            <summary>
            When I called this with what the script was doing, which was -190f for yaw pitch and roll, all my car did was jitter a little. I also tried 0 and 190f. I altered the p1 variable between TRUE and FALSE and didnt see a difference.
            
            This might have something to do with the physbox of the vehicle, but Im not sure.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetPlaneMinHeightAboveGround(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetTaxiLights(System.Int32,System.Boolean)">
            <summary>
            This is not tested - its just an assumption.
            - Nac
            
            Doesnt seem to work.  Ill try with an int instead. --JT
            
            Read the scripts, im dumpass. 
            
                                        if (!VEHICLE::IS_TAXI_LIGHT_ON(l_115)) {
                                            VEHICLE::SET_TAXI_LIGHTS(l_115, 1);
                                        }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetTrainCruiseSpeed(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetTrainSpeed(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleExclusiveDriver(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleAlarm(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleAllowNoPassengersLockon(System.Int32,System.Boolean)">
            <summary>
            Makes the vehicle accept no passengers.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleAutomaticallyAttaches(System.Int32,System.Int32,System.Int32)">
            <summary>
            Please change to void.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleBodyHealth(System.Int32,System.Single)">
            <summary>
            p2 often set to 1000.0 in the decompiled scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleBombs(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleBrakeLights(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleBurnout(System.Int32,System.Boolean)">
            <summary>
            On accelerating, spins the driven wheels with the others braked, so you dont go anywhere.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleCanBeTargetted(System.Int32,System.Boolean)">
            <summary>
            This has not yet been tested - its just an assumption of what the types could be.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleCanBeUsedByFleeingPeds(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleCanBeVisiblyDamaged(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleCanBreak(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleCeilingHeight(System.Int32,System.Single)">
            <summary>
            Previously named GET_VEHICLE_DEFORMATION_GET_TREE (hash collision)
            
            from Decrypted Scripts I found
            VEHICLE::SET_VEHICLE_CEILING_HEIGHT(l_BD92/2/, 420.0);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleEngineTorqueMultiplier(System.Int32,System.Single)">
            <summary>
            1.0 - Decreased torque
            =1.0 - Default torque
            1.0 - Increased torque
            
            Negative values will cause the vehicle to go backwards instead of forwards while accelerating.
            
            value - is between 0.2 and 1.8 in the decompiled scripts. 
            
            This needs to be called every frame to take effect.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleColours(System.Int32,System.Int32,System.Int32)">
            <summary>
            colorPrimary ANDcolorSecondary are the paint index for the vehicle.
            For a list of valid paint indexes, view: pastebin.com/pwHci0xK
            -------------------------------------------------------------------------
            Use this to get the number of color indices: pastebin.com/RQEeqTSM
            Note: minimum color index is 0, maximum color index is (numColorIndices - 1)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleColourCombination(System.Int32,System.Int32)">
            <summary>
            dont be a dick
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleCountermeasures(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleCustomPrimaryColour(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleCustomSecondaryColour(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleDamage(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
            
            Radius of effect damage applied in a sphere at impact location
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleDeformationFixed(System.Int32)">
            <summary>
            This fixes the deformation of a vehicle but the vehicle health doesnt improve
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleDensityMultiplierThisFrame(System.Single)">
            <summary>
            • Usage
            
            ? Use this native inside a looped function.
            ? Values:
               ? 0.0 = no vehicles on streets
               ? 1.0 = normal vehicles on streets
            
            
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleDirtLevel(System.Int32,System.Single)">
            <summary>
            You cant use values greater than 15.0
            You can see why here: pastebin.com/Wbn34fGD
            
            Also, R does (float)(rand() % 15) to get a random dirt level when generating a vehicle.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleDoorsLocked(System.Int32,System.Int32)">
            <summary>
            0 - CARLOCK_NONE
            1 - CARLOCK_UNLOCKED
            2 - CARLOCK_LOCKED (locked)
            3 - CARLOCK_LOCKOUT_PLAYER_ONLY
            4 - CARLOCK_LOCKED_PLAYER_INSIDE (can get in, cant leave)
            
            (maybe, these are leftovers from GTA:VC)
            5 - CARLOCK_LOCKED_INITIALLY
            6 - CARLOCK_FORCE_SHUT_DOORS
            7 - CARLOCK_LOCKED_BUT_CAN_BE_DAMAGED
            
            (source: GTA VC miss2 leak, matching constants for 0/2/4, testing)
            
            They use 10 in am_mp_property_int, dont know what it does atm.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleDoorsLockedForAllPlayers(System.Int32,System.Boolean)">
            <summary>
            After some analysis, Ive decided that these are what the parameters are.
            
            We can see this being used in R scripts such as am_mp_property_int.ysc.c4:
            l_11A1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 1);
            ...
            VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(l_11A1, 1);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleDoorsLockedForPlayer(System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleDoorsLockedForTeam(System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleDoorsShut(System.Int32,System.Boolean)">
            <summary>
            Closes all doors of a vehicle:
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleDoorBroken(System.Int32,System.Int32,System.Boolean)">
            <summary>
            doorIndex:
            0 = Front Right Door
            1 = Front Left Door
            2 = Back Right Door
            3 = Back Left Door
            4 = Hood
            5 = Trunk
            
            Changed last paramater from CreateDoorObject To NoDoorOnTheFloor because when on false, the door object is created,and not created when on true...the former parameter name was counter intuitive...(by Calderon)
            
            Calderon is a moron.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleDoorControl(System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            doorIndex:
            0 = Front Left Door (driver door)
            1 = Front Right Door
            2 = Back Left Door
            3 = Back Right Door
            4 = Hood
            5 = Trunk
            6 = Trunk2
            
            p2:
            mostly use 0 and 1, very rare using 3 and 5
            
            p3:
            It seems it is an angle
            
            Example in VB: 
                Public Shared Sub Set_Vehicle_Door_Angle(Vehicle As Vehicle, Door As VehicleDoor, Angle As Single)
                    Native.Function.Call(Hash.SET_VEHICLE_DOOR_CONTROL, Vehicle.Handle, Door, 1, Angle)
                End Sub
            
            Im Not MentaL
            
            sfink: p2 is speed, 5 is fast, 1 is slow 3 is medium
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleDoorLatched(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleDoorOpen(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            doorIndex:
            0 = Front Left Door
            1 = Front Right Door
            2 = Back Left Door
            3 = Back Right Door
            4 = Hood
            5 = Trunk
            6 = Back
            7 = Back2
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleDoorShut(System.Int32,System.Int32,System.Boolean)">
            <summary>
            doorIndex:
            0 = Front Left Door
            1 = Front Right Door
            2 = Back Left Door
            3 = Back Right Door
            4 = Hood
            5 = Trunk
            6 = Trunk2
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleCreatesMoneyPickupsWhenExploded(System.Int32,System.Boolean)">
            <summary>
            Money pickups are created around cars when they explodes. Only works when the vehicle model is a car. A single pickup is between 1 and 18 dollars in size. All car models seems to give the same amount of money.
            
            youtu.be/3arlUxzHl5Y 
            i.imgur.com/WrNpYFs.jpg
            
            From the scripts:
            VEHICLE::_068F64F2470F9656(l_36, 0);
            
            Found a correct name for this :P
            _dead_vehicle_pickups_dies_when_set_exploded_destroy_it_drops_on_money
            
            SET_VEHICLE_D or SET_VEHICLE_E
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleEngineCanDegrade(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleEngineHealth(System.Int32,System.Single)">
            <summary>
            1000 is max health
            Begins leaking gas at around 650 health
            -999.90002441406 appears to be minimum health, although nothing special occurs - false statement
            
            -------------------------
            Minimum: -4000
            Maximum: 1000
            
            -4000: Engine is destroyed
            0 and below: Engine catches fire and health rapidly declines
            300: Engine is smoking and losing functionality
            1000: Engine is perfect
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleEngineOn(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Starts or stops the engine on the specified vehicle.
            
            vehicle: The vehicle to start or stop the engine on.
            value: true to turn the vehicle on; false to turn it off.
            instantly: if true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.
            
            --------------------------------------
            from what Ive tested when I do this to a helicopter the propellers turn off after the engine has started. so is there any way to keep the heli propellers on?
            --------------------------------------
            And whats with BOOL otherwise, what does it do???
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleEnveffScale(System.Int32,System.Single)">
            <summary>
            formerly known as _SET_VEHICLE_PAINT_FADE
            
            The parameter fade is a value from 0-1, where 0 is fresh paint.
            ------------------------------------------------------------------------------------
            The actual value isnt stored as a float but as an unsigned char (BYTE). More info here: pastebin.com/r0h6EM5s
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleExclusiveDriver2(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleExplodesOnHighExplosionDamage(System.Int32,System.Boolean)">
            <summary>
            Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleExtra(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Note: only some vehicle have extras
            extra ids are from 1 - 9 depending on the vehicle
            
            -------------------------------------------------
            
            ^ not sure if outdated or simply wrong. Max extra ID for b944 is 14
            
            -------------------------------------------------
            p2 is not a on/off toggle. mostly 0 means on and 1 means off.
            not sure if it really should be a BOOL.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleExtraColours(System.Int32,System.Int32,System.Int32)">
            <summary>
            They use the same color indexs as SET_VEHICLE_COLOURS.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleInteriorColour(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleDashboardColour(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleFixed(System.Int32)">
            <summary>
            This fixes a vehicle.
            If the vehicles engines broken then you cannot fix it with this native.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleForwardSpeed(System.Int32,System.Single)">
            <summary>
            SCALE: Setting the speed to 30 would result in a speed of roughly 60mph, according to speedometer.
            
            Speed is in meters per second
            You can convert meters/s to mph here:
            http://www.calculateme.com/Speed/MetersperSecond/ToMilesperHour.htm
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleFrictionOverride(System.Int32,System.Single)">
            <summary>
            Seems to be related to the metal parts, not tyres (like i was expecting lol)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleFullbeam(System.Int32,System.Boolean)">
            <summary>
            It switch to highbeam when p1 is set to true.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleGravity(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleHandbrake(System.Int32,System.Boolean)">
            <summary>
            does this work while in air?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleHasBeenOwnedByPlayer(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleSirenSound(System.Int32,System.Boolean)">
            <summary>
            if set to true, prevents vehicle sirens from having sound, leaving only the lights.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleHasStrongAxles(System.Int32,System.Boolean)">
            <summary>
            if true, axles wont bend.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleLightsMode(System.Int32,System.Int32)">
            <summary>
            p1 can be either 0, 1 or 2.
            
            Determines how vehicle lights behave when toggled.
            
            0 = Default (Lights can be toggled between off, normal and high beams)
            1 = Lights Disabled (Lights are fully disabled, cannot be toggled)
            2 = Always On (Lights can be toggled between normal and high beams)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleIndicatorLights(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the turn signal enabled for a vehicle.
            Set turnSignal to 1 for left light, 0 for right light.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetPedTargettableVehicleDestroy(System.Int32,System.Int32,System.Int32)">
            <summary>
            destroyType is 1 for opens on damage, 2 for breaks on damage.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleInteriorlight(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleSilent(System.Int32,System.Boolean)">
            <summary>
            If set to TRUE, it seems to suppress door noises and doesnt allow the horn to be continuous.
            
            -Doesnt seem to suppress door noises for me, at least with the vehicle add-on I tried
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleIsConsideredByPlayer(System.Int32,System.Boolean)">
            <summary>
            Setting this to false, makes the specified vehicle to where if you press Y your character doesnt even attempt the animation to enter the vehicle. Hence its not considered aka ignored.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleIsStolen(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleIsWanted(System.Int32,System.Boolean)">
            <summary>
            Sets the wanted state of this vehicle.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleJetEngineOn(System.Int32,System.Boolean)">
            <summary>
            VEHICLE::SET_VEHICLE_ENGINE_ON is not enough to start jet engines when not inside the vehicle. But with this native set to true it works: youtu.be/OK0ps2fDpxs 
            i.imgur.com/7XA14pX.png
            Certain planes got jet engines.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleHudSpecialAbilityBarActive(System.Int32,System.Boolean)">
            <summary>
            console hash: 0x71CDD52F
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleLights(System.Int32,System.Int32)">
            <summary>
            sets if the vehicle has lights or not.
            not an on off toggle.
            p1 = 0 ;vehicle normal lights, off then lowbeams, then highbeams
            p1 = 1 ;vehicle doesnt have lights, always off
            p1 = 2 ;vehicle has always on lights
            p1 = 3 ;or even larger like 4,5,... normal lights like =1
            note1: when using =2 on day its lowbeam,highbeam
            but at night its lowbeam,lowbeam,highbeam
            note2: when using =0 its affected by day or night for highbeams dont exist in daytime.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleLightMultiplier(System.Int32,System.Single)">
            <summary>
            multiplier = brightness of head lights.
            this value isnt capped afaik.
            
            multiplier = 0.0 no lights
            multiplier = 1.0 default game value
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleLivery(System.Int32,System.Int32)">
            <summary>
            Note: Only seems to work on Emergency Vehicles
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleLodMultiplier(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleMod(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            In b944, there are 50 (0 - 49) mod types.
            
            Sets the vehicle mod.
            The vehicle must have a mod kit first.
            
            Any out of range ModIndex is stock.
            
            #Mod Type
            Spoilers - 0
            Front Bumper - 1
            Rear Bumper - 2
            Side Skirt - 3
            Exhaust - 4
            Frame - 5
            Grille - 6
            Hood - 7
            Fender - 8
            Right Fender - 9
            Roof - 10
            Engine - 11
            Brakes - 12
            Transmission - 13
            Horns - 14 (modIndex from 0 to 51)
            Suspension - 15
            Armor - 16
            Front Wheels - 23
            Back Wheels - 24 //only for motocycles
            Plate holders - 25
            Trim Design - 27
            Ornaments - 28
            Dial Design - 30
            Steering Wheel - 33
            Shifter Leavers - 34
            Plaques - 35
            Hydraulics - 38
            Livery - 48
            
            ENUMS: pastebin.com/QzEAn02v
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleModelIsSuppressed(System.UInt32,System.Boolean)">
            <summary>
            seems to make the vehicle stop spawning naturally in traffic. Heres an essential example:
            
            VEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(GAMEPLAY::GET_HASH_KEY(taco), true);
            
            god I hate taco vans
            
            Confirmed to work? Needs to be looped? Can not get it to work.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleModColor1(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            paintType:
            0: Normal
            1: Metallic
            2: Pearl
            3: Matte
            4: Metal
            5: Chrome
            
            color: number of the color.
            
            p3 seems to always be 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleModColor2(System.Int32,System.Int32,System.Int32)">
            <summary>
            Changes the secondary paint type and color
            paintType:
            0: Normal
            1: Metallic
            2: Pearl
            3: Matte
            4: Metal
            5: Chrome
            
            color: number of the color
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleModKit(System.Int32,System.Int32)">
            <summary>
            Set modKit to 0 if you plan to call SET_VEHICLE_MOD. Thats what the game does. Most body modifications through SET_VEHICLE_MOD will not take effect until this is set to 0.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleNeedsToBeHotwired(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleNeonLightsColour(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the color of the neon lights of the specified vehicle.
            
            More info: pastebin.com/G49gqy8b
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleNeonLightEnabled(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the neon lights of the specified vehicle on/off.
            
            Indices:
            0 = Left
            1 = Right
            2 = Front
            3 = Back
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleNumberPlateText(System.Int32,System.String)">
            <summary>
            Sets a vehicles license plate text.  8 chars maximum.
            
            Example:
            Ped playerPed = PLAYER::PLAYER_PED_ID();
            Vehicle veh = PED::GET_VEHICLE_PED_IS_USING(playerPed);
            char plateText = KING;
            VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(veh, plateText);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleNumberPlateTextIndex(System.Int32,System.Int32)">
            <summary>
            Plates:
            Blue/White - 0
            Yellow/black - 1
            Yellow/Blue - 2
            Blue/White2 - 3
            Blue/White3 - 4
            Yankton - 5
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleOnGroundProperly(System.Int32,System.Int32)">
            <summary>
            Sets a vehicle on the ground on all wheels.  Returns whether or not the operation was successful.
            
            sfink: This has an additional param(Vehicle vehicle, float p1) which is always set to 5.0f in the b944 scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleOutOfControl(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Tested on the players current vehicle. Unless you kill the driver, the vehicle doesnt loose control, however, if enabled, explodeOnImpact is still active. The moment you crash, boom.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehiclePetrolTankHealth(System.Int32,System.Single)">
            <summary>
            1000 is max health
            Begins leaking gas at around 650 health
            -999.90002441406 appears to be minimum health, although nothing special occurs
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleProvidesCover(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleReduceGrip(System.Int32,System.Boolean)">
            <summary>
            Reduces grip significantly so its hard to go anywhere.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleRudderBroken(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleSearchlight(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Only works during nighttime.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleShootAtTarget(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Commands the driver of an armed vehicle (p0) to shoot its weapon at a target (p1). p3, p4 and p5 are the coordinates of the target. Example:
            
            WEAPON::SET_CURRENT_PED_VEHICLE_WEAPON(pilot,GAMEPLAY::GET_HASH_KEY(VEHICLE_WEAPON_PLANE_ROCKET));                        VEHICLE::SET_VEHICLE_SHOOT_AT_TARGET(pilot, target, targPos.x, targPos.y, targPos.z);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleSiren(System.Int32,System.Boolean)">
            <summary>
            Activate siren on vehicle (Only works if the vehicle has a siren).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleSteerBias(System.Int32,System.Single)">
            <summary>
            Locks the vehicles steering to the desired angle, explained below.
            
            Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.
            
            Steer bias:
            -1.0 = full right
            0.0 = centered steering
            1.0 = full left
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleStrong(System.Int32,System.Boolean)">
            <summary>
            If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleTimedExplosion(System.Int32,System.Int32,System.Boolean)">
            <summary>
                                                            VEHICLE::SET_VEHICLE_TIMED_EXPLOSION(v_3, PLAYER::GET_PLAYER_PED(v_5), 1);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetTowTruckCraneHeight(System.Int32,System.Single)">
            <summary>
            Sets how much the crane on the tow truck is raised, where 0.0 is fully lowered and 1.0 is fully raised.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleTyresCanBurst(System.Int32,System.Boolean)">
            <summary>
            Allows you to toggle bulletproof tires.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleTyreBurst(System.Int32,System.Int32,System.Boolean,System.Single)">
            <summary>
            To burst tyres VEHICLE::SET_VEHICLE_TYRE_BURST(vehicle, 0, true, 1000.0)
            to burst all tyres type it 8 times where p1 = 0 to 7.
            
            p3 seems to be how much damage it has taken. 0 doesnt deflate them, 1000 completely deflates them.
            
            0 = wheel_lf / bike, plane or jet front
            1 = wheel_rf
            2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
            3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
            4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
            5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
            45 = 6 wheels trailer mid wheel left
            47 = 6 wheels trailer mid wheel right
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleTyreFixed(System.Int32,System.Int32)">
            <summary>
            tyreIndex = 0 to 4 on normal vehicles
            
            0 = wheel_lf / bike, plane or jet front
            1 = wheel_rf
            2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
            3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
            4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
            5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
            45 = 6 wheels trailer mid wheel left
            47 = 6 wheels trailer mid wheel right
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleTyreSmokeColor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the tire smokes color of this vehicle.
            
            vehicle: The vehicle that is the target of this method.
            r: The red level in the RGB color code.
            g: The green level in the RGB color code.
            b: The blue level in the RGB color code.
            
            Note:
            setting r,g,b to 0 will give the car independance day tyre smoke
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleUndriveable(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleWheelsCanBreak(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleWheelsCanBreakOffWhenBlowUp(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleWheelType(System.Int32,System.Int32)">
            <summary>
            0: Sport
            1: Muscle
            2: Lowrider
            3: SUV
            4: Offroad
            5: Tuner
            6: Bike Wheels
            7: High End
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleWindowTint(System.Int32,System.Int32)">
            <summary>
            enum WindowTints
            {
             WINDOWTINT_NONE,
              WINDOWTINT_PURE_BLACK,
                WINDOWTINT_DARKSMOKE,
             WINDOWTINT_LIGHTSMOKE,
                WINDOWTINT_STOCK,
             WINDOWTINT_LIMO,
              WINDOWTINT_GREEN
            };
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.RaiseLowerableWheels(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SkipTimeInPlaybackRecordedVehicle(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SkipToEndAndStopPlaybackRecordedVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SmashVehicleWindow(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.StartPlaybackRecordedVehicle(System.Int32,System.Int32,System.String,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.StartPlaybackRecordedVehicleUsingAi(System.Int32,System.Int32,System.Int32@,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.StartPlaybackRecordedVehicleWithFlags(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.StartVehicleAlarm(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.StartVehicleHorn(System.Int32,System.Int32,System.UInt32,System.Boolean)">
            <summary>
            Sounds the horn for the specified vehicle.
            
            vehicle: The vehicle to activate the horn for.
            mode: The hash of NORMAL or HELDDOWN. Can be 0.
            duration: The duration to sound the horn, in milliseconds.
            
            Note: If a player is in the vehicle, it will only sound briefly.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.StopAllGarageActivity">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.StopPlaybackRecordedVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SwitchTrainTrack(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.ToggleVehicleMod(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Toggles:
            UNK17 - 17
            Turbo - 18
            UNK19 - 19
            Tire Smoke - 20
            UNK21 - 21
            Xenon Headlights - 22
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.TrackVehicleVisibility(System.Int32)">
            <summary>
            in script hook .net 
            
            Vehicle v = ...;
            Function.Call(Hash.TRACK_VEHICLE_VISIBILITY, v.Handle);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.UnpausePlaybackRecordedVehicle(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.VehicleSetCustomParachuteModel(System.Int32,System.UInt32)">
            <summary>
            parachuteModel = 230075693
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.VehicleSetCustomParachuteTexture(System.Int32,System.Int32)">
            <summary>
            colorIndex = 0 - 7
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetRampVehicleReceivesRampDamage(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleParachuteActive(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.GetRandomVehicleModelInMemory(System.Boolean,System.Int32@,System.Int32@)">
            <summary>
            Not present in the retail version! Its just a nullsub.
            
            p0 always true (except in one case)
            p1 returns a random vehicle hash loaded in memory
            p2 unsure, maybe returns a different model
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.SetVehicleNameDebug(System.Int32,System.String)">
            <summary>
            NOTE: Debugging functions are not present in the retail version of the game.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x0419B167EE128F33(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xF3B0E0AED097A3F5(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xD3E51C0AB8C26EEE(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x2CE544C68FB812A0(System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x54B0F614960F4A5F(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x99AD4CCCB128CBC9(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xC1F981A6F74F0C23(System.Int32,System.Boolean)">
            <summary>
            same call as VEHICLE::_0x0F3B4D4E43177236
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x0F3B4D4E43177236(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xF78F94D60248C737(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x6A98C2ECF57FA5D4(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xA1DD82F3CCF9A01E(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x16B5E274BDE402F8(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            only documented to be continued...
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x2467A2D807D37CA3(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x2C1D8B3B19E517CC(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE01903C47C7AC89E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x0A436B8643716D14">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x4419966C9936071A(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xAA3F739ABDDCF21F">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x6D6AF961B72728AE(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE44A982368A4AF23(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x7C0043FDFF6436BC(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xAF03011701811146(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xEF49CF0270307CBE">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x500873A45724C863(System.Int32,System.Int32)">
            <summary>
            console hash: 0x004926A3
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xF0E4BA16D1DB546C(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds some kind of shadow to the vehicle.
            
            -1 disables the effect.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xF25E02CB9C5818F8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x32CAEDF24A583345(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x4E417C547182C84D(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xF87D9F2301F7D206(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x1F2E4E06DEA8992B(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x33506883545AC0DF(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x99CAD8E7AFDB60FA(System.Int32,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xA4822F1CF23F4810(RAGE.Vector3,System.Int32,RAGE.Vector3,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x6636C535F6CC2725(System.Int32)">
            <summary>
            Something related to vehicle lean? (References CVehicleLeanHelper)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x5AA3F878A178C4FC(System.UInt32)">
            <summary>
            GET_VEHICLE_MODEL_
            
            called if the vehicle is a boat -- returns vecMoveResistanceX?
            
            For a full list, see here: pastebin.com/Pyb2RhZ9
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xEC69ADF931AAE0C3(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x51F30DB60626A20E(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x99093F60746708CA(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xC6AD107DDC9054CC(System.UInt32)">
            <summary>
            GET_VEHICLE_MODEL_
            
            Function pertains only to aviation vehicles.
            
            For a full list, see here: pastebin.com/JwuGNp2K
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xA01BC64DD4BFBBAC(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xBA91D045575699AD(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x1DA0DA9CB3F0C8BF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x92523B76657A517D(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xF0F2103EFAF8CBA7(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x00C09F246ABEDD82(System.Int32)">
            <summary>
            GET_VEHICLE_CLASS_MAX_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xEEBFC7A7EFDC35B4(System.Int32)">
            <summary>
            Some kind of flags.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x36492C2F0D134C56(System.Int32)">
            <summary>
            Returns a float value related to slipstream.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x53AF99BAA671CA47(System.Int32)">
            <summary>
            GET_VEHICLE_MAX_
            sfink: this returns the vehicle property Assisted Steering or at least, it returned 37.5 when i was in a car with that value as assisted steering.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x50634E348C8D44EF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE43701C36CAFF1A4(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x6EAAEFC76ACC311F(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE6B0E8CFC3633BF0(System.Int32)">
            <summary>
            GET_VEHICLE_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xCA4AC3EAAE46EC7B(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x8533CAFDE1F0F336(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xD4C4642CB7F50B5D(System.Int32)">
            <summary>
            Only used like this:
            
            if (VEHICLE::_D4C4642CB7F50B5D(ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(v_3))) {                                                        sub_157e9c(g_40001._f1868, 0);
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x60190048C0764A26(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x5ECB40269053C0D4(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x53409B5163D5B846(System.UInt32)">
            <summary>
            GET_VEHICLE_MODEL_
            
            9.8  thrust if air vehicle, else 0.38 + drive force?
            
            For a full list, see here: pastebin.com/bJQeDqNd
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xBFBA3BA79CFF7EBF(System.UInt32)">
            <summary>
            GET_VEHICLE_MODEL_MAX_
            max braking if air vehicle, else max braking + 0.1
            
            -------------------
            
            For a full list, see here: pastebin.com/Cb9L1Cn0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x5873C14A52D74236(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x2C8CBFE1EA5FC631(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x42A4BEB35D372407(System.Int32)">
            <summary>
            LOD related
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xDF7E3EEB29642C38(System.Int32,RAGE.Vector3,RAGE.Vector3)">
            <summary>
            Outputs 2 Vector3s.
            Scripts check if out2.x - out1.x  someshit.x
            Could be suspension related, as in max suspension height and min suspension height, considering the natives location.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x8181CE2F25CB9BB7(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x91D6DD290888CBAB">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x5BA68A0840D546AC(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x6ADAABD3068C5235">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x48ADC8A773564670">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x62CA17B74C435651(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xB0AD1238A709B1A2(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x639431E895B9AA57(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x89D630CF5EA96D23(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x634148744F385576(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xB09D25E77C33EB3F(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xF7F203E31F96F6A1(System.Int32,System.Boolean)">
            <summary>
            IS_S
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xA1A9FC1C76A6730D(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE33FFA906CE74880(System.Int32,System.Int32)">
            <summary>
            IS_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x27B926779DEB502D(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x3DE51E9C80B116CF(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x48C633E94A8142A7(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x563B65A643ED072E(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xCFD778E7904C255E(System.Int32)">
            <summary>
            what does this do?
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x51DB102F4A3BA5E0(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x5EE5632F47AE9695(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x1033371FC8E842A7(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE30524E1871F481D(System.Int32)">
            <summary>
            REMOTE_VEHICLE_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xDBA3C090E3D74690(System.Int32)">
            <summary>
            REQUEST_VEHICLE_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE2F53F172B45EDE1">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x5845066D8A1EA7F7(System.Int32,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE5810AC70602F2F5(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x80E3357FDEF45C21(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x3441CAD2F2231923(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x35E0654F4BAD7971(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x73561D4425A021A2(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x0A6A279F3AA4FD70(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xED5EDE9E676643C9(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE842A9398079BD82(System.Int32,System.Single)">
            <summary>
            Vehicle must be a boat.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE3EBAAE484798530(System.Int32,System.Boolean)">
            <summary>
            No observed effect.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x8F719973E1445BA2(System.Int32,System.Boolean)">
            <summary>
            No observed effect.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xBD32E46AA95C1DD2(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xA7DCDF4DED40A8F4(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x1201E8A3290A3B98(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x1F34B0626C594380(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x72BECCF4B829522E(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x571FEB383F629926(System.Int32,System.Boolean)">
            <summary>
            consoel hash 0xAEB29F98
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x56EB5E94318D3FB6(System.Int32,System.Boolean)">
            <summary>
            console hash = 0x30F43FE3
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xA17BAD153B51547E(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x685D5561680D088B(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xED8286F71A819BAA(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x6D8EAC07506291FB(System.Int32,System.Single)">
            <summary>
            Console Hash: 0x60E29B78 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x66979ACF5102FD2F(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x9BDDC73CC6A115D4(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Console Hash: 0x50CDB295 
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE301BD63E9E13CF0(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xCF1182F682F65307(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x0D5F65A8F4EBDAB5(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xB9562064627FF9DB(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xFC40CBF7B90CA77C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xB2E0C0D6922D31F2(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x1A78AD3D8240536F(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x97841634EF7DF1D6(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x26D99D5A82FD18E8(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xD4196117AF7BB974(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xEDBC8405B3895CC9(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x75627043C6AA90AD">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x8235F1BEAD557629(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x25367DE49D64CF16(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xD4B8E3D1917BC86B(System.Boolean)">
            <summary>
            SET__MULTIPLIER_THIS_FRAME
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xB088E9A47AE6EDD5(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x91A0BD635321F145(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xDBC631F109350B8C(System.Int32,System.Boolean)">
            <summary>
            Related to locking the vehicle or something similar.
            
            In the decompiled scripts, its always called after
            VEHICLE::_SET_EXCLUSIVE_DRIVER(a_0, 0, 0);
            VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(a_0, 1);
            VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(a_0, PLAYER::PLAYER_ID(), 0);
            --VEHICLE::_DBC631F109350B8C(a_0, 1);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x1087BC8EC540DAEB(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE6C0C80B8C867537(System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xA247F9EF01D8082E(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xB28B1FE5BFADD7F5(System.Int32,System.Boolean)">
            <summary>
            No observed effect.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x4D9D109F63FEE1D4(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x37EBBF3117BD6A25(System.Int32,System.Single)">
            <summary>
            Sets some values in a vehicle gadget (tow arm, digger arm, etc.). Dont know which one though.
            
            Ive tested on the towtruck 1 AND2, Dock Lift (Crate Arm), Dozer, and such have no effect. However when used on a Forklift it sets the height of the forks. 0.0 = Lowest 1.0 = Highest. This is best to be used if you wanna pick-up a car since un-realistically on GTA V forklifts cant pick up much of anything due to vehicle mass. If you put this under a car then set it above 0.0 to a lifted-value it will raise the car with no issue lol
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x428AD3E26C8D9EB0(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x544996C0081ABDEB(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xFAF2A78061FD9EF4(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xAB31EF4DE6800CE9(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x430A7631A84C9BE7(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x94A68DA412C4007D(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x0A3F820A9A9A9AC5(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x4056EA1105F5ABD7(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x3EC8BF18AA453FE9(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xFE205F38AAA58E5B(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE6F13851780394DA(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x28B18377EB6E25F6(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x84EA99C62CB3EF0C(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x8EA86DF356801C7D(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xC24075310A8B9CD1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x5B91B229243351A8(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xBC3CCA5844452B06(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x1B212B26DD3C04DF(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x66E3AAFACE2D1EB8(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xC0ED6438E6D39BA8(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x2A86A0475B6A1434(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x4C815EB175086F84(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE16142B94664DEFD(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xAD2D28A1AFDFF131(System.Int32,System.Single)">
            <summary>
            For planes only!
            
            value can be 1.0 or lower (higher values will automatically result in 1.0).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x4E74E62E0A97E901(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x796A877E459B99EA(System.Int32,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xEFC13B1CE30D755D(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x063AE2B2CC273588(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x78CEEE41F49F421F(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x65B080555EA48149(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x7BBE7FF626A591FE(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x2FA2494B47FDD009(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x2A8F319B392E7B3F(System.Int32,System.Single)">
            <summary>
                            VEHICLE::_2A8F319B392E7B3F(vehicle, 0.5);
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x878C75C09FBDB942">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x95CF53B3D687F9FA(System.Int32)">
            <summary>
            in the decompiled scripts, seems to be always called on the vehicle right after being attached to a trailer.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x21973BBF8D17EDFA(System.Int32,System.Int32)">
            <summary>
            Only called once inside main_persitant with the parameters, 0 - 120000
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xF06A16CA55D138D8(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xDFFCEF48E511DB48(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x21115BCD6E44656A(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x9BECD4B9FEF3F8A6(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x1F9FB66F3A3842D2(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x7D6F9A3EF26136A0(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            what does this native do?
            
            Heres some pseudocode of the internal setter function:
            
            __int64 __fastcall sub_140CD86B4(signed int vehicle, char a2, char a3)
            {
              char v3; // di@1
              char v4; // bl@1
              __int64 result; // rax@1
              __int16 v6; // cx@3
            
              v3 = a3;
              v4 = a2;
              result = GetScriptHandleAddressVehicleCheck(vehicle);
              if ( result )
              {
                if ( v3 OR (v6 = (_WORD )(result + 0xDA), (v6 AND0xFu) - 6 = 1) )
                {
                  (_BYTE )(result + 0x89B) AND 0xDFu;
                  (_BYTE )(result + 0x89B) OR 32  (v4 AND1);
                }
              }
              return result;
            }
            
            Now its time for you to find out :P
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x1DDA078D12879EEE(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xD3301660A57C9272(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x9F3F689B814F2599(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x870B8B7A766615C8(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE4E2FD323574965C(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xC361AA040D6637A8(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xF8EBCCC96ADB9FB7(System.Int32,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x0CDDA42F9E360CA6(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x065D03A9D6B2C6B5(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x206BC5DC9D1AC70A(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x51BB2D88D31A914B(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x192547247864DFDD(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x428BACCDF5E26EAD(System.Int32,System.Boolean)">
            <summary>
            if (!ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(g_10A5A._f8Ba_0/1/, 1)) {
                sub_20af7(No longer needed: Vehicle owned by other script);
                if ((((a_0 == 24) AND (!sub_3a04(g_10A5A._f8Ba_0/1/))) AND (!sub_39c9(g_10A5A._f8Ba_0/1/))) AND (ENTITY::GET_ENTITY_MODEL(g_10A5A._f8Ba_0/1/) != ${monster})) {
                    VEHICLE::_428BACCDF5E26EAD(g_10A5A._f8Ba_0/1/, 1);
                }
                g_10A5A._f8Ba_0/1/ = 0;
                g_10A5Aa_0/1/ = 1;
                sub_20ada(a_0);
                return ;
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x182F266C2D9E2BEB(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x4E20D2A627011E8E(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xAF60E6A2936F982A(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x8AA9180DE2FEDD45(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x2B6747FAA9DB9D6B(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x76D26A22750E849E(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x9737A37136F07E75(System.Int32,System.Boolean)">
            <summary>
            SET_VEHICLE_DOORS_LOCKED_FOR_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x3B458DDB57038F08(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xD565F438137F0E10(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x79DF7E806202CE01(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x30D779DE7C4F6DD3(System.Int32,System.Single)">
            <summary>
            possibly   ENABLE_VEHICLE_FOREVER_HYDRAULICS
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x9AA47FFF660CB932(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xB055A34527CB8FD7(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x6501129C9E0FFA05(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x279D50DE5652D935(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x9A75585FB2E54FAD(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Example gotten from chinese2.c4
                VEHICLE::_9A75585FB2E54FAD(2004.4471435546875, 3076.806640625, 46.60689926147461, 10.0);
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x02398B627547189C(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x1AA8A837D2169D94(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x10655FAB9915623D(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x06582AFF74894C75(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x0AD9E8F87FF7C16F(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x07116E24E9D1929D(System.Int32,System.Boolean)">
            <summary>
            p1 (toggle) was always 1 (true) except in one case in the b678 scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xC50CE861B55EAB8B(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xA6D3A8750DC73270(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xBAA045B4E42F3C06(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE851E480B814D4BA(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xAB04325045427AAE(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x5E569EC46EC21CAE(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x35BB21DE06784373(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xCF9159024555488C(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xC4B3347BD68BD609(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x2311DD7159F00582(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xF051D9BFB6BA39C0(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x1CF38D529D7441D9(System.Int32,System.Boolean)">
            <summary>
            what does this do?
            youRE mother
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x9007A2F21DC108D4(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xDCE97BDF8A0EABC8">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x6EBFB22D646FFC18(System.Int32,System.Boolean)">
            <summary>
            sfink: sets bit in vehicles structure, used by maintransition, fm_mission_controller, mission_race and a couple of other scripts. see dissassembly: 
            CVehicle __fastcall sub_140CDAA10(signed int a1, char a2)
            {
                CVehicle result; // rax@1
            
                result = EntityAsCVehicle(a1);
                if ( result )
                {
                    result-field_886 AND 0xEFu;
                    result-field_886 OR 16  (a2 AND1);
                }
                return result;
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x737E398138550FFF(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x56B94C6D7127DFBA(System.Int32,System.Single,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x1093408B4B9D1146(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x0581730AB9380412(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE05DD0E9707003A3(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xCAC66558B944DA67(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xBB2333BB87DDD87F(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x1D97D1E3A70A649F(System.Int32,System.Boolean)">
            <summary>
            Related to Hao races.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x41290B40FA63E6DA(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xE023E8AC4EF7C117(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x88BC673CA9E0AE99(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xC45C27EF50F36ADC(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x86B4B6212CB8B627(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x45A561A9421AB6AD(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x44CD1F493DB2A0A6(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xBE5C1255A1830FF5(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x2C4A1590ABF43E8B(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x1312DDD8385AEE4E(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x5335BE58C083E74E(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x374706271354CB18(System.Int32,System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x7C06330BFDDA182E(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x83F813570FF519DE(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xF488C566413B4232(System.Int32,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x756AE6E962168A04(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x1BBAC99C0BC53656(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0x9D30687C57BAA0BB(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Vehicle.Unknown._0xB264C4D2F2B0A78B(System.Int32)">
            <summary>
            This native doesnt seem to do anything, might be a debug-only native.
            
            Confirmed, it is a debug native.
            </summary>				
        </member>
        <member name="T:RAGE.Game.Water">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Water.GetWavesIntensity">
            <summary>
            Gets the aggressiveness factor of the ocean waves.
            
            console hash: 0xBD0A67FB
            
            Most likely GET_CURRENT_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Water.GetWaterHeight(System.Single,System.Single,System.Single,System.Single@)">
            <summary>
            This function set height to the value of z-axis of the water surface.
            
            This function works with sea and lake. However it does not work with shallow rivers (e.g. raton canyon will return -100000.0f)
            
            note: seems to return true when you are in water
            </summary>				
        </member>
        <member name="M:RAGE.Game.Water.GetWaterHeightNoWaves(System.Single,System.Single,System.Single,System.Single@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Water.ModifyWater(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the water height for a given position and radius.
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Water.ResetWavesIntensity">
            <summary>
            Sets the waves intensity back to original (1.0 in most cases).
            
            console hash: 0x4AD23212
            
            Most likely RESET_CURRENT_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Water.SetWavesIntensity(System.Single)">
            <summary>
            Sets a value that determines how aggressive the ocean waves will be. Values of 2.0 or more make for very aggressive waves like you see during a thunderstorm.
            
            Works only ~200 meters around the player.
            
            console hash: 0x53B694B1
            
            Most likely SET_CURRENT_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Water.TestProbeAgainstAllWater(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Water.TestProbeAgainstWater(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,RAGE.Vector3)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Water.TestVerticalProbeAgainstAllWater(System.Single,System.Single,System.Single,System.Int32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Water.Unknown._0xFDBF4CDBC07E1706(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            console hash: 0x45268B6F
            
            Most likely ADD_CURRENT_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Water.Unknown._0xB1252E3E59A82AAF(System.Int32)">
            <summary>
            p0 is the handle returned from _0xFDBF4CDBC07E1706
            
            console hash: 0x7DBCEF6F
            
            Most likely REMOVE_CURRENT_
            </summary>				
        </member>
        <member name="M:RAGE.Game.Water.Unknown._0x547237AA71AB44DE(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Weapon">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Weapon.AddAmmoToPed(System.Int32,System.UInt32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.CanUseWeaponOnParachute(System.UInt32)">
            <summary>
            this returns if you can use the weapon while using a parachute
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.ClearEntityLastWeaponDamage(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.ClearPedLastWeaponDamage(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.CreateWeaponObject(System.UInt32,System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Now has 8 params.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.DoesWeaponTakeWeaponComponent(System.UInt32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.EnableLaserSightRendering(System.Boolean)">
            <summary>
            Enables laser sight on any weapon.
            
            It doesnt work. Neither on tick nor OnKeyDown
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.ExplodeProjectiles(System.Int32,System.UInt32,System.Boolean)">
            <summary>
                         WEAPON::EXPLODE_PROJECTILES(PLAYER::PLAYER_PED_ID(), func_221(0x00000003), 0x00000001);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetAmmoInClip(System.Int32,System.UInt32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetAmmoInPedWeapon(System.Int32,System.UInt32)">
            <summary>
            WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0)
            
            From decompiled scripts
            Returns total ammo in weapon
            
            GTALua Example :
            natives.WEAPON.GET_AMMO_IN_PED_WEAPON(plyPed, WeaponHash)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetBestPedWeapon(System.Int32,System.Boolean)">
            <summary>
            p1 is always 0 in the scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetCurrentPedVehicleWeapon(System.Int32,System.Int32@)">
            <summary>
            Example in VB
            
                Public Shared Function GetVehicleCurrentWeapon(Ped As Ped) As Integer
                    Dim arg As New OutputArgument()
                    Native.Function.Call(Hash.GET_CURRENT_PED_VEHICLE_WEAPON, Ped, arg)
                    Return arg.GetResult(Of Integer)()
                End Function
            
            Usage:
            If GetVehicleCurrentWeapon(Game.Player.Character) = -821520672 Then ...Do something
            Note: -821520672 = VEHICLE_WEAPON_PLANE_ROCKET
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetCurrentPedWeapon(System.Int32,System.Int32@,System.Boolean)">
            <summary>
            The return value seems to indicate returns true if the hash of the weapon object weapon equals the weapon hash.
            p2 seems to be 1 most of the time.
            
            
            
            
            
            p2 is not implemented
            
            disassembly said that?
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetCurrentPedWeaponEntityIndex(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetIsPedGadgetEquipped(System.Int32,System.UInt32)">
            <summary>
            gadgetHash - was always 0xFBAB5776 (GADGET_PARACHUTE).
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetLockonRangeOfCurrentPedWeapon(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetMaxAmmo(System.Int32,System.UInt32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetMaxAmmoInClip(System.Int32,System.UInt32,System.Boolean)">
            <summary>
            p2 is mostly 1 in the scripts.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetMaxRangeOfCurrentPedWeapon(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetPedAmmoByType(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetPedAmmoTypeFromWeapon(System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetPedLastWeaponImpactCoord(System.Int32,RAGE.Vector3)">
            <summary>
            Pass ped. Pass address of Vector3.
            The coord will be put into the Vector3.
            The return will determine whether there was a coord found or not.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetPedAmmoTypeFromWeapon2(System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetPedWeapontypeInSlot(System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetPedWeaponTintIndex(System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetSelectedPedWeapon(System.Int32)">
            <summary>
            Returns the hash of the weapon. 
            
                        var num7 = WEAPON::GET_SELECTED_PED_WEAPON(num4);
                        sub_27D3(num7);
                        switch (num7)
                        {
                            case 0x24B17070:
            
            Also see WEAPON::GET_CURRENT_PED_WEAPON. Difference?
            
            -------------------------------------------------------------------------
            
            The difference is that GET_SELECTED_PED_WEAPON simply returns the peds current weapon hash but GET_CURRENT_PED_WEAPON also checks the weapon object and returns true if the hash of the weapon object equals the weapon hash
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetWeapontypeGroup(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetWeapontypeModel(System.UInt32)">
            <summary>
            Returns the model of any weapon.
            
            Can also take an ammo hash?
            sub_6663a(AND_115B, WEAPON::GET_WEAPONTYPE_MODEL(${ammo_rpg}));
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetWeapontypeSlot(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetWeaponClipSize(System.UInt32)">
            <summary>
            // Returns the size of the default weapon component clip.
            
            Use it like this:
            
            char cClipSize32;
            Hash cur;
            if (WEAPON::GET_CURRENT_PED_WEAPON(playerPed, ANDur, 1))
            {
                if (WEAPON::IS_WEAPON_VALID(cur))
                {
                    int iClipSize = WEAPON::GET_WEAPON_CLIP_SIZE(cur);
                    sprintf_s(cClipSize, ClipSize: %.d, iClipSize);
                    vDrawString(cClipSize, 0.5f, 0.5f);
                }
            }
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetWeaponComponentHudStats(System.UInt32,System.Int32@)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetWeaponComponentTypeModel(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetWeaponDamageType(System.UInt32)">
            <summary>
            0=unknown (or incorrect weaponHash)
            1= no damage (flare,snowball, petrolcan)
            2=melee
            3=bullet
            4=force ragdoll fall
            5=explosive (RPG, Railgun, grenade)
            6=fire(molotov)
            8=fall(WEAPON_HELI_CRASH)
            10=electric
            11=barbed wire
            12=extinguisher
            13=gas
            14=water cannon(WEAPON_HIT_BY_WATER_CANNON)
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetWeaponHudStats(System.UInt32,System.Int32@)">
            <summary>
            struct WeaponHudStatsData
            {
                BYTE hudDamage; // 0x0000
                char _0x00010x7; // 0x0001
                BYTE hudSpeed; // 0x0008
                char _0x00090x7; // 0x0009
                BYTE hudCapacity; // 0x0010
                char _0x00110x7; // 0x0011
                BYTE hudAccuracy; // 0x0018
                char _0x00190x7; // 0x0019
                BYTE hudRange; // 0x0020
            };
            
            Usage:
            
            WeaponHudStatsData data;
            if (GET_WEAPON_HUD_STATS(weaponHash, (int )ANData))
            {
                // BYTE damagePercentage = data.hudDamage and so on
            }
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetWeaponObjectFromPed(System.Int32,System.Boolean)">
            <summary>
            Drops the current weapon and returns the object
            
            Unknown behavior when unarmed.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetWeaponObjectTintIndex(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GetWeaponTintCount(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GiveDelayedWeaponToPed(System.Int32,System.UInt32,System.Int32,System.Boolean)">
            <summary>
            Gives a weapon to PED with a delay, example:
            
            WEAPON::GIVE_DELAYED_WEAPON_TO_PED(PED::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(WEAPON_PISTOL), 1000, false)
            ----------------------------------------------------------------------------------------------------------------------------------------
            Translation table:
            pastebin.com/a39K8Nz8
            
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GiveWeaponComponentToPed(System.Int32,System.UInt32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GiveWeaponComponentToWeaponObject(System.Int32,System.UInt32)">
            <summary>
            addonHash:
            (use WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL() to get hash value)
            ${component_at_ar_flsh}, ${component_at_ar_supp}, ${component_at_pi_flsh}, ${component_at_scope_large}, ${component_at_ar_supp_02}
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GiveWeaponObjectToPed(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.GiveWeaponToPed(System.Int32,System.UInt32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            isHidden - ????
            
            All weapon names (add to the list if something is missing), use GAMEPLAY::GET_HASH_KEY((char )weaponNamesi) to get get the hash:
            
            static LPCSTR weaponNames = {
             WEAPON_KNIFE, WEAPON_NIGHTSTICK, WEAPON_HAMMER, WEAPON_BAT, WEAPON_GOLFCLUB,
              WEAPON_CROWBAR, WEAPON_PISTOL, WEAPON_COMBATPISTOL, WEAPON_APPISTOL, WEAPON_PISTOL50,
             WEAPON_MICROSMG, WEAPON_SMG, WEAPON_ASSAULTSMG, WEAPON_ASSAULTRIFLE,
              WEAPON_CARBINERIFLE, WEAPON_ADVANCEDRIFLE, WEAPON_MG, WEAPON_COMBATMG, WEAPON_PUMPSHOTGUN,
                WEAPON_SAWNOFFSHOTGUN, WEAPON_ASSAULTSHOTGUN, WEAPON_BULLPUPSHOTGUN, WEAPON_STUNGUN, WEAPON_SNIPERRIFLE,
              WEAPON_HEAVYSNIPER, WEAPON_GRENADELAUNCHER, WEAPON_GRENADELAUNCHER_SMOKE, WEAPON_RPG, WEAPON_MINIGUN,
             WEAPON_GRENADE, WEAPON_STICKYBOMB, WEAPON_SMOKEGRENADE, WEAPON_BZGAS, WEAPON_MOLOTOV,
             WEAPON_FIREEXTINGUISHER, WEAPON_PETROLCAN, WEAPON_FLARE, WEAPON_SNSPISTOL, WEAPON_SPECIALCARBINE,
             WEAPON_HEAVYPISTOL, WEAPON_BULLPUPRIFLE, WEAPON_HOMINGLAUNCHER, WEAPON_PROXMINE, WEAPON_SNOWBALL,
             WEAPON_VINTAGEPISTOL, WEAPON_DAGGER, WEAPON_FIREWORK, WEAPON_MUSKET, WEAPON_MARKSMANRIFLE,
                WEAPON_HEAVYSHOTGUN, WEAPON_GUSENBERG, WEAPON_HATCHET, WEAPON_RAILGUN, WEAPON_COMBATPDW,
              WEAPON_KNUCKLE, WEAPON_MARKSMANPISTOL, WEAPON_FLASHLIGHT, WEAPON_MACHETE, WEAPON_MACHINEPISTOL,
               WEAPON_SWITCHBLADE, WEAPON_REVOLVER, WEAPON_COMPACTRIFLE, WEAPON_DBSHOTGUN, WEAPON_FLAREGUN,
              WEAPON_AUTOSHOTGUN, WEAPON_BATTLEAXE, WEAPON_COMPACTLAUNCHER, WEAPON_MINISMG, WEAPON_PIPEBOMB,
                WEAPON_POOLCUE, WEAPON_SWEEPER, WEAPON_WRENCH
            };
            ----------------------------------------------------------------------------------------------------------------------------------------
            Translation table:
            pastebin.com/a39K8Nz8
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.HasEntityBeenDamagedByWeapon(System.Int32,System.UInt32,System.Int32)">
            <summary>
            It determines what weapons caused damage:
            
            If youu want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
            If you want to define any melee weapon, second parameter=0, third parameter=1.
            If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.HasPedBeenDamagedByWeapon(System.Int32,System.UInt32,System.Int32)">
            <summary>
            It determines what weapons caused damage:
            
            If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
            If you want to define any melee weapon, second parameter=0, third parameter=1.
            If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.HasPedGotWeapon(System.Int32,System.UInt32,System.Boolean)">
            <summary>
            p2 should be FALSE, otherwise it seems to always return FALSE
            
            Bool does not check if the weapon is current equipped, unfortunately.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.HasPedGotWeaponComponent(System.Int32,System.UInt32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.HasVehicleGotProjectileAttached(System.Int32,System.Int32,System.UInt32,System.Int32)">
            <summary>
            Third Parameter = unsure, but pretty sure it is weapon hash
            -- get_hash_key(weapon_stickybomb)
            
            Fourth Parameter = unsure, almost always -1
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.HasWeaponAssetLoaded(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.HasWeaponGotWeaponComponent(System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.HidePedWeaponForScriptedCutscene(System.Int32,System.Boolean)">
            <summary>
            Hides the players weapon during a cutscene.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.IsFlashLightOn(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.IsPedArmed(System.Int32,System.Int32)">
            <summary>
            p1 is anywhere from 4 to 7 in the scripts. Might be a weapon wheel group?
            
            ^Its kinda like that. 
            7 returns true if you are equipped with any weapon except your fists.
            6 returns true if you are equipped with any weapon except melee weapons.
            5 returns true if you are equipped with any weapon except the Explosives weapon group.
            4 returns true if you are equipped with any weapon except Explosives weapon group AND melee weapons.
            3 returns true if you are equipped with either Explosives or Melee weapons (the exact opposite of 4).
            2 returns true only if you are equipped with any weapon from the Explosives weapon group.
            1 returns true only if you are equipped with any Melee weapon.
            0 never returns true.
            
            Note: When I say Explosives weapon group, it does not include the Jerry can and Fire Extinguisher.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.IsPedCurrentWeaponSilenced(System.Int32)">
            <summary>
            This native returns a true or false value.
            
            Ped ped = The ped whose weapon you want to check.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.IsPedWeaponComponentActive(System.Int32,System.UInt32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.IsPedWeaponReadyToShoot(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.IsWeaponValid(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.MakePedReload(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.PedSkipNextReloading(System.Int32)">
            <summary>
            23.03.2017 19:08 by ins1de :
            
            _IS_PED_RELOADING is totally a wrong name...
            
            This native actually disables the reloading animation and script for the specified ped. Native renamed.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.RemoveAllPedWeapons(System.Int32,System.Boolean)">
            <summary>
            setting the last params to false it does that same so I would suggest its not a toggle
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.RemoveAllProjectilesOfType(System.UInt32,System.Boolean)">
            <summary>
            p1 seems always to be 0
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.RemoveWeaponAsset(System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.RemoveWeaponComponentFromPed(System.Int32,System.UInt32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.RemoveWeaponComponentFromWeaponObject(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.RemoveWeaponFromPed(System.Int32,System.UInt32)">
            <summary>
            This native removes a specified weapon from your selected ped.
            Weapon Hashes: pastebin.com/0wwDZgkF
            
            Example:
            C#:
            Function.Call(Hash.REMOVE_WEAPON_FROM_PED, Game.Player.Character, 0x99B507EA);
            
            C++:
            WEAPON::REMOVE_WEAPON_FROM_PED(PLAYER::PLAYER_PED_ID(), 0x99B507EA);
            
            The code above removes the knife from the player.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.RequestWeaponAsset(System.UInt32,System.Int32,System.Int32)">
            <summary>
            Nearly every instance of p1 I found was 31. Nearly every instance of p2 I found was 0.
            
            REQUEST_WEAPON_ASSET(iLocal_1888, 31, 26);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.RequestWeaponHighDetailModel(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetAmmoInClip(System.Int32,System.UInt32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetCurrentPedVehicleWeapon(System.Int32,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetCurrentPedWeapon(System.Int32,System.UInt32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetFlashLightFadeDistance(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetPedAmmo(System.Int32,System.UInt32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetPedAmmoByType(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetPedAmmoToDrop(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetPedChanceOfFiringBlanks(System.Int32,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetPedCurrentWeaponVisible(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Has 5 parameters since latest patches.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetPedDropsInventoryWeapon(System.Int32,System.UInt32,System.Single,System.Single,System.Single,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetPedDropsWeapon(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetPedDropsWeaponsWhenDead(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetPedGadget(System.Int32,System.UInt32,System.Boolean)">
            <summary>
            p1/gadgetHash was always 0xFBAB5776 (GADGET_PARACHUTE).
            p2 is always true.
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetPedInfiniteAmmo(System.Int32,System.Boolean,System.UInt32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetPedInfiniteAmmoClip(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetPedWeaponTintIndex(System.Int32,System.UInt32,System.Int32)">
            <summary>
            tintIndex can be the following:
            
            0 - Normal
            1 - Green
            2 - Gold
            3 - Pink
            4 - Army
            5 - LSPD
            6 - Orange
            7 - Platinum
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetWeaponAnimationOverride(System.Int32,System.UInt32)">
            <summary>
            Changes the selected ped aiming animation style. 
            Note : You must use GET_HASH_KEY!
            
            Strings to use with GET_HASH_KEY :
            
                Ballistic,
                Default,
              Fat,
              Female,
               FirstPerson,
              FirstPersonAiming,
                FirstPersonFranklin,
              FirstPersonFranklinAiming,
                FirstPersonFranklinRNG,
               FirstPersonFranklinScope,
             FirstPersonMPFemale,
              FirstPersonMichael,
               FirstPersonMichaelAiming,
             FirstPersonMichaelRNG,
                FirstPersonMichaelScope,
              FirstPersonRNG,
               FirstPersonScope,
             FirstPersonTrevor,
                FirstPersonTrevorAiming,
              FirstPersonTrevorRNG,
             FirstPersonTrevorScope,
               Franklin,
             Gang,
             Gang1H,
               GangFemale,
               Hillbilly,
                MP_F_Freemode,
                Michael,
              SuperFat,
             Trevor
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.SetWeaponObjectTintIndex(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0x2472622CE1F2D45F(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0x9DA58CDBF6BDBC08(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0x91EF34584710BE99(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0xCD79A550999D7D4F(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0x44F1012B69313374(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0x585847C5E4E11709(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0xA2C9AC24B4061285(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0xF0A60040BE558F2D(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0x6558AC7C17BFEF58(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0x4D1CB8DC40208A17(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0x3133B907D8B32053(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0xB3EA4FEABF41464B(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0x68F8BE6AF5CDF8A6(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0xDAB963831DBFD3F4(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0x0ABF535877897560(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0x1E45B34ADEBEE48E">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0xEFF296097FF1E509(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0xB4771B9AAF4E68E4(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0xE4DCEC7FD5B739A5(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0xB4C8D77C80C0421E(System.Int32,System.Single)">
            <summary>
            This does not take a weapon hash...
            </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0x9FE5633880ECD8ED(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0xE620FD3512A04F18(System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0xECDC202B25E5CF48(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0x4757F00BC6323CFE(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0x977CA98939E82E4B(System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Weapon.Unknown._0x5DA825A85D0EA6E6(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Zone">
            <summary>
            </summary>		
        </member>
        <member name="M:RAGE.Game.Zone.ClearPopscheduleOverrideVehicleModel(System.Int32)">
            <summary>
            Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.
            
            Modified example from am_imp_exp.c4, line 6418:
            / popSchedules0 = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));
            etc.
            /
            STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(vehicleHash);
            ZONE::CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(popSchedulesindex);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Zone.GetHashOfMapAreaAtCoords(System.Single,System.Single,System.Single)">
            <summary>
            Returns a hash representing which part of the map the given coords are located.
            
            Possible return values:
            (Hash of) city - -289320599
            (Hash of) countryside - 2072609373
            
            C# Example :
            
            Ped player = Game.Player.Character;
            Hash h = Function.CallHash(Hash.GET_HASH_OF_MAP_AREA_AT_COORDS, player.Position.X, player.Position.Y, player.Position.Z);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Zone.GetNameOfZone(System.Single,System.Single,System.Single)">
            <summary>
            AIRP = Los Santos International Airport
            ALAMO = Alamo Sea
            ALTA = Alta
            ARMYB = Fort Zancudo
            BANHAMC = Banham Canyon Dr
            BANNING = Banning
            BEACH = Vespucci Beach
            BHAMCA = Banham Canyon
            BRADP = Braddock Pass
            BRADT = Braddock Tunnel
            BURTON = Burton
            CALAFB = Calafia Bridge
            CANNY = Raton Canyon
            CCREAK = Cassidy Creek
            CHAMH = Chamberlain Hills
            CHIL = Vinewood Hills
            CHU = Chumash
            CMSW = Chiliad Mountain State Wilderness
            CYPRE = Cypress Flats
            DAVIS = Davis
            DELBE = Del Perro Beach
            DELPE = Del Perro
            DELSOL = La Puerta
            DESRT = Grand Senora Desert
            DOWNT = Downtown
            DTVINE = Downtown Vinewood
            EAST_V = East Vinewood
            EBURO = El Burro Heights
            ELGORL = El Gordo Lighthouse
            ELYSIAN = Elysian Island
            GALFISH = Galilee
            GOLF = GWC and Golfing Society
            GRAPES = Grapeseed
            GREATC = Great Chaparral
            HARMO = Harmony
            HAWICK = Hawick
            HORS = Vinewood Racetrack
            HUMLAB = Humane Labs and Research
            JAIL = Bolingbroke Penitentiary
            KOREAT = Little Seoul
            LACT = Land Act Reservoir
            LAGO = Lago Zancudo
            LDAM = Land Act Dam
            LEGSQU = Legion Square
            LMESA = La Mesa
            LOSPUER = La Puerta
            MIRR = Mirror Park
            MORN = Morningwood
            MOVIE = Richards Majestic
            MTCHIL = Mount Chiliad
            MTGORDO = Mount Gordo
            MTJOSE = Mount Josiah
            MURRI = Murrieta Heights
            NCHU = North Chumash
            NOOSE = N.O.O.S.E
            OCEANA = Pacific Ocean
            PALCOV = Paleto Cove
            PALETO = Paleto Bay
            PALFOR = Paleto Forest
            PALHIGH = Palomino Highlands
            PALMPOW = Palmer-Taylor Power Station
            PBLUFF = Pacific Bluffs
            PBOX = Pillbox Hill
            PROCOB = Procopio Beach
            RANCHO = Rancho
            RGLEN = Richman Glen
            RICHM = Richman
            ROCKF = Rockford Hills
            RTRAK = Redwood Lights Track
            SANAND = San Andreas
            SANCHIA = San Chianski Mountain Range
            SANDY = Sandy Shores
            SKID = Mission Row
            SLAB = Stab City
            STAD = Maze Bank Arena
            STRAW = Strawberry
            TATAMO = Tataviam Mountains
            TERMINA = Terminal
            TEXTI = Textile City
            TONGVAH = Tongva Hills
            TONGVAV = Tongva Valley
            VCANA = Vespucci Canals
            VESP = Vespucci
            VINE = Vinewood
            WINDF = Ron Alternates Wind Farm
            WVINE = West Vinewood
            ZANCUDO = Zancudo River
            ZP_ORT = Port of South Los Santos
            ZQ_UAR = Davis Quartz
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Zone.GetZoneAtCoords(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Zone.GetZoneFromNameId(System.String)">
            <summary>
            zoneName corresponds to an entry in popzone.ipl.
            
            AIRP = Los Santos International Airport
            ALAMO = Alamo Sea
            ALTA = Alta
            ARMYB = Fort Zancudo
            BANHAMC = Banham Canyon Dr
            BANNING = Banning
            BEACH = Vespucci Beach
            BHAMCA = Banham Canyon
            BRADP = Braddock Pass
            BRADT = Braddock Tunnel
            BURTON = Burton
            CALAFB = Calafia Bridge
            CANNY = Raton Canyon
            CCREAK = Cassidy Creek
            CHAMH = Chamberlain Hills
            CHIL = Vinewood Hills
            CHU = Chumash
            CMSW = Chiliad Mountain State Wilderness
            CYPRE = Cypress Flats
            DAVIS = Davis
            DELBE = Del Perro Beach
            DELPE = Del Perro
            DELSOL = La Puerta
            DESRT = Grand Senora Desert
            DOWNT = Downtown
            DTVINE = Downtown Vinewood
            EAST_V = East Vinewood
            EBURO = El Burro Heights
            ELGORL = El Gordo Lighthouse
            ELYSIAN = Elysian Island
            GALFISH = Galilee
            GOLF = GWC and Golfing Society
            GRAPES = Grapeseed
            GREATC = Great Chaparral
            HARMO = Harmony
            HAWICK = Hawick
            HORS = Vinewood Racetrack
            HUMLAB = Humane Labs and Research
            JAIL = Bolingbroke Penitentiary
            KOREAT = Little Seoul
            LACT = Land Act Reservoir
            LAGO = Lago Zancudo
            LDAM = Land Act Dam
            LEGSQU = Legion Square
            LMESA = La Mesa
            LOSPUER = La Puerta
            MIRR = Mirror Park
            MORN = Morningwood
            MOVIE = Richards Majestic
            MTCHIL = Mount Chiliad
            MTGORDO = Mount Gordo
            MTJOSE = Mount Josiah
            MURRI = Murrieta Heights
            NCHU = North Chumash
            NOOSE = N.O.O.S.E
            OCEANA = Pacific Ocean
            PALCOV = Paleto Cove
            PALETO = Paleto Bay
            PALFOR = Paleto Forest
            PALHIGH = Palomino Highlands
            PALMPOW = Palmer-Taylor Power Station
            PBLUFF = Pacific Bluffs
            PBOX = Pillbox Hill
            PROCOB = Procopio Beach
            RANCHO = Rancho
            RGLEN = Richman Glen
            RICHM = Richman
            ROCKF = Rockford Hills
            RTRAK = Redwood Lights Track
            SANAND = San Andreas
            SANCHIA = San Chianski Mountain Range
            SANDY = Sandy Shores
            SKID = Mission Row
            SLAB = Stab City
            STAD = Maze Bank Arena
            STRAW = Strawberry
            TATAMO = Tataviam Mountains
            TERMINA = Terminal
            TEXTI = Textile City
            TONGVAH = Tongva Hills
            TONGVAV = Tongva Valley
            VCANA = Vespucci Canals
            VESP = Vespucci
            VINE = Vinewood
            WINDF = Ron Alternates Wind Farm
            WVINE = West Vinewood
            ZANCUDO = Zancudo River
            ZP_ORT = Port of South Los Santos
            ZQ_UAR = Davis Quartz
            
            </summary>				
        </member>
        <member name="M:RAGE.Game.Zone.GetZonePopschedule(System.Int32)">
             <summary>
            
             </summary>				
        </member>
        <member name="M:RAGE.Game.Zone.GetZoneScumminess(System.Int32)">
            <summary>
            cellphone range 1- 5 used for signal bar in iFruit phone
            </summary>				
        </member>
        <member name="M:RAGE.Game.Zone.OverridePopscheduleVehicleModel(System.Int32,System.UInt32)">
            <summary>
            Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.
            
            Modified example from am_imp_exp.c4, line 6406:
            / popSchedules0 = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));
            etc.
            /
            ZONE::OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(popSchedulesindex, vehicleHash);
            STREAMING::REQUEST_MODEL(vehicleHash);
            </summary>				
        </member>
        <member name="M:RAGE.Game.Zone.SetZoneEnabled(System.Int32,System.Boolean)">
             <summary>
            
             </summary>				
        </member>
        <member name="T:RAGE.Game.Scaleform">
            <summary>
            A class which handles rendering of Scaleform elements.
            </summary>
        </member>
        <member name="M:RAGE.Input.IsUp(System.Int32)">
            <summary>
            Returns true if the key at passed virtual key code isn't pressed.
            </summary>
            <param name="keyCode"></param>
            <returns></returns>
        </member>
        <member name="M:RAGE.Input.IsDown(System.Int32)">
            <summary>
            Returns true if the key at passed virtual key code is pressed.
            </summary>
            <param name="keyCode"></param>
            <returns></returns>
        </member>
        <member name="M:RAGE.Input.TakeScreenshot(System.String,System.Int32,System.Single,System.Single)">
            <summary>
            Takes a screenshot of current player's screen into local folder.
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="quality"></param>
            <param name="compQuality"></param>
        </member>
        <member name="P:RAGE.Nametags.Enabled">
            <summary>
            Changes nametags visibility state. When disabled, a list of nametag data gets passed into Tick.
            </summary>
        </member>
        <member name="M:RAGE.Discord.Update(System.String,System.String)">
            <summary>
            Updates user's Discord rich presence.
            </summary>
            <param name="details"></param>
            <param name="state"></param>
        </member>
        <member name="P:RAGE.Ui.HtmlWindow.Url">
            <summary>
            Returns current browser URL.
            </summary>
        </member>
        <member name="P:RAGE.Ui.HtmlWindow.Active">
            <summary>
            Marks the window as active.
            </summary>
        </member>
        <member name="M:RAGE.Ui.HtmlWindow.MarkAsChat">
            <summary>
            Marks the window as chat window so it receives all the "chatAPI" calls on chat interaction.
            </summary>
        </member>
        <member name="M:RAGE.Ui.HtmlWindow.ExecuteJs(System.String)">
            <summary>
            Executes JavaScript code in the browser's own context.
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:RAGE.Ui.HtmlWindow.Reload(System.Boolean)">
            <summary>
            Reloads the window.
            </summary>
            <param name="ignoreCache"></param>
        </member>
        <member name="M:RAGE.Ui.HtmlWindow.Destroy">
            <summary>
            Destroys the window.
            </summary>
        </member>
        <member name="P:RAGE.Ui.Cursor.Visible">
            <summary>
            Changes cursor visibility state.
            </summary>
        </member>
        <member name="M:RAGE.Ui.Cursor.ShowCursor(System.Boolean,System.Boolean)">
            <summary>
            Shows the cursor when "show" is true, freezes the input if "freezeGameInput" is true.
            </summary>
            <param name="freezeGameInput"></param>
            <param name="show"></param>
        </member>
        <member name="P:RAGE.Ui.Cursor.Position">
            <summary>
            Returns current cursor absolute position.
            </summary>
        </member>
        <member name="P:RAGE.Voice.Allowed">
            <summary>
            Checks if voice chat is allowed by the player and if got initialized successfully (e.g., it wont when there's no a microphone).
            </summary>
        </member>
        <member name="P:RAGE.Voice.Muted">
            <summary>
            Mutes the player.
            </summary>
        </member>
        <member name="M:RAGE.Voice.SetPreprocessingParam(System.Int32,System.Int32)">
            <summary>
            Changes BASS preprocessing param.
            </summary>
            <param name="paramId"></param>
            <param name="value"></param>
        </member>
        <member name="M:RAGE.Voice.GetPreprocessingParam(System.Int32)">
            <summary>
            Gets BASS preprocessing param.
            </summary>
            <param name="paramId"></param>
            <returns></returns>
        </member>
        <member name="M:RAGE.NUI.Sprite.#ctor(System.String,System.String,System.Drawing.Point,System.Drawing.Size,System.Single,System.Drawing.Color)">
            <summary>
            Creates a game sprite object from a texture dictionary and texture name.
            </summary>
            <param name="textureDict"></param>
            <param name="textureName"></param>
            <param name="position"></param>
            <param name="size"></param>
            <param name="heading"></param>
            <param name="color"></param>
        </member>
        <member name="M:RAGE.NUI.Sprite.#ctor(System.String,System.String,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Creates a game sprite object from a texture dictionary and texture name.
            </summary>
            <param name="textureDict"></param>
            <param name="textureName"></param>
            <param name="position"></param>
            <param name="size"></param>
        </member>
        <member name="M:RAGE.NUI.Sprite.Draw">
            <summary>
            Draws the sprite on a 1080-pixels height base.
            </summary>
        </member>
        <member name="M:RAGE.NUI.Sprite.DrawTexture(System.String,System.Drawing.Point,System.Drawing.Size,System.Single,System.Drawing.Color)">
            <summary>
            Draw a custom texture from a file on a 1080-pixels height base.
            </summary>
            <param name="path">Path to texture file.</param>
            <param name="position"></param>
            <param name="size"></param>
        </member>
        <member name="M:RAGE.NUI.Sprite.DrawTexture(System.String,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Draw a custom texture from a file on a 1080-pixels height base.
            </summary>
            <param name="path">Path to texture file.</param>
            <param name="position"></param>
            <param name="size"></param>
        </member>
        <member name="M:RAGE.NUI.Sprite.WriteFileFromResources(System.Reflection.Assembly,System.String)">
            <summary>
            Save an embedded resource to a temporary file.
            </summary>
            <param name="yourAssembly">Your executing assembly.</param>
            <param name="fullResourceName">Resource name including your solution name. E.G MyMenuMod.banner.png</param>
            <returns>Absolute path to the written file.</returns>
        </member>
        <member name="M:RAGE.NUI.Sprite.WriteFileFromResources(System.Reflection.Assembly,System.String,System.String)">
            <summary>
            Save an embedded resource to a concrete path.
            </summary>
            <param name="yourAssembly">Your executing assembly.</param>
            <param name="fullResourceName">Resource name including your solution name. E.G MyMenuMod.banner.png</param>
            <param name="savePath">Path to where save the file, including the filename.</param>
            <returns>Absolute path to the written file.</returns>
        </member>
        <member name="P:RAGE.NUI.BarTimerBar.Percentage">
            <summary>
            Bar percentage. Goes from 0 to 1.
            </summary>
        </member>
        <member name="T:RAGE.NUI.UIResRectangle">
            <summary>
            A rectangle in 1080 pixels height system.
            </summary>
        </member>
        <member name="T:RAGE.NUI.UIResText">
            <summary>
            A Text object in the 1080 pixels height base system.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIResText.AddLongString(System.String)">
            <summary>
            Push a long string into the stack.
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:RAGE.NUI.InstructionalButton.#ctor(RAGE.Game.Control,System.String)">
            <summary>
            Add a dynamic button to the instructional buttons array.
            Changes whether the controller is being used and changes depending on keybinds.
            </summary>
            <param name="control">GTA.Control that gets converted into a button.</param>
            <param name="text">Help text that goes with the button.</param>
        </member>
        <member name="M:RAGE.NUI.InstructionalButton.#ctor(System.String,System.String)">
            <summary>
            Adds a keyboard button to the instructional buttons array.
            </summary>
            <param name="keystring">Custom keyboard button, like "I", or "O", or "F5".</param>
            <param name="text">Help text that goes with the button.</param>
        </member>
        <member name="M:RAGE.NUI.InstructionalButton.BindToItem(RAGE.NUI.UIMenuItem)">
            <summary>
            Bind this button to an item, so it's only shown when that item is selected.
            </summary>
            <param name="item">Item to bind to.</param>
        </member>
        <member name="E:RAGE.NUI.UIMenuCheckboxItem.CheckboxEvent">
            <summary>
            Triggered when the checkbox state is changed.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenuCheckboxItem.#ctor(System.String,System.Boolean)">
            <summary>
            Checkbox item with a toggleable checkbox.
            </summary>
            <param name="text">Item label.</param>
            <param name="check">Boolean value whether the checkbox is checked.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenuCheckboxItem.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Checkbox item with a toggleable checkbox.
            </summary>
            <param name="text">Item label.</param>
            <param name="check">Boolean value whether the checkbox is checked.</param>
            <param name="description">Description for this item.</param>
        </member>
        <member name="P:RAGE.NUI.UIMenuCheckboxItem.Checked">
            <summary>
            Change or get whether the checkbox is checked.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenuCheckboxItem.Position(System.Int32)">
            <summary>
            Change item's position.
            </summary>
            <param name="y">New Y value.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenuCheckboxItem.Draw">
            <summary>
            Draw item.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenuDynamicListItem.#ctor(System.String,System.String,RAGE.NUI.UIMenuDynamicListItem.DynamicListItemChangeCallback)">
            <summary>
            List item with items generated at runtime
            </summary>
            <param name="text">Label text</param>
        </member>
        <member name="M:RAGE.NUI.UIMenuDynamicListItem.#ctor(System.String,System.String,System.String,RAGE.NUI.UIMenuDynamicListItem.DynamicListItemChangeCallback)">
            <summary>
            List item with items generated at runtime
            </summary>
            <param name="text">Label text</param>
            <param name="description">Item description</param>
        </member>
        <member name="M:RAGE.NUI.UIMenuDynamicListItem.Position(System.Int32)">
            <summary>
            Change item's position.
            </summary>
            <param name="y">New Y position.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenuDynamicListItem.Draw">
            <summary>
            Draw item.
            </summary>
        </member>
        <member name="T:RAGE.NUI.UIMenuItem">
            <summary>
            Simple item with a label.
            </summary>
        </member>
        <member name="E:RAGE.NUI.UIMenuItem.Activated">
            <summary>
            Called when user selects the current item.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenuItem.#ctor(System.String)">
            <summary>
            Basic menu button.
            </summary>
            <param name="text">Button label.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenuItem.#ctor(System.String,System.String)">
            <summary>
            Basic menu button.
            </summary>
            <param name="text">Button label.</param>
            <param name="description">Description.</param>
        </member>
        <member name="P:RAGE.NUI.UIMenuItem.Selected">
            <summary>
            Whether this item is currently selected.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenuItem.Hovered">
            <summary>
            Whether this item is currently being hovered on with a mouse.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenuItem.Description">
            <summary>
            This item's description.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenuItem.Enabled">
            <summary>
            Whether this item is enabled or disabled (text is greyed out and you cannot select it).
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenuItem.Position(System.Int32)">
            <summary>
            Set item's position.
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:RAGE.NUI.UIMenuItem.Draw">
            <summary>
            Draw this item.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenuItem.Offset">
            <summary>
            This item's offset.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenuItem.Text">
            <summary>
            Returns this item's label.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenuItem.SetLeftBadge(RAGE.NUI.UIMenuItem.BadgeStyle)">
            <summary>
            Set the left badge. Set it to None to remove the badge.
            </summary>
            <param name="badge"></param>
        </member>
        <member name="M:RAGE.NUI.UIMenuItem.SetRightBadge(RAGE.NUI.UIMenuItem.BadgeStyle)">
            <summary>
            Set the right badge. Set it to None to remove the badge.
            </summary>
            <param name="badge"></param>
        </member>
        <member name="M:RAGE.NUI.UIMenuItem.SetRightLabel(System.String)">
            <summary>
            Set the right label.
            </summary>
            <param name="text">Text as label. Set it to "" to remove the label.</param>
        </member>
        <member name="P:RAGE.NUI.UIMenuItem.RightLabel">
            <summary>
            Returns the current right label.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenuItem.LeftBadge">
            <summary>
            Returns the current left badge.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenuItem.RightBadge">
            <summary>
            Returns the current right badge.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenuItem.Parent">
            <summary>
            Returns the menu this item is in.
            </summary>
        </member>
        <member name="E:RAGE.NUI.UIMenuListItem.OnListChanged">
            <summary>
            Triggered when the list is changed.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenuListItem.Index">
            <summary>
            Returns the current selected index.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenuListItem.#ctor(System.String,System.Collections.Generic.List{System.Object},System.Int32)">
            <summary>
            List item, with left/right arrows.
            </summary>
            <param name="text">Item label.</param>
            <param name="items">List that contains your items.</param>
            <param name="index">Index in the list. If unsure user 0.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenuListItem.#ctor(System.String,System.Collections.Generic.List{System.Object},System.Int32,System.String)">
            <summary>
            List item, with left/right arrows.
            </summary>
            <param name="text">Item label.</param>
            <param name="items">List that contains your items.</param>
            <param name="index">Index in the list. If unsure user 0.</param>
            <param name="description">Description for this item.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenuListItem.Position(System.Int32)">
            <summary>
            Change item's position.
            </summary>
            <param name="y">New Y position.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenuListItem.ItemToIndex(System.Object)">
            <summary>
            Find an item in the list and return it's index.
            </summary>
            <param name="item">Item to search for.</param>
            <returns>Item index.</returns>
        </member>
        <member name="M:RAGE.NUI.UIMenuListItem.IndexToItem(System.Int32)">
            <summary>
            Find an item by it's index and return the item.
            </summary>
            <param name="index">Item's index.</param>
            <returns>Item</returns>
        </member>
        <member name="M:RAGE.NUI.UIMenuListItem.Draw">
            <summary>
            Draw item.
            </summary>
        </member>
        <member name="T:RAGE.NUI.MenuPool">
            <summary>
            Helper class that handles all of your Menus. After instatiating it, you will have to add your menu by using the Add method.
            </summary>
        </member>
        <member name="M:RAGE.NUI.MenuPool.Add(RAGE.NUI.UIMenu)">
            <summary>
            Add your menu to the menu pool.
            </summary>
            <param name="menu"></param>
        </member>
        <member name="M:RAGE.NUI.MenuPool.AddSubMenu(RAGE.NUI.UIMenu,System.String)">
            <summary>
            Create and add a submenu to the menu pool.
            Adds an item with the given text to the menu, creates a corresponding submenu, and binds the submenu to the item.
            The submenu inherits its title from the menu, and its subtitle from the item text.
            </summary>
            <param name="menu">The parent menu to which the submenu must be added.</param>
            <param name="text">The name of the submenu.</param>
            <returns>The newly created submenu.</returns>
        </member>
        <member name="M:RAGE.NUI.MenuPool.AddSubMenu(RAGE.NUI.UIMenu,System.String,System.Drawing.Point)">
            <summary>
            Create and add a submenu to the menu pool with a custom offset.
            Adds an item with the given text to the menu, creates a corresponding submenu, and binds the submenu to the item.
            The submenu inherits its title from the menu, and its subtitle from the item text.
            </summary>
            <param name="menu">The parent menu to which the submenu must be added.</param>
            <param name="text">The name of the submenu</param>
            <param name="offset">The offset of the menu</param>
            <returns>The newly created submenu.</returns>
        </member>
        <member name="M:RAGE.NUI.MenuPool.AddSubMenu(RAGE.NUI.UIMenu,System.String,System.String)">
            <summary>
            Create and add a submenu to the menu pool.
            Adds an item with the given text and description to the menu, creates a corresponding submenu, and binds the submenu to the item.
            The submenu inherits its title from the menu, and its subtitle from the item text.
            </summary>
            <param name="menu">The parent menu to which the submenu must be added.</param>
            <param name="text">The name of the submenu.</param>
            <param name="description">The name of the submenu.</param>
            <returns>The newly created submenu.</returns>
        </member>
        <member name="M:RAGE.NUI.MenuPool.RefreshIndex">
            <summary>
            Refresh index of every menu in the pool.
            Use this after you have finished constructing the entire menu pool.
            </summary>
        </member>
        <member name="M:RAGE.NUI.MenuPool.ToList">
            <summary>
            Returns all of your menus.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RAGE.NUI.MenuPool.ProcessControl">
            <summary>
            Processes all of your visible menus' controls.
            </summary>
        </member>
        <member name="M:RAGE.NUI.MenuPool.ProcessKey(System.Windows.Forms.Keys)">
            <summary>
            Processes all of your visible menus' keys.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:RAGE.NUI.MenuPool.ProcessMouse">
            <summary>
            Processes all of your visible menus' mouses.
            </summary>
        </member>
        <member name="M:RAGE.NUI.MenuPool.Draw">
            <summary>
            Draws all visible menus.
            </summary>
        </member>
        <member name="M:RAGE.NUI.MenuPool.IsAnyMenuOpen">
            <summary>
            Checks if any menu is currently visible.
            </summary>
            <returns>true if at least one menu is visible, false if not.</returns>
        </member>
        <member name="M:RAGE.NUI.MenuPool.ProcessMenus">
            <summary>
            Process all of your menus' functions. Call this in a tick event.
            </summary>
        </member>
        <member name="M:RAGE.NUI.MenuPool.CloseAllMenus">
            <summary>
            Closes all of your menus.
            </summary>
        </member>
        <member name="M:RAGE.NUI.PauseMenu.MissionLogo.#ctor(System.String)">
            <summary>
            Create a logo from an external picture.
            </summary>
            <param name="filepath">Path to the picture</param>
        </member>
        <member name="M:RAGE.NUI.PauseMenu.MissionLogo.#ctor(System.String,System.String)">
            <summary>
            Create a mission logo from a game texture.
            </summary>
            <param name="textureDict">Name of the texture dictionary</param>
            <param name="textureName">Name of the texture.</param>
        </member>
        <member name="M:RAGE.NUI.StringMeasurer.MeasureString(System.String)">
            <summary>
            Measures width of a 0.35 scale string.
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:RAGE.NUI.UIMenu">
            <summary>
            Base class for RAGE.NUI. Calls the next events: OnIndexChange, OnListChanged, OnCheckboxChange, OnItemSelect, OnMenuClose, OnMenuchange.
            </summary>
        </member>
        <member name="E:RAGE.NUI.UIMenu.OnIndexChange">
            <summary>
            Called when user presses up or down, changing current selection.
            </summary>
        </member>
        <member name="E:RAGE.NUI.UIMenu.OnListChange">
            <summary>
            Called when user presses left or right, changing a list position.
            </summary>
        </member>
        <member name="E:RAGE.NUI.UIMenu.OnCheckboxChange">
            <summary>
            Called when user presses enter on a checkbox item.
            </summary>
        </member>
        <member name="E:RAGE.NUI.UIMenu.OnItemSelect">
            <summary>
            Called when user selects a simple item.
            </summary>
        </member>
        <member name="E:RAGE.NUI.UIMenu.OnMenuClose">
            <summary>
            Called when user closes the menu or goes back in a menu chain.
            </summary>
        </member>
        <member name="E:RAGE.NUI.UIMenu.OnMenuChange">
            <summary>
            Called when user either clicks on a binded button or goes back to a parent menu.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenu.#ctor(System.String,System.String)">
            <summary>
            Basic Menu constructor.
            </summary>
            <param name="title">Title that appears on the big banner.</param>
            <param name="subtitle">Subtitle that appears in capital letters in a small black bar.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.#ctor(System.String,System.String,System.Drawing.Point)">
            <summary>
            Basic Menu constructor with an offset.
            </summary>
            <param name="title">Title that appears on the big banner.</param>
            <param name="subtitle">Subtitle that appears in capital letters in a small black bar. Set to "" if you dont want a subtitle.</param>
            <param name="offset">Point object with X and Y data for offsets. Applied to all menu elements.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.#ctor(System.String,System.String,System.Drawing.Point,System.String)">
            <summary>
            Initialise a menu with a custom texture banner.
            </summary>
            <param name="title">Title that appears on the big banner. Set to "" if you don't want a title.</param>
            <param name="subtitle">Subtitle that appears in capital letters in a small black bar. Set to "" if you dont want a subtitle.</param>
            <param name="offset">Point object with X and Y data for offsets. Applied to all menu elements.</param>
            <param name="customBanner">Path to your custom texture.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.#ctor(System.String,System.String,System.Drawing.Point,System.String,System.String)">
            <summary>
            Advanced Menu constructor that allows custom title banner.
            </summary>
            <param name="title">Title that appears on the big banner. Set to "" if you are using a custom banner.</param>
            <param name="subtitle">Subtitle that appears in capital letters in a small black bar.</param>
            <param name="offset">Point object with X and Y data for offsets. Applied to all menu elements.</param>
            <param name="spriteLibrary">Sprite library name for the banner.</param>
            <param name="spriteName">Sprite name for the banner.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.DisEnableControls(System.Boolean,System.Boolean)">
            <summary>
            Enable or disable all controls but the necessary to operate a menu.
            </summary>
            <param name="enable"></param>
            <param name="enableNeccessary"></param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.GetScreenResolutionMaintainRatio">
            <summary>
            Returns the 1080pixels-based screen resolution while mantaining current aspect ratio.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RAGE.NUI.UIMenu.GetScreenResolutionMantainRatio">
            <summary>
            Old GetScreenResolutionMantainRatio Method to support old versions
            </summary>
            <returns></returns>
        </member>
        <member name="M:RAGE.NUI.UIMenu.IsMouseInBounds(System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Chech whether the mouse is inside the specified rectangle.
            </summary>
            <param name="topLeft">top left point of your rectangle.</param>
            <param name="boxSize">size of your rectangle.</param>
            <returns></returns>
        </member>
        <member name="M:RAGE.NUI.UIMenu.GetSafezoneBounds">
            <summary>
            Returns the safezone bounds in pixel, relative to the 1080pixel based system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RAGE.NUI.UIMenu.SetMenuWidthOffset(System.Int32)">
            <summary>
            Change the menu's width. The width is calculated as DefaultWidth + WidthOffset, so a width offset of 10 would enlarge the menu by 10 pixels.
            </summary>
            <param name="widthOffset">New width offset.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.DisableInstructionalButtons(System.Boolean)">
            <summary>
            Enable or disable the instructional buttons.
            </summary>
            <param name="disable"></param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.SetBannerType(RAGE.NUI.Sprite)">
            <summary>
            Set the banner to your own Sprite object.
            </summary>
            <param name="spriteBanner">Sprite object. The position and size does not matter.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.SetBannerType(RAGE.NUI.UIResRectangle)">
            <summary>
             Set the banner to your own Rectangle.
            </summary>
            <param name="rectangle">UIResRectangle object. Position and size does not matter.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.SetBannerType(System.String)">
            <summary>
            Set the banner to your own custom texture. Set it to "" if you want to restore the banner.
            </summary>
            <param name="pathToCustomSprite">Path to your sprite image.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.AddItem(RAGE.NUI.UIMenuItem)">
            <summary>
            Add an item to the menu.
            </summary>
            <param name="item">Item object to be added. Can be normal item, checkbox or list item.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.RemoveItemAt(System.Int32)">
            <summary>
            Remove an item at index n.
            </summary>
            <param name="index">Index to remove the item at.</param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.RefreshIndex">
            <summary>
            Reset the current selected item to 0. Use this after you add or remove items dynamically.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenu.Clear">
            <summary>
            Remove all items from the menu.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenu.GoUpOverflow">
            <summary>
            Go up the menu if the number of items is more than maximum items on screen.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenu.GoUp">
            <summary>
            Go up the menu if the number of items is less than or equal to the maximum items on screen.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenu.GoDownOverflow">
            <summary>
            Go down the menu if the number of items is more than maximum items on screen.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenu.GoDown">
            <summary>
            Go up the menu if the number of items is less than or equal to the maximum items on screen.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenu.GoLeft">
            <summary>
            Go left on a UIMenuListItem.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenu.GoRight">
            <summary>
            Go right on a UIMenuListItem.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenu.SelectItem">
            <summary>
            Activate the current selected item.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenu.GoBack">
            <summary>
            Close or go back in a menu chain.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenu.BindMenuToItem(RAGE.NUI.UIMenu,RAGE.NUI.UIMenuItem)">
            <summary>
            Bind a menu to a button. When the button is clicked that menu will open.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenu.ReleaseMenuFromItem(RAGE.NUI.UIMenuItem)">
            <summary>
            Remove menu binding from button.
            </summary>
            <param name="releaseFrom">Button to release from.</param>
            <returns>Returns true if the operation was successful.</returns>
        </member>
        <member name="M:RAGE.NUI.UIMenu.SetKey(RAGE.NUI.UIMenu.MenuControls,System.Windows.Forms.Keys)">
            <summary>
            Set a key to control a menu. Can be multiple keys for each control.
            </summary>
            <param name="control"></param>
            <param name="keyToSet"></param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.SetKey(RAGE.NUI.UIMenu.MenuControls,RAGE.Game.Control)">
            <summary>
            Set a GTA.Control to control a menu. Can be multiple controls. This applies it to all indexes.
            </summary>
            <param name="control"></param>
            <param name="gtaControl"></param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.SetKey(RAGE.NUI.UIMenu.MenuControls,RAGE.Game.Control,System.Int32)">
            <summary>
            Set a GTA.Control to control a menu only on a specific index.
            </summary>
            <param name="control"></param>
            <param name="gtaControl"></param>
            <param name="controlIndex"></param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.ResetKey(RAGE.NUI.UIMenu.MenuControls)">
            <summary>
            Remove all controls on a control.
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.HasControlJustBeenPressed(RAGE.NUI.UIMenu.MenuControls,System.Windows.Forms.Keys)">
            <summary>
            Check whether a menucontrol has been pressed.
            </summary>
            <param name="control">Control to check for.</param>
            <param name="key">Key if you're using keys.</param>
            <returns></returns>
        </member>
        <member name="M:RAGE.NUI.UIMenu.HasControlJustBeenReleaseed(RAGE.NUI.UIMenu.MenuControls,System.Windows.Forms.Keys)">
            <summary>
            Check whether a menucontrol has been released.
            </summary>
            <param name="control">Control to check for.</param>
            <param name="key">Key if you're using keys.</param>
            <returns></returns>
        </member>
        <member name="M:RAGE.NUI.UIMenu.IsControlBeingPressed(RAGE.NUI.UIMenu.MenuControls,System.Windows.Forms.Keys)">
            <summary>
            Check whether a menucontrol is being pressed.
            </summary>
            <param name="control"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:RAGE.NUI.UIMenu.IsMouseInListItemArrows(RAGE.NUI.UIMenuItem,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Function to get whether the cursor is in an arrow space, or in label of an UIMenuListItem.
            </summary>
            <param name="item">What item to check</param>
            <param name="topLeft">top left point of the item.</param>
            <param name="safezone">safezone size.</param>
            <returns>0 - Not in item at all, 1 - In label, 2 - In arrow space.</returns>
        </member>
        <member name="M:RAGE.NUI.UIMenu.FormatDescription(System.String)">
            <summary>
            Formats the input string so it doesn't go out of bounds of the description box.
            </summary>
            <param name="input">String to format.</param>
            <returns></returns>
        </member>
        <member name="M:RAGE.NUI.UIMenu.Draw">
            <summary>
            Draw the menu and all of it's components.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenu.ProcessMouse">
            <summary>
            Process the mouse's position and check if it's hovering over any UI element. Call this in OnTick
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenu.ProcessControl(System.Windows.Forms.Keys)">
            <summary>
            Process control-stroke. Call this in the OnTick event.
            </summary>
        </member>
        <member name="M:RAGE.NUI.UIMenu.ProcessKey(System.Windows.Forms.Keys)">
            <summary>
            Process keystroke. Call this in the OnKeyDown event.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:RAGE.NUI.UIMenu.UpdateScaleform">
            <summary>
            Manually update the instructional buttons scaleform.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenu.Visible">
            <summary>
            Change whether this menu is visible to the user.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenu.CurrentSelection">
            <summary>
            Returns the current selected item's index.
            Change the current selected item to index. Use this after you add or remove items dynamically.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenu.IsUsingController">
            <summary>
            Returns false if last input was made with mouse and keyboard, true if it was made with a controller.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenu.Size">
            <summary>
            Returns the amount of items in the menu.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenu.Title">
            <summary>
            Returns the title object.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenu.Subtitle">
            <summary>
            Returns the subtitle object.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenu.CounterPretext">
            <summary>
            String to pre-attach to the counter string. Useful for color codes.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenu.ParentMenu">
            <summary>
            If this is a nested menu, returns the parent menu. You can also set it to a menu so when pressing Back it goes to that menu.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenu.ParentItem">
            <summary>
            If this is a nested menu, returns the item it was bound to.
            </summary>
        </member>
        <member name="P:RAGE.NUI.UIMenu.WidthOffset">
            <summary>
            Returns the current width offset.
            </summary>
        </member>
    </members>
</doc>
