<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bootstrapper.1.1.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:GTANetworkAPI.Fakes.ShimAPI">
            <summary>Shim-Typ von GTANetworkAPI.API</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.#ctor(GTANetworkAPI.API)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimAPI.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimAPI.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IACL)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IBlip)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IChat)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.ICheckpoint)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IClientEvent)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IColShape)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IData)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IEntity)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IExplosion)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IMarker)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.INative)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.INotification)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IObject)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IParticle)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IPed)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IPickup)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IPlayer)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IPools)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IResource)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IServer)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.ITextLabel)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IUtil)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IVehicle)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimAPI.Bind(GTANetworkMethods.IWorld)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimAPI.Constructor">
            <summary>Legt die Shim von API.API(API this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimAPI.NotImplementedFuncString">
            <summary>Legt die Shim von API.NotImplementedFunc(String caller) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimAPI.NotThreadSafeFuncString">
            <summary>Legt die Shim von API.NotThreadSafeFunc(String caller) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimAPI.SharedGet">
            <summary>Legt die Shim von API.get_Shared() fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimArgumentConversionDelegate">
            <summary>Shim-Typ von GTANetworkAPI.ArgumentConversionDelegate</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimArgumentConversionDelegate.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimArgumentConversionDelegate.#ctor(GTANetworkAPI.ArgumentConversionDelegate)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimArgumentConversionDelegate.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimArgumentConversionDelegate.AllInstances.BeginInvokeTypeStringAsyncCallbackObject">
            <summary>Legt die Shim von ArgumentConversionDelegate.BeginInvoke(ArgumentConversionDelegate this, Type conversionTarget, String argument, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimArgumentConversionDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Legt die Shim von ArgumentConversionDelegate.EndInvoke(ArgumentConversionDelegate this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimArgumentConversionDelegate.AllInstances.InvokeTypeString">
            <summary>Legt die Shim von ArgumentConversionDelegate.Invoke(ArgumentConversionDelegate this, Type conversionTarget, String argument) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimArgumentConversionDelegate.BeginInvokeTypeStringAsyncCallbackObject">
            <summary>Legt die Shim von ArgumentConversionDelegate.BeginInvoke(ArgumentConversionDelegate this, Type conversionTarget, String argument, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimArgumentConversionDelegate.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimArgumentConversionDelegate.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimArgumentConversionDelegate.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimArgumentConversionDelegate.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimArgumentConversionDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimArgumentConversionDelegate.ConstructorObjectIntPtr">
            <summary>Legt die Shim von ArgumentConversionDelegate.ArgumentConversionDelegate(ArgumentConversionDelegate this, Object object, IntPtr method) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimArgumentConversionDelegate.EndInvokeIAsyncResult">
            <summary>Legt die Shim von ArgumentConversionDelegate.EndInvoke(ArgumentConversionDelegate this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimArgumentConversionDelegate.InvokeTypeString">
            <summary>Legt die Shim von ArgumentConversionDelegate.Invoke(ArgumentConversionDelegate this, Type conversionTarget, String argument) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimBlip">
            <summary>Shim-Typ von GTANetworkAPI.Blip</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimBlip.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimBlip.#ctor(GTANetworkAPI.Blip)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimBlip.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.ColorGet">
            <summary>Legt die Shim von Blip.get_Color(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.ColorSetInt32">
            <summary>Legt die Shim von Blip.set_Color(Blip this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.NameGet">
            <summary>Legt die Shim von Blip.get_Name(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.NameSetString">
            <summary>Legt die Shim von Blip.set_Name(Blip this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.PositionGet">
            <summary>Legt die Shim von Blip.get_Position(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.PositionSetVector3">
            <summary>Legt die Shim von Blip.set_Position(Blip this, Vector3 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.RouteColorGet">
            <summary>Legt die Shim von Blip.get_RouteColor(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.RouteColorSetInt32">
            <summary>Legt die Shim von Blip.set_RouteColor(Blip this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.RouteVisibleGet">
            <summary>Legt die Shim von Blip.get_RouteVisible(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.RouteVisibleSetBoolean">
            <summary>Legt die Shim von Blip.set_RouteVisible(Blip this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.ScaleGet">
            <summary>Legt die Shim von Blip.get_Scale(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.ScaleSetSingle">
            <summary>Legt die Shim von Blip.set_Scale(Blip this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.ShortRangeGet">
            <summary>Legt die Shim von Blip.get_ShortRange(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.ShortRangeSetBoolean">
            <summary>Legt die Shim von Blip.set_ShortRange(Blip this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.SpriteGet">
            <summary>Legt die Shim von Blip.get_Sprite(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.SpriteSetUInt32">
            <summary>Legt die Shim von Blip.set_Sprite(Blip this, UInt32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.TransparencyGet">
            <summary>Legt die Shim von Blip.get_Transparency(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.AllInstances.TransparencySetInt32">
            <summary>Legt die Shim von Blip.set_Transparency(Blip this, Int32 value) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimBlip.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimBlip.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.ColorGet">
            <summary>Legt die Shim von Blip.get_Color(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.ColorSetInt32">
            <summary>Legt die Shim von Blip.set_Color(Blip this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.ConstructorNetHandle">
            <summary>Legt die Shim von Blip.Blip(Blip this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.NameGet">
            <summary>Legt die Shim von Blip.get_Name(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.NameSetString">
            <summary>Legt die Shim von Blip.set_Name(Blip this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.PositionGet">
            <summary>Legt die Shim von Blip.get_Position(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.PositionSetVector3">
            <summary>Legt die Shim von Blip.set_Position(Blip this, Vector3 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.RouteColorGet">
            <summary>Legt die Shim von Blip.get_RouteColor(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.RouteColorSetInt32">
            <summary>Legt die Shim von Blip.set_RouteColor(Blip this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.RouteVisibleGet">
            <summary>Legt die Shim von Blip.get_RouteVisible(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.RouteVisibleSetBoolean">
            <summary>Legt die Shim von Blip.set_RouteVisible(Blip this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.ScaleGet">
            <summary>Legt die Shim von Blip.get_Scale(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.ScaleSetSingle">
            <summary>Legt die Shim von Blip.set_Scale(Blip this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.ShortRangeGet">
            <summary>Legt die Shim von Blip.get_ShortRange(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.ShortRangeSetBoolean">
            <summary>Legt die Shim von Blip.set_ShortRange(Blip this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.SpriteGet">
            <summary>Legt die Shim von Blip.get_Sprite(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.SpriteSetUInt32">
            <summary>Legt die Shim von Blip.set_Sprite(Blip this, UInt32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.TransparencyGet">
            <summary>Legt die Shim von Blip.get_Transparency(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimBlip.TransparencySetInt32">
            <summary>Legt die Shim von Blip.set_Transparency(Blip this, Int32 value) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimCancelEventArgs">
            <summary>Shim-Typ von GTANetworkAPI.CancelEventArgs</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimCancelEventArgs.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimCancelEventArgs.#ctor(GTANetworkAPI.CancelEventArgs)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimCancelEventArgs.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCancelEventArgs.AllInstances.CancelGet">
            <summary>Legt die Shim von CancelEventArgs.get_Cancel(CancelEventArgs this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCancelEventArgs.AllInstances.CancelSetBoolean">
            <summary>Legt die Shim von CancelEventArgs.set_Cancel(CancelEventArgs this, Boolean value) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimCancelEventArgs.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimCancelEventArgs.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCancelEventArgs.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCancelEventArgs.CancelGet">
            <summary>Legt die Shim von CancelEventArgs.get_Cancel(CancelEventArgs this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCancelEventArgs.CancelSetBoolean">
            <summary>Legt die Shim von CancelEventArgs.set_Cancel(CancelEventArgs this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCancelEventArgs.Constructor">
            <summary>Legt die Shim von CancelEventArgs.CancelEventArgs(CancelEventArgs this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCancelEventArgs.ConstructorBoolean">
            <summary>Legt die Shim von CancelEventArgs.CancelEventArgs(CancelEventArgs this, Boolean cancel) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimCheckpoint">
            <summary>Shim-Typ von GTANetworkAPI.Checkpoint</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimCheckpoint.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimCheckpoint.#ctor(GTANetworkAPI.Checkpoint)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimCheckpoint.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCheckpoint.AllInstances.ColorGet">
            <summary>Legt die Shim von Checkpoint.get_Color(Checkpoint this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCheckpoint.AllInstances.ColorSetColor">
            <summary>Legt die Shim von Checkpoint.set_Color(Checkpoint this, Color value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCheckpoint.AllInstances.DirectionGet">
            <summary>Legt die Shim von Checkpoint.get_Direction(Checkpoint this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCheckpoint.AllInstances.DirectionSetVector3">
            <summary>Legt die Shim von Checkpoint.set_Direction(Checkpoint this, Vector3 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCheckpoint.AllInstances.ScaleGet">
            <summary>Legt die Shim von Checkpoint.get_Scale(Checkpoint this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCheckpoint.AllInstances.ScaleSetSingle">
            <summary>Legt die Shim von Checkpoint.set_Scale(Checkpoint this, Single value) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimCheckpoint.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimCheckpoint.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCheckpoint.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCheckpoint.ColorGet">
            <summary>Legt die Shim von Checkpoint.get_Color(Checkpoint this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCheckpoint.ColorSetColor">
            <summary>Legt die Shim von Checkpoint.set_Color(Checkpoint this, Color value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCheckpoint.ConstructorNetHandle">
            <summary>Legt die Shim von Checkpoint.Checkpoint(Checkpoint this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCheckpoint.DirectionGet">
            <summary>Legt die Shim von Checkpoint.get_Direction(Checkpoint this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCheckpoint.DirectionSetVector3">
            <summary>Legt die Shim von Checkpoint.set_Direction(Checkpoint this, Vector3 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCheckpoint.ScaleGet">
            <summary>Legt die Shim von Checkpoint.get_Scale(Checkpoint this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCheckpoint.ScaleSetSingle">
            <summary>Legt die Shim von Checkpoint.set_Scale(Checkpoint this, Single value) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimColShape">
            <summary>Shim-Typ von GTANetworkAPI.ColShape</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimColShape.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimColShape.#ctor(GTANetworkAPI.ColShape)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimColShape.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.AllInstances.InvokeEnterColshapePlayer">
            <summary>Legt die Shim von ColShape.InvokeEnterColshape(ColShape this, Player ent) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.AllInstances.InvokeExitColshapePlayer">
            <summary>Legt die Shim von ColShape.InvokeExitColshape(ColShape this, Player ent) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.AllInstances.IsPointWithinVector3">
            <summary>Legt die Shim von ColShape.IsPointWithin(ColShape this, Vector3 point) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.AllInstances.OnEntityEnterColShapeAddColShapeColShapeEvent">
            <summary>Legt die Shim von ColShape.add_OnEntityEnterColShape(ColShape this, ColShapeEvent value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.AllInstances.OnEntityEnterColShapeRemoveColShapeColShapeEvent">
            <summary>Legt die Shim von ColShape.remove_OnEntityEnterColShape(ColShape this, ColShapeEvent value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.AllInstances.OnEntityExitColShapeAddColShapeColShapeEvent">
            <summary>Legt die Shim von ColShape.add_OnEntityExitColShape(ColShape this, ColShapeEvent value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.AllInstances.OnEntityExitColShapeRemoveColShapeColShapeEvent">
            <summary>Legt die Shim von ColShape.remove_OnEntityExitColShape(ColShape this, ColShapeEvent value) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimColShape.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimColShape.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.ConstructorNetHandle">
            <summary>Legt die Shim von ColShape.ColShape(ColShape this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.InvokeEnterColshapePlayer">
            <summary>Legt die Shim von ColShape.InvokeEnterColshape(ColShape this, Player ent) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.InvokeExitColshapePlayer">
            <summary>Legt die Shim von ColShape.InvokeExitColshape(ColShape this, Player ent) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.IsPointWithinVector3">
            <summary>Legt die Shim von ColShape.IsPointWithin(ColShape this, Vector3 point) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.OnEntityEnterColShapeAddColShapeColShapeEvent">
            <summary>Legt die Shim von ColShape.add_OnEntityEnterColShape(ColShape this, ColShapeEvent value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.OnEntityEnterColShapeRemoveColShapeColShapeEvent">
            <summary>Legt die Shim von ColShape.remove_OnEntityEnterColShape(ColShape this, ColShapeEvent value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.OnEntityExitColShapeAddColShapeColShapeEvent">
            <summary>Legt die Shim von ColShape.add_OnEntityExitColShape(ColShape this, ColShapeEvent value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.OnEntityExitColShapeRemoveColShapeColShapeEvent">
            <summary>Legt die Shim von ColShape.remove_OnEntityExitColShape(ColShape this, ColShapeEvent value) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimColShape.ShimColShapeEvent">
            <summary>Shim-Typ von GTANetworkAPI.ColShape.ColShapeEvent</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimColShape.ShimColShapeEvent.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimColShape.ShimColShapeEvent.#ctor(GTANetworkAPI.ColShape.ColShapeEvent)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimColShape.ShimColShapeEvent.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.ShimColShapeEvent.AllInstances.BeginInvokeColShapePlayerAsyncCallbackObject">
            <summary>Legt die Shim von ColShapeEvent.BeginInvoke(ColShapeEvent this, ColShape colShape, Player client, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.ShimColShapeEvent.AllInstances.EndInvokeIAsyncResult">
            <summary>Legt die Shim von ColShapeEvent.EndInvoke(ColShapeEvent this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.ShimColShapeEvent.AllInstances.InvokeColShapePlayer">
            <summary>Legt die Shim von ColShapeEvent.Invoke(ColShapeEvent this, ColShape colShape, Player client) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.ShimColShapeEvent.BeginInvokeColShapePlayerAsyncCallbackObject">
            <summary>Legt die Shim von ColShapeEvent.BeginInvoke(ColShapeEvent this, ColShape colShape, Player client, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimColShape.ShimColShapeEvent.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimColShape.ShimColShapeEvent.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.ShimColShapeEvent.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimColShape.ShimColShapeEvent.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimColShape.ShimColShapeEvent.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.ShimColShapeEvent.ConstructorObjectIntPtr">
            <summary>Legt die Shim von ColShapeEvent.ColShapeEvent(ColShapeEvent this, Object object, IntPtr method) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.ShimColShapeEvent.EndInvokeIAsyncResult">
            <summary>Legt die Shim von ColShapeEvent.EndInvoke(ColShapeEvent this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColShape.ShimColShapeEvent.InvokeColShapePlayer">
            <summary>Legt die Shim von ColShapeEvent.Invoke(ColShapeEvent this, ColShape colShape, Player client) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimColor">
            <summary>Shim-Typ von GTANetworkAPI.Color</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimColor.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimColor.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimColor.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimColor.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimColor.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimCommandAttribute">
            <summary>Shim-Typ von GTANetworkAPI.CommandAttribute</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimCommandAttribute.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimCommandAttribute.#ctor(GTANetworkAPI.CommandAttribute)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.ACLRequiredGet">
            <summary>Legt die Shim von CommandAttribute.get_ACLRequired(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.ACLRequiredSetBoolean">
            <summary>Legt die Shim von CommandAttribute.set_ACLRequired(CommandAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AliasGet">
            <summary>Legt die Shim von CommandAttribute.get_Alias(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AliasSetString">
            <summary>Legt die Shim von CommandAttribute.set_Alias(CommandAttribute this, String value) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances.ACLRequiredGet">
            <summary>Legt die Shim von CommandAttribute.get_ACLRequired(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances.ACLRequiredSetBoolean">
            <summary>Legt die Shim von CommandAttribute.set_ACLRequired(CommandAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances.AliasGet">
            <summary>Legt die Shim von CommandAttribute.get_Alias(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances.AliasSetString">
            <summary>Legt die Shim von CommandAttribute.set_Alias(CommandAttribute this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances.ArgumentConverterGet">
            <summary>Legt die Shim von CommandAttribute.get_ArgumentConverter(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances.ArgumentConverterSetString">
            <summary>Legt die Shim von CommandAttribute.set_ArgumentConverter(CommandAttribute this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances.DescriptionGet">
            <summary>Legt die Shim von CommandAttribute.get_Description(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances.DescriptionSetString">
            <summary>Legt die Shim von CommandAttribute.set_Description(CommandAttribute this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances.GreedyArgGet">
            <summary>Legt die Shim von CommandAttribute.get_GreedyArg(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances.GreedyArgSetBoolean">
            <summary>Legt die Shim von CommandAttribute.set_GreedyArg(CommandAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances.GroupGet">
            <summary>Legt die Shim von CommandAttribute.get_Group(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances.GroupSetString">
            <summary>Legt die Shim von CommandAttribute.set_Group(CommandAttribute this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances.HideGet">
            <summary>Legt die Shim von CommandAttribute.get_Hide(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances.HideSetBoolean">
            <summary>Legt die Shim von CommandAttribute.set_Hide(CommandAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances.SensitiveInfoGet">
            <summary>Legt die Shim von CommandAttribute.get_SensitiveInfo(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.AllInstances.SensitiveInfoSetBoolean">
            <summary>Legt die Shim von CommandAttribute.set_SensitiveInfo(CommandAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.ArgumentConverterGet">
            <summary>Legt die Shim von CommandAttribute.get_ArgumentConverter(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.ArgumentConverterSetString">
            <summary>Legt die Shim von CommandAttribute.set_ArgumentConverter(CommandAttribute this, String value) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimCommandAttribute.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimCommandAttribute.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.Constructor">
            <summary>Legt die Shim von CommandAttribute.CommandAttribute(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.ConstructorString">
            <summary>Legt die Shim von CommandAttribute.CommandAttribute(CommandAttribute this, String command) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.ConstructorStringString">
            <summary>Legt die Shim von CommandAttribute.CommandAttribute(CommandAttribute this, String command, String helpText) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.DescriptionGet">
            <summary>Legt die Shim von CommandAttribute.get_Description(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.DescriptionSetString">
            <summary>Legt die Shim von CommandAttribute.set_Description(CommandAttribute this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.GreedyArgGet">
            <summary>Legt die Shim von CommandAttribute.get_GreedyArg(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.GreedyArgSetBoolean">
            <summary>Legt die Shim von CommandAttribute.set_GreedyArg(CommandAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.GroupGet">
            <summary>Legt die Shim von CommandAttribute.get_Group(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.GroupSetString">
            <summary>Legt die Shim von CommandAttribute.set_Group(CommandAttribute this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.HideGet">
            <summary>Legt die Shim von CommandAttribute.get_Hide(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.HideSetBoolean">
            <summary>Legt die Shim von CommandAttribute.set_Hide(CommandAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.SensitiveInfoGet">
            <summary>Legt die Shim von CommandAttribute.get_SensitiveInfo(CommandAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandAttribute.SensitiveInfoSetBoolean">
            <summary>Legt die Shim von CommandAttribute.set_SensitiveInfo(CommandAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimCommandInfo">
            <summary>Shim-Typ von GTANetworkAPI.CommandInfo</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimCommandInfo.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimCommandInfo.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimCommandInfo.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimCommandInfo.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimCommandInfo.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimComponentVariation">
            <summary>Shim-Typ von GTANetworkAPI.ComponentVariation</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimComponentVariation.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimComponentVariation.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimComponentVariation.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimComponentVariation.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimComponentVariation.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimDecoration">
            <summary>Shim-Typ von GTANetworkAPI.Decoration</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimDecoration.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimDecoration.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimDecoration.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimDecoration.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimDecoration.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimDummyEntity">
            <summary>Shim-Typ von GTANetworkAPI.DummyEntity</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimDummyEntity.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimDummyEntity.#ctor(GTANetworkAPI.DummyEntity)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimDummyEntity.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimDummyEntity.AllInstances.DummyTypeGet">
            <summary>Legt die Shim von DummyEntity.get_DummyType(DummyEntity this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimDummyEntity.AllInstances.DummyTypeSetInt32">
            <summary>Legt die Shim von DummyEntity.set_DummyType(DummyEntity this, Int32 value) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimDummyEntity.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimDummyEntity.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimDummyEntity.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimDummyEntity.ConstructorNetHandle">
            <summary>Legt die Shim von DummyEntity.DummyEntity(DummyEntity this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimDummyEntity.DummyTypeGet">
            <summary>Legt die Shim von DummyEntity.get_DummyType(DummyEntity this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimDummyEntity.DummyTypeSetInt32">
            <summary>Legt die Shim von DummyEntity.set_DummyType(DummyEntity this, Int32 value) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimHeadBlend">
            <summary>Shim-Typ von GTANetworkAPI.HeadBlend</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimHeadBlend.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimHeadBlend.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimHeadBlend.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimHeadBlend.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimHeadBlend.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimHeadOverlay">
            <summary>Shim-Typ von GTANetworkAPI.HeadOverlay</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimHeadOverlay.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimHeadOverlay.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimHeadOverlay.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimHeadOverlay.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimHeadOverlay.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimMarker">
            <summary>Shim-Typ von GTANetworkAPI.Marker</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimMarker.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimMarker.#ctor(GTANetworkAPI.Marker)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimMarker.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.AllInstances.ColorGet">
            <summary>Legt die Shim von Marker.get_Color(Marker this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.AllInstances.ColorSetColor">
            <summary>Legt die Shim von Marker.set_Color(Marker this, Color value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.AllInstances.DirectionGet">
            <summary>Legt die Shim von Marker.get_Direction(Marker this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.AllInstances.DirectionSetVector3">
            <summary>Legt die Shim von Marker.set_Direction(Marker this, Vector3 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.AllInstances.MarkerTypeGet">
            <summary>Legt die Shim von Marker.get_MarkerType(Marker this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.AllInstances.MarkerTypeSetUInt32">
            <summary>Legt die Shim von Marker.set_MarkerType(Marker this, UInt32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.AllInstances.ScaleGet">
            <summary>Legt die Shim von Marker.get_Scale(Marker this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.AllInstances.ScaleSetSingle">
            <summary>Legt die Shim von Marker.set_Scale(Marker this, Single value) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimMarker.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimMarker.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.ColorGet">
            <summary>Legt die Shim von Marker.get_Color(Marker this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.ColorSetColor">
            <summary>Legt die Shim von Marker.set_Color(Marker this, Color value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.ConstructorNetHandle">
            <summary>Legt die Shim von Marker.Marker(Marker this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.DirectionGet">
            <summary>Legt die Shim von Marker.get_Direction(Marker this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.DirectionSetVector3">
            <summary>Legt die Shim von Marker.set_Direction(Marker this, Vector3 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.MarkerTypeGet">
            <summary>Legt die Shim von Marker.get_MarkerType(Marker this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.MarkerTypeSetUInt32">
            <summary>Legt die Shim von Marker.set_MarkerType(Marker this, UInt32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.ScaleGet">
            <summary>Legt die Shim von Marker.get_Scale(Marker this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMarker.ScaleSetSingle">
            <summary>Legt die Shim von Marker.set_Scale(Marker this, Single value) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimMatrix4">
            <summary>Shim-Typ von GTANetworkAPI.Matrix4</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimMatrix4.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimMatrix4.#ctor(GTANetworkAPI.Matrix4)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimMatrix4.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.AllInstances.MultiplyMatrix4">
            <summary>Legt die Shim von Matrix4.Multiply(Matrix4 this, Matrix4 other) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.AllInstances.ToString01">
            <summary>Legt die Shim von Matrix4.ToString(Matrix4 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.AllInstances.TransformDoubleDoubleDouble">
            <summary>Legt die Shim von Matrix4.Transform(Matrix4 this, Double x, Double y, Double z) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.AllInstances.TransformSingleSingleSingle">
            <summary>Legt die Shim von Matrix4.Transform(Matrix4 this, Single x, Single y, Single z) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.AllInstances.TransformVector3">
            <summary>Legt die Shim von Matrix4.Transform(Matrix4 this, Vector3 v) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimMatrix4.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimMatrix4.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.Constructor">
            <summary>Legt die Shim von Matrix4.Matrix4(Matrix4 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.ConstructorDouble">
            <summary>Legt die Shim von Matrix4.Matrix4(Matrix4 this, Double v) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.ConstructorSingle">
            <summary>Legt die Shim von Matrix4.Matrix4(Matrix4 this, Single v) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.ConstructorSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Legt die Shim von Matrix4.Matrix4(Matrix4 this, Single m00, Single m01, Single m02, Single m03, Single m10, Single m11, Single m12, Single m13, Single m20, Single m21, Single m22, Single m23, Single m30, Single m31, Single m32, Single m33) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.CreateRotationXDouble">
            <summary>Legt die Shim von Matrix4.CreateRotationX(Double rot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.CreateRotationXSingle">
            <summary>Legt die Shim von Matrix4.CreateRotationX(Single rot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.CreateRotationYDouble">
            <summary>Legt die Shim von Matrix4.CreateRotationY(Double rot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.CreateRotationYSingle">
            <summary>Legt die Shim von Matrix4.CreateRotationY(Single rot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.CreateRotationZDouble">
            <summary>Legt die Shim von Matrix4.CreateRotationZ(Double rot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.CreateRotationZSingle">
            <summary>Legt die Shim von Matrix4.CreateRotationZ(Single rot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.CreateScaleDouble">
            <summary>Legt die Shim von Matrix4.CreateScale(Double v) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.CreateScaleDoubleDoubleDouble">
            <summary>Legt die Shim von Matrix4.CreateScale(Double x, Double y, Double z) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.CreateScaleSingle">
            <summary>Legt die Shim von Matrix4.CreateScale(Single v) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.CreateScaleSingleSingleSingle">
            <summary>Legt die Shim von Matrix4.CreateScale(Single x, Single y, Single z) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.CreateTranslationDoubleDoubleDouble">
            <summary>Legt die Shim von Matrix4.CreateTranslation(Double x, Double y, Double z) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.CreateTranslationSingleSingleSingle">
            <summary>Legt die Shim von Matrix4.CreateTranslation(Single x, Single y, Single z) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.IdentityGet">
            <summary>Legt die Shim von Matrix4.get_Identity() fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.MultiplyMatrix4">
            <summary>Legt die Shim von Matrix4.Multiply(Matrix4 this, Matrix4 other) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.MultiplyOpMatrix4Matrix4">
            <summary>Legt die Shim von Matrix4.op_Multiply(Matrix4 l, Matrix4 r) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.ToString">
            <summary>Legt die Shim von Matrix4.ToString(Matrix4 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.TransformDoubleDoubleDouble">
            <summary>Legt die Shim von Matrix4.Transform(Matrix4 this, Double x, Double y, Double z) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.TransformSingleSingleSingle">
            <summary>Legt die Shim von Matrix4.Transform(Matrix4 this, Single x, Single y, Single z) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimMatrix4.TransformVector3">
            <summary>Legt die Shim von Matrix4.Transform(Matrix4 this, Vector3 v) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimNAPI">
            <summary>Shim-Typ von GTANetworkAPI.NAPI</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimNAPI.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimNAPI.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimNAPI.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimNAPI.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimNAPI.StaticConstructor">
            <summary>Legt die Shim von NAPI.NAPI() fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimNetHandle">
            <summary>Shim-Typ von GTANetworkAPI.NetHandle</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimNetHandle.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimNetHandle.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimNetHandle.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimNetHandle.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimNetHandle.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimNetHandle.EqualityOpNetHandleNetHandle">
            <summary>Legt die Shim von NetHandle.op_Equality(NetHandle left, NetHandle right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimNetHandle.InequalityOpNetHandleNetHandle">
            <summary>Legt die Shim von NetHandle.op_Inequality(NetHandle left, NetHandle right) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimObject">
            <summary>Shim-Typ von GTANetworkAPI.Object</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimObject.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimObject.#ctor(GTANetworkAPI.Object)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimObject.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimObject.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimObject.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimObject.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimObject.ConstructorNetHandle">
            <summary>Legt die Shim von Object.Object(Object this, NetHandle handle) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimParticleEffect">
            <summary>Shim-Typ von GTANetworkAPI.ParticleEffect</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimParticleEffect.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimParticleEffect.#ctor(GTANetworkAPI.ParticleEffect)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimParticleEffect.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimParticleEffect.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimParticleEffect.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimParticleEffect.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimParticleEffect.ConstructorNetHandle">
            <summary>Legt die Shim von ParticleEffect.ParticleEffect(ParticleEffect this, NetHandle handle) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimPed">
            <summary>Shim-Typ von GTANetworkAPI.Ped</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPed.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPed.#ctor(GTANetworkAPI.Ped)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimPed.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPed.AllInstances.ControllerGet">
            <summary>Legt die Shim von Ped.get_Controller(Ped this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPed.AllInstances.ControllerSetPlayer">
            <summary>Legt die Shim von Ped.set_Controller(Ped this, Player value) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPed.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPed.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPed.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPed.ConstructorNetHandle">
            <summary>Legt die Shim von Ped.Ped(Ped this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPed.ControllerGet">
            <summary>Legt die Shim von Ped.get_Controller(Ped this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPed.ControllerSetPlayer">
            <summary>Legt die Shim von Ped.set_Controller(Ped this, Player value) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimPickup">
            <summary>Shim-Typ von GTANetworkAPI.Pickup</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPickup.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPickup.#ctor(GTANetworkAPI.Pickup)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimPickup.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPickup.AllInstances.AmountGet">
            <summary>Legt die Shim von Pickup.get_Amount(Pickup this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPickup.AllInstances.CustomModelGet">
            <summary>Legt die Shim von Pickup.get_CustomModel(Pickup this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPickup.AllInstances.PickedUpGet">
            <summary>Legt die Shim von Pickup.get_PickedUp(Pickup this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPickup.AllInstances.Respawn">
            <summary>Legt die Shim von Pickup.Respawn(Pickup this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPickup.AmountGet">
            <summary>Legt die Shim von Pickup.get_Amount(Pickup this) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPickup.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPickup.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPickup.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPickup.ConstructorNetHandle">
            <summary>Legt die Shim von Pickup.Pickup(Pickup this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPickup.CustomModelGet">
            <summary>Legt die Shim von Pickup.get_CustomModel(Pickup this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPickup.PickedUpGet">
            <summary>Legt die Shim von Pickup.get_PickedUp(Pickup this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPickup.Respawn">
            <summary>Legt die Shim von Pickup.Respawn(Pickup this) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimPickupToWeapon">
            <summary>Shim-Typ von GTANetworkAPI.PickupToWeapon</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPickupToWeapon.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPickupToWeapon.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPickupToWeapon.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPickupToWeapon.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPickupToWeapon.TranslateInt32">
            <summary>Legt die Shim von PickupToWeapon.Translate(Int32 pickup) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimPlayer">
            <summary>Shim-Typ von GTANetworkAPI.Player</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPlayer.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPlayer.#ctor(GTANetworkAPI.Player)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AddressGet">
            <summary>Legt die Shim von Player.get_Address(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AimingPointGet">
            <summary>Legt die Shim von Player.get_AimingPoint(Player this) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimPlayer.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.AddressGet">
            <summary>Legt die Shim von Player.get_Address(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.AimingPointGet">
            <summary>Legt die Shim von Player.get_AimingPoint(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.ArmorGet">
            <summary>Legt die Shim von Player.get_Armor(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.ArmorSetInt32">
            <summary>Legt die Shim von Player.set_Armor(Player this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.Ban">
            <summary>Legt die Shim von Player.Ban(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.BanString">
            <summary>Legt die Shim von Player.Ban(Player this, String reason) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.CancelPendingRpc">
            <summary>Legt die Shim von Player.CancelPendingRpc(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.CancelPendingRpcString">
            <summary>Legt die Shim von Player.CancelPendingRpc(Player this, String procedureName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.ClearAccessoryInt32">
            <summary>Legt die Shim von Player.ClearAccessory(Player this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.ClearDecorations">
            <summary>Legt die Shim von Player.ClearDecorations(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.CurrentWeaponGet">
            <summary>Legt die Shim von Player.get_CurrentWeapon(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.DeadGet">
            <summary>Legt die Shim von Player.get_Dead(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.DisableVoiceToPlayer">
            <summary>Legt die Shim von Player.DisableVoiceTo(Player this, Player target) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.EnableVoiceToPlayer">
            <summary>Legt die Shim von Player.EnableVoiceTo(Player this, Player target) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.EvalString">
            <summary>Legt die Shim von Player.Eval(Player this, String code) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.GameTypeGet">
            <summary>Legt die Shim von Player.get_GameType(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.GetAccessoryDrawableInt32">
            <summary>Legt die Shim von Player.GetAccessoryDrawable(Player this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.GetAccessoryTextureInt32">
            <summary>Legt die Shim von Player.GetAccessoryTexture(Player this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.GetClothesDrawableInt32">
            <summary>Legt die Shim von Player.GetClothesDrawable(Player this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.GetClothesTextureInt32">
            <summary>Legt die Shim von Player.GetClothesTexture(Player this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.GetFaceFeatureInt32">
            <summary>Legt die Shim von Player.GetFaceFeature(Player this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.GetHeadBlendPaletteColorInt32">
            <summary>Legt die Shim von Player.GetHeadBlendPaletteColor(Player this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.GetHeadOverlayInt32">
            <summary>Legt die Shim von Player.GetHeadOverlay(Player this, Int32 overlayId) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.GetOwnSharedDataOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkAPI.Player,System.String,``0})">
            <summary>Legt die Shim von Player.GetOwnSharedData(Player this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.GetWeaponAmmoWeaponHash">
            <summary>Legt die Shim von Player.GetWeaponAmmo(Player this, WeaponHash weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.GiveWeaponWeaponHashInt32">
            <summary>Legt die Shim von Player.GiveWeapon(Player this, WeaponHash weapon, Int32 ammo) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.HasOwnSharedDataString">
            <summary>Legt die Shim von Player.HasOwnSharedData(Player this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.HasPendingRpc">
            <summary>Legt die Shim von Player.HasPendingRpc(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.HasPendingRpcString">
            <summary>Legt die Shim von Player.HasPendingRpc(Player this, String procedureName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.HeadBlendGet">
            <summary>Legt die Shim von Player.get_HeadBlend(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.HeadBlendSetHeadBlend">
            <summary>Legt die Shim von Player.set_HeadBlend(Player this, HeadBlend value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.HeadingGet">
            <summary>Legt die Shim von Player.get_Heading(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.HeadingSetSingle">
            <summary>Legt die Shim von Player.set_Heading(Player this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.HealthGet">
            <summary>Legt die Shim von Player.get_Health(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.HealthSetInt32">
            <summary>Legt die Shim von Player.set_Health(Player this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.IsAimingGet">
            <summary>Legt die Shim von Player.get_IsAiming(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.IsCeFenabledGet">
            <summary>Legt die Shim von Player.get_IsCeFenabled(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.IsInCoverGet">
            <summary>Legt die Shim von Player.get_IsInCover(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.IsInVehicleGet">
            <summary>Legt die Shim von Player.get_IsInVehicle(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.IsMediaStreamEnabledGet">
            <summary>Legt die Shim von Player.get_IsMediaStreamEnabled(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.IsOnLadderGet">
            <summary>Legt die Shim von Player.get_IsOnLadder(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.IsReloadingGet">
            <summary>Legt die Shim von Player.get_IsReloading(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.IsShootingGet">
            <summary>Legt die Shim von Player.get_IsShooting(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.Kick">
            <summary>Legt die Shim von Player.Kick(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.KickSilent">
            <summary>Legt die Shim von Player.KickSilent(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.KickSilentString">
            <summary>Legt die Shim von Player.KickSilent(Player this, String reason) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.KickString">
            <summary>Legt die Shim von Player.Kick(Player this, String reason) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.Kill">
            <summary>Legt die Shim von Player.Kill(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.NameGet">
            <summary>Legt die Shim von Player.get_Name(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.NameSetString">
            <summary>Legt die Shim von Player.set_Name(Player this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.NametagGet">
            <summary>Legt die Shim von Player.get_Nametag(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.NametagSetString">
            <summary>Legt die Shim von Player.set_Nametag(Player this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.PingGet">
            <summary>Legt die Shim von Player.get_Ping(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.PlayAnimationStringStringInt32">
            <summary>Legt die Shim von Player.PlayAnimation(Player this, String animDict, String animName, Int32 flag) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.PlayScenarioString">
            <summary>Legt die Shim von Player.PlayScenario(Player this, String scenarioName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.RejectRpcUInt32Int32">
            <summary>Legt die Shim von Player.RejectRpc(Player this, UInt32 callIdx, Int32 result) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.RemoveAllWeapons">
            <summary>Legt die Shim von Player.RemoveAllWeapons(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.RemoveDecorationDecoration">
            <summary>Legt die Shim von Player.RemoveDecoration(Player this, Decoration decoration) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.RemoveHeadBlendPaletteColorInt32">
            <summary>Legt die Shim von Player.RemoveHeadBlendPaletteColor(Player this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.RemoveWeaponWeaponHash">
            <summary>Legt die Shim von Player.RemoveWeapon(Player this, WeaponHash weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.ResetOwnSharedDataString">
            <summary>Legt die Shim von Player.ResetOwnSharedData(Player this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.ResolveRpcUInt32Object">
            <summary>Legt die Shim von Player.ResolveRpc(Player this, UInt32 callIdx, Object result) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SendChatMessageString">
            <summary>Legt die Shim von Player.SendChatMessage(Player this, String message) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SendChatMessageStringString">
            <summary>Legt die Shim von Player.SendChatMessage(Player this, String sender, String message) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SendNotificationStringBoolean">
            <summary>Legt die Shim von Player.SendNotification(Player this, String message, Boolean flashing) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SendPictureNotificationToPlayerStringStringInt32Int32StringString">
            <summary>Legt die Shim von Player.SendPictureNotificationToPlayer(Player this, String body, String pic, Int32 flash, Int32 iconType, String sender, String subject) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SerialGet">
            <summary>Legt die Shim von Player.get_Serial(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SetAccessoriesInt32Int32Int32">
            <summary>Legt die Shim von Player.SetAccessories(Player this, Int32 slot, Int32 drawable, Int32 texture) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SetClothesDictionaryOfInt32ComponentVariation">
            <summary>Legt die Shim von Player.SetClothes(Player this, Dictionary`2 clothes) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SetClothesInt32Int32Int32">
            <summary>Legt die Shim von Player.SetClothes(Player this, Int32 slot, Int32 drawable, Int32 texture) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SetCustomizationBooleanHeadBlendByteByteByteSingleArrayDictionaryOfInt32HeadOverlayDecorationArray">
            <summary>Legt die Shim von Player.SetCustomization(Player this, Boolean gender, HeadBlend headBlend, Byte eyeColor, Byte hairColor, Byte highlightColor, Single[] faceFeatures, Dictionary`2 headOverlays, Decoration[] decorations) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SetDecorationDecoration">
            <summary>Legt die Shim von Player.SetDecoration(Player this, Decoration decoration) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SetDecorationDecorationArray">
            <summary>Legt die Shim von Player.SetDecoration(Player this, Decoration[] decoration) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SetFaceFeatureInt32Single">
            <summary>Legt die Shim von Player.SetFaceFeature(Player this, Int32 slot, Single scale) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SetHeadBlendPaletteColorInt32Color">
            <summary>Legt die Shim von Player.SetHeadBlendPaletteColor(Player this, Int32 slot, Color color) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SetHeadOverlayInt32HeadOverlay">
            <summary>Legt die Shim von Player.SetHeadOverlay(Player this, Int32 overlayId, HeadOverlay headOverlay) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SetIntoVehicleNetHandleInt32">
            <summary>Legt die Shim von Player.SetIntoVehicle(Player this, NetHandle car, Int32 seat) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SetOwnSharedDataDictionaryOfStringObject">
            <summary>Legt die Shim von Player.SetOwnSharedData(Player this, Dictionary`2 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SetOwnSharedDataStringObject">
            <summary>Legt die Shim von Player.SetOwnSharedData(Player this, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SetPendingRpcUInt64UInt32TaskCompletionSourceOfObject">
            <summary>Legt die Shim von Player.SetPendingRpc(Player this, UInt64 procName, UInt32 callIdx, TaskCompletionSource`1 tsk) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SetSkinPedHash">
            <summary>Legt die Shim von Player.SetSkin(Player this, PedHash newSkin) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SetSkinUInt32">
            <summary>Legt die Shim von Player.SetSkin(Player this, UInt32 newSkin) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SetWeaponAmmoWeaponHashInt32">
            <summary>Legt die Shim von Player.SetWeaponAmmo(Player this, WeaponHash weapon, Int32 ammo) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SocialClubIdGet">
            <summary>Legt die Shim von Player.get_SocialClubId(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.SocialClubNameGet">
            <summary>Legt die Shim von Player.get_SocialClubName(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.StopAnimation">
            <summary>Legt die Shim von Player.StopAnimation(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.TriggerEventStringClientEventResponseObjectArray">
            <summary>Legt die Shim von Player.TriggerEvent(Player this, String eventName, ClientEventResponse action, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.TriggerEventStringObjectArray">
            <summary>Legt die Shim von Player.TriggerEvent(Player this, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.TriggerEventUnreliableStringClientEventResponseObjectArray">
            <summary>Legt die Shim von Player.TriggerEventUnreliable(Player this, String eventName, ClientEventResponse action, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.TriggerProcedureStringObjectArray">
            <summary>Legt die Shim von Player.TriggerProcedure(Player this, String procedureName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.UpdateHeadBlendSingleSingleSingle">
            <summary>Legt die Shim von Player.UpdateHeadBlend(Player this, Single shapeMix, Single skinMix, Single thirdMix) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.VehicleGet">
            <summary>Legt die Shim von Player.get_Vehicle(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.VehicleSeatGet">
            <summary>Legt die Shim von Player.get_VehicleSeat(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.VelocityGet">
            <summary>Legt die Shim von Player.get_Velocity(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.VelocitySetVector3">
            <summary>Legt die Shim von Player.set_Velocity(Player this, Vector3 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.WarpOutOfVehicle">
            <summary>Legt die Shim von Player.WarpOutOfVehicle(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.AllInstances.WeaponsGet">
            <summary>Legt die Shim von Player.get_Weapons(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.ArmorGet">
            <summary>Legt die Shim von Player.get_Armor(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.ArmorSetInt32">
            <summary>Legt die Shim von Player.set_Armor(Player this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.Ban">
            <summary>Legt die Shim von Player.Ban(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.BanString">
            <summary>Legt die Shim von Player.Ban(Player this, String reason) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPlayer.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPlayer.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.CancelPendingRpc">
            <summary>Legt die Shim von Player.CancelPendingRpc(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.CancelPendingRpcString">
            <summary>Legt die Shim von Player.CancelPendingRpc(Player this, String procedureName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.ClearAccessoryInt32">
            <summary>Legt die Shim von Player.ClearAccessory(Player this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.ClearDecorations">
            <summary>Legt die Shim von Player.ClearDecorations(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.ConstructorNetHandle">
            <summary>Legt die Shim von Player.Player(Player this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.CurrentWeaponGet">
            <summary>Legt die Shim von Player.get_CurrentWeapon(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.DeadGet">
            <summary>Legt die Shim von Player.get_Dead(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.DisableVoiceToPlayer">
            <summary>Legt die Shim von Player.DisableVoiceTo(Player this, Player target) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.EnableVoiceToPlayer">
            <summary>Legt die Shim von Player.EnableVoiceTo(Player this, Player target) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.EvalString">
            <summary>Legt die Shim von Player.Eval(Player this, String code) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.GameTypeGet">
            <summary>Legt die Shim von Player.get_GameType(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.GetAccessoryDrawableInt32">
            <summary>Legt die Shim von Player.GetAccessoryDrawable(Player this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.GetAccessoryTextureInt32">
            <summary>Legt die Shim von Player.GetAccessoryTexture(Player this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.GetClothesDrawableInt32">
            <summary>Legt die Shim von Player.GetClothesDrawable(Player this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.GetClothesTextureInt32">
            <summary>Legt die Shim von Player.GetClothesTexture(Player this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.GetFaceFeatureInt32">
            <summary>Legt die Shim von Player.GetFaceFeature(Player this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.GetHeadBlendPaletteColorInt32">
            <summary>Legt die Shim von Player.GetHeadBlendPaletteColor(Player this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.GetHeadOverlayInt32">
            <summary>Legt die Shim von Player.GetHeadOverlay(Player this, Int32 overlayId) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimPlayer.GetOwnSharedDataOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Legt die Shim von Player.GetOwnSharedData(Player this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.GetWeaponAmmoWeaponHash">
            <summary>Legt die Shim von Player.GetWeaponAmmo(Player this, WeaponHash weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.GiveWeaponWeaponHashInt32">
            <summary>Legt die Shim von Player.GiveWeapon(Player this, WeaponHash weapon, Int32 ammo) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.HasOwnSharedDataString">
            <summary>Legt die Shim von Player.HasOwnSharedData(Player this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.HasPendingRpc">
            <summary>Legt die Shim von Player.HasPendingRpc(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.HasPendingRpcString">
            <summary>Legt die Shim von Player.HasPendingRpc(Player this, String procedureName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.HeadBlendGet">
            <summary>Legt die Shim von Player.get_HeadBlend(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.HeadBlendSetHeadBlend">
            <summary>Legt die Shim von Player.set_HeadBlend(Player this, HeadBlend value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.HeadingGet">
            <summary>Legt die Shim von Player.get_Heading(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.HeadingSetSingle">
            <summary>Legt die Shim von Player.set_Heading(Player this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.HealthGet">
            <summary>Legt die Shim von Player.get_Health(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.HealthSetInt32">
            <summary>Legt die Shim von Player.set_Health(Player this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.ImplicitOpPlayerNetHandle">
            <summary>Legt die Shim von Player.op_Implicit(Player c) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.IsAimingGet">
            <summary>Legt die Shim von Player.get_IsAiming(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.IsCeFenabledGet">
            <summary>Legt die Shim von Player.get_IsCeFenabled(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.IsInCoverGet">
            <summary>Legt die Shim von Player.get_IsInCover(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.IsInVehicleGet">
            <summary>Legt die Shim von Player.get_IsInVehicle(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.IsMediaStreamEnabledGet">
            <summary>Legt die Shim von Player.get_IsMediaStreamEnabled(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.IsOnLadderGet">
            <summary>Legt die Shim von Player.get_IsOnLadder(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.IsReloadingGet">
            <summary>Legt die Shim von Player.get_IsReloading(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.IsShootingGet">
            <summary>Legt die Shim von Player.get_IsShooting(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.Kick">
            <summary>Legt die Shim von Player.Kick(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.KickSilent">
            <summary>Legt die Shim von Player.KickSilent(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.KickSilentString">
            <summary>Legt die Shim von Player.KickSilent(Player this, String reason) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.KickString">
            <summary>Legt die Shim von Player.Kick(Player this, String reason) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.Kill">
            <summary>Legt die Shim von Player.Kill(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.NameGet">
            <summary>Legt die Shim von Player.get_Name(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.NameSetString">
            <summary>Legt die Shim von Player.set_Name(Player this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.NametagGet">
            <summary>Legt die Shim von Player.get_Nametag(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.NametagSetString">
            <summary>Legt die Shim von Player.set_Nametag(Player this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.PingGet">
            <summary>Legt die Shim von Player.get_Ping(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.PlayAnimationStringStringInt32">
            <summary>Legt die Shim von Player.PlayAnimation(Player this, String animDict, String animName, Int32 flag) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.PlayScenarioString">
            <summary>Legt die Shim von Player.PlayScenario(Player this, String scenarioName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.RejectRpcUInt32Int32">
            <summary>Legt die Shim von Player.RejectRpc(Player this, UInt32 callIdx, Int32 result) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.RemoveAllWeapons">
            <summary>Legt die Shim von Player.RemoveAllWeapons(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.RemoveDecorationDecoration">
            <summary>Legt die Shim von Player.RemoveDecoration(Player this, Decoration decoration) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.RemoveHeadBlendPaletteColorInt32">
            <summary>Legt die Shim von Player.RemoveHeadBlendPaletteColor(Player this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.RemoveWeaponWeaponHash">
            <summary>Legt die Shim von Player.RemoveWeapon(Player this, WeaponHash weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.ResetOwnSharedDataString">
            <summary>Legt die Shim von Player.ResetOwnSharedData(Player this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.ResolveRpcUInt32Object">
            <summary>Legt die Shim von Player.ResolveRpc(Player this, UInt32 callIdx, Object result) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SendChatMessageString">
            <summary>Legt die Shim von Player.SendChatMessage(Player this, String message) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SendChatMessageStringString">
            <summary>Legt die Shim von Player.SendChatMessage(Player this, String sender, String message) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SendNotificationStringBoolean">
            <summary>Legt die Shim von Player.SendNotification(Player this, String message, Boolean flashing) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SendPictureNotificationToPlayerStringStringInt32Int32StringString">
            <summary>Legt die Shim von Player.SendPictureNotificationToPlayer(Player this, String body, String pic, Int32 flash, Int32 iconType, String sender, String subject) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SerialGet">
            <summary>Legt die Shim von Player.get_Serial(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SetAccessoriesInt32Int32Int32">
            <summary>Legt die Shim von Player.SetAccessories(Player this, Int32 slot, Int32 drawable, Int32 texture) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SetClothesDictionaryOfInt32ComponentVariation">
            <summary>Legt die Shim von Player.SetClothes(Player this, Dictionary`2 clothes) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SetClothesInt32Int32Int32">
            <summary>Legt die Shim von Player.SetClothes(Player this, Int32 slot, Int32 drawable, Int32 texture) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SetCustomizationBooleanHeadBlendByteByteByteSingleArrayDictionaryOfInt32HeadOverlayDecorationArray">
            <summary>Legt die Shim von Player.SetCustomization(Player this, Boolean gender, HeadBlend headBlend, Byte eyeColor, Byte hairColor, Byte highlightColor, Single[] faceFeatures, Dictionary`2 headOverlays, Decoration[] decorations) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SetDecorationDecoration">
            <summary>Legt die Shim von Player.SetDecoration(Player this, Decoration decoration) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SetDecorationDecorationArray">
            <summary>Legt die Shim von Player.SetDecoration(Player this, Decoration[] decoration) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SetFaceFeatureInt32Single">
            <summary>Legt die Shim von Player.SetFaceFeature(Player this, Int32 slot, Single scale) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SetHeadBlendPaletteColorInt32Color">
            <summary>Legt die Shim von Player.SetHeadBlendPaletteColor(Player this, Int32 slot, Color color) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SetHeadOverlayInt32HeadOverlay">
            <summary>Legt die Shim von Player.SetHeadOverlay(Player this, Int32 overlayId, HeadOverlay headOverlay) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SetIntoVehicleNetHandleInt32">
            <summary>Legt die Shim von Player.SetIntoVehicle(Player this, NetHandle car, Int32 seat) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SetOwnSharedDataDictionaryOfStringObject">
            <summary>Legt die Shim von Player.SetOwnSharedData(Player this, Dictionary`2 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SetOwnSharedDataStringObject">
            <summary>Legt die Shim von Player.SetOwnSharedData(Player this, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SetPendingRpcUInt64UInt32TaskCompletionSourceOfObject">
            <summary>Legt die Shim von Player.SetPendingRpc(Player this, UInt64 procName, UInt32 callIdx, TaskCompletionSource`1 tsk) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SetSkinPedHash">
            <summary>Legt die Shim von Player.SetSkin(Player this, PedHash newSkin) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SetSkinUInt32">
            <summary>Legt die Shim von Player.SetSkin(Player this, UInt32 newSkin) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SetWeaponAmmoWeaponHashInt32">
            <summary>Legt die Shim von Player.SetWeaponAmmo(Player this, WeaponHash weapon, Int32 ammo) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SocialClubIdGet">
            <summary>Legt die Shim von Player.get_SocialClubId(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.SocialClubNameGet">
            <summary>Legt die Shim von Player.get_SocialClubName(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.StopAnimation">
            <summary>Legt die Shim von Player.StopAnimation(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.TriggerEventStringClientEventResponseObjectArray">
            <summary>Legt die Shim von Player.TriggerEvent(Player this, String eventName, ClientEventResponse action, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.TriggerEventStringObjectArray">
            <summary>Legt die Shim von Player.TriggerEvent(Player this, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.TriggerEventUnreliableStringClientEventResponseObjectArray">
            <summary>Legt die Shim von Player.TriggerEventUnreliable(Player this, String eventName, ClientEventResponse action, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.TriggerProcedureStringObjectArray">
            <summary>Legt die Shim von Player.TriggerProcedure(Player this, String procedureName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.UpdateHeadBlendSingleSingleSingle">
            <summary>Legt die Shim von Player.UpdateHeadBlend(Player this, Single shapeMix, Single skinMix, Single thirdMix) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.VehicleGet">
            <summary>Legt die Shim von Player.get_Vehicle(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.VehicleSeatGet">
            <summary>Legt die Shim von Player.get_VehicleSeat(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.VelocityGet">
            <summary>Legt die Shim von Player.get_Velocity(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.VelocitySetVector3">
            <summary>Legt die Shim von Player.set_Velocity(Player this, Vector3 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.WarpOutOfVehicle">
            <summary>Legt die Shim von Player.WarpOutOfVehicle(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimPlayer.WeaponsGet">
            <summary>Legt die Shim von Player.get_Weapons(Player this) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimQuaternion">
            <summary>Shim-Typ von GTANetworkAPI.Quaternion</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimQuaternion.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimQuaternion.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimQuaternion.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimQuaternion.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimQuaternion.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimRemoteEventAttribute">
            <summary>Shim-Typ von GTANetworkAPI.RemoteEventAttribute</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRemoteEventAttribute.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRemoteEventAttribute.#ctor(GTANetworkAPI.RemoteEventAttribute)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimRemoteEventAttribute.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRemoteEventAttribute.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRemoteEventAttribute.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRemoteEventAttribute.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRemoteEventAttribute.Constructor">
            <summary>Legt die Shim von RemoteEventAttribute.RemoteEventAttribute(RemoteEventAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRemoteEventAttribute.ConstructorString">
            <summary>Legt die Shim von RemoteEventAttribute.RemoteEventAttribute(RemoteEventAttribute this, String eventName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRemoteEventAttribute.ConstructorStringType">
            <summary>Legt die Shim von RemoteEventAttribute.RemoteEventAttribute(RemoteEventAttribute this, String eventName, Type castTo) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimRemoteEventInfo">
            <summary>Shim-Typ von GTANetworkAPI.RemoteEventInfo</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRemoteEventInfo.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimRemoteEventInfo.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRemoteEventInfo.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRemoteEventInfo.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRemoteEventInfo.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimRemoteProcAttribute">
            <summary>Shim-Typ von GTANetworkAPI.RemoteProcAttribute</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRemoteProcAttribute.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRemoteProcAttribute.#ctor(GTANetworkAPI.RemoteProcAttribute)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimRemoteProcAttribute.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRemoteProcAttribute.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRemoteProcAttribute.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRemoteProcAttribute.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRemoteProcAttribute.Constructor">
            <summary>Legt die Shim von RemoteProcAttribute.RemoteProcAttribute(RemoteProcAttribute this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRemoteProcAttribute.ConstructorString">
            <summary>Legt die Shim von RemoteProcAttribute.RemoteProcAttribute(RemoteProcAttribute this, String procName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRemoteProcAttribute.ConstructorStringBoolean">
            <summary>Legt die Shim von RemoteProcAttribute.RemoteProcAttribute(RemoteProcAttribute this, String procName, Boolean async) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimRemoteProcInfo">
            <summary>Shim-Typ von GTANetworkAPI.RemoteProcInfo</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRemoteProcInfo.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimRemoteProcInfo.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRemoteProcInfo.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRemoteProcInfo.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRemoteProcInfo.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo">
            <summary>Shim-Typ von GTANetworkAPI.RuntimeCommandInfo</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.#ctor(GTANetworkAPI.RuntimeCommandInfo)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.ACLRequiredGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_ACLRequired(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.ACLRequiredSetBoolean">
            <summary>Legt die Shim von RuntimeCommandInfo.set_ACLRequired(RuntimeCommandInfo this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AliasGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_Alias(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AliasSetString">
            <summary>Legt die Shim von RuntimeCommandInfo.set_Alias(RuntimeCommandInfo this, String value) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.ACLRequiredGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_ACLRequired(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.ACLRequiredSetBoolean">
            <summary>Legt die Shim von RuntimeCommandInfo.set_ACLRequired(RuntimeCommandInfo this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.AliasGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_Alias(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.AliasSetString">
            <summary>Legt die Shim von RuntimeCommandInfo.set_Alias(RuntimeCommandInfo this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.ArgumentConverterGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_ArgumentConverter(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.ArgumentConverterSetArgumentConversionDelegate">
            <summary>Legt die Shim von RuntimeCommandInfo.set_ArgumentConverter(RuntimeCommandInfo this, ArgumentConversionDelegate value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.ClassInstanceGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_ClassInstance(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.ClassInstanceSetObject">
            <summary>Legt die Shim von RuntimeCommandInfo.set_ClassInstance(RuntimeCommandInfo this, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.DescriptionGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_Description(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.DescriptionSetString">
            <summary>Legt die Shim von RuntimeCommandInfo.set_Description(RuntimeCommandInfo this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.GreedyArgGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_GreedyArg(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.GreedyArgSetBoolean">
            <summary>Legt die Shim von RuntimeCommandInfo.set_GreedyArg(RuntimeCommandInfo this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.GroupGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_Group(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.GroupSetString">
            <summary>Legt die Shim von RuntimeCommandInfo.set_Group(RuntimeCommandInfo this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.HideGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_Hide(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.HideSetBoolean">
            <summary>Legt die Shim von RuntimeCommandInfo.set_Hide(RuntimeCommandInfo this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.SensitiveInfoGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_SensitiveInfo(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.AllInstances.SensitiveInfoSetBoolean">
            <summary>Legt die Shim von RuntimeCommandInfo.set_SensitiveInfo(RuntimeCommandInfo this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.ArgumentConverterGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_ArgumentConverter(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.ArgumentConverterSetArgumentConversionDelegate">
            <summary>Legt die Shim von RuntimeCommandInfo.set_ArgumentConverter(RuntimeCommandInfo this, ArgumentConversionDelegate value) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.ClassInstanceGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_ClassInstance(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.ClassInstanceSetObject">
            <summary>Legt die Shim von RuntimeCommandInfo.set_ClassInstance(RuntimeCommandInfo this, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.Constructor">
            <summary>Legt die Shim von RuntimeCommandInfo.RuntimeCommandInfo(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.ConstructorString">
            <summary>Legt die Shim von RuntimeCommandInfo.RuntimeCommandInfo(RuntimeCommandInfo this, String command) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.ConstructorStringString">
            <summary>Legt die Shim von RuntimeCommandInfo.RuntimeCommandInfo(RuntimeCommandInfo this, String command, String helpText) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.DescriptionGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_Description(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.DescriptionSetString">
            <summary>Legt die Shim von RuntimeCommandInfo.set_Description(RuntimeCommandInfo this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.GreedyArgGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_GreedyArg(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.GreedyArgSetBoolean">
            <summary>Legt die Shim von RuntimeCommandInfo.set_GreedyArg(RuntimeCommandInfo this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.GroupGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_Group(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.GroupSetString">
            <summary>Legt die Shim von RuntimeCommandInfo.set_Group(RuntimeCommandInfo this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.HideGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_Hide(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.HideSetBoolean">
            <summary>Legt die Shim von RuntimeCommandInfo.set_Hide(RuntimeCommandInfo this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.SensitiveInfoGet">
            <summary>Legt die Shim von RuntimeCommandInfo.get_SensitiveInfo(RuntimeCommandInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimRuntimeCommandInfo.SensitiveInfoSetBoolean">
            <summary>Legt die Shim von RuntimeCommandInfo.set_SensitiveInfo(RuntimeCommandInfo this, Boolean value) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimScript">
            <summary>Shim-Typ von GTANetworkAPI.Script</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimScript.#ctor(GTANetworkAPI.Script)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimScript.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimScript.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimScript.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimScript.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimScript.Constructor">
            <summary>Legt die Shim von Script.Script(Script this) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimServerEventAttribute">
            <summary>Shim-Typ von GTANetworkAPI.ServerEventAttribute</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimServerEventAttribute.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimServerEventAttribute.#ctor(GTANetworkAPI.ServerEventAttribute)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimServerEventAttribute.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimServerEventAttribute.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimServerEventAttribute.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimServerEventAttribute.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimServerEventAttribute.ConstructorEvent">
            <summary>Legt die Shim von ServerEventAttribute.ServerEventAttribute(ServerEventAttribute this, Event eventName) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimTextLabel">
            <summary>Shim-Typ von GTANetworkAPI.TextLabel</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimTextLabel.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimTextLabel.#ctor(GTANetworkAPI.TextLabel)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimTextLabel.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.AllInstances.ColorGet">
            <summary>Legt die Shim von TextLabel.get_Color(TextLabel this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.AllInstances.ColorSetColor">
            <summary>Legt die Shim von TextLabel.set_Color(TextLabel this, Color value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.AllInstances.RangeGet">
            <summary>Legt die Shim von TextLabel.get_Range(TextLabel this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.AllInstances.RangeSetSingle">
            <summary>Legt die Shim von TextLabel.set_Range(TextLabel this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.AllInstances.SeethroughGet">
            <summary>Legt die Shim von TextLabel.get_Seethrough(TextLabel this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.AllInstances.SeethroughSetBoolean">
            <summary>Legt die Shim von TextLabel.set_Seethrough(TextLabel this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.AllInstances.TextGet">
            <summary>Legt die Shim von TextLabel.get_Text(TextLabel this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.AllInstances.TextSetString">
            <summary>Legt die Shim von TextLabel.set_Text(TextLabel this, String value) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimTextLabel.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimTextLabel.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.ColorGet">
            <summary>Legt die Shim von TextLabel.get_Color(TextLabel this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.ColorSetColor">
            <summary>Legt die Shim von TextLabel.set_Color(TextLabel this, Color value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.ConstructorNetHandle">
            <summary>Legt die Shim von TextLabel.TextLabel(TextLabel this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.RangeGet">
            <summary>Legt die Shim von TextLabel.get_Range(TextLabel this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.RangeSetSingle">
            <summary>Legt die Shim von TextLabel.set_Range(TextLabel this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.SeethroughGet">
            <summary>Legt die Shim von TextLabel.get_Seethrough(TextLabel this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.SeethroughSetBoolean">
            <summary>Legt die Shim von TextLabel.set_Seethrough(TextLabel this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.TextGet">
            <summary>Legt die Shim von TextLabel.get_Text(TextLabel this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimTextLabel.TextSetString">
            <summary>Legt die Shim von TextLabel.set_Text(TextLabel this, String value) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimVector3">
            <summary>Shim-Typ von GTANetworkAPI.Vector3</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimVector3.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimVector3.#ctor(GTANetworkAPI.Vector3)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AddVector3">
            <summary>Legt die Shim von Vector3.Add(Vector3 this, Vector3 right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AdditionOpVector3Vector3">
            <summary>Legt die Shim von Vector3.op_Addition(Vector3 left, Vector3 right) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimVector3.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.AddVector3">
            <summary>Legt die Shim von Vector3.Add(Vector3 this, Vector3 right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.AroundSingle">
            <summary>Legt die Shim von Vector3.Around(Vector3 this, Single distance) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.Copy">
            <summary>Legt die Shim von Vector3.Copy(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.DistanceTo2DVector3">
            <summary>Legt die Shim von Vector3.DistanceTo2D(Vector3 this, Vector3 right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.DistanceToSquared2DVector3">
            <summary>Legt die Shim von Vector3.DistanceToSquared2D(Vector3 this, Vector3 right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.DistanceToSquaredVector3">
            <summary>Legt die Shim von Vector3.DistanceToSquared(Vector3 this, Vector3 right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.DistanceToVector3">
            <summary>Legt die Shim von Vector3.DistanceTo(Vector3 this, Vector3 right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.DivideSingle">
            <summary>Legt die Shim von Vector3.Divide(Vector3 this, Single right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.Length">
            <summary>Legt die Shim von Vector3.Length(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.LengthSquared">
            <summary>Legt die Shim von Vector3.LengthSquared(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.MultiplySingle">
            <summary>Legt die Shim von Vector3.Multiply(Vector3 this, Single right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.Normalize">
            <summary>Legt die Shim von Vector3.Normalize(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.NormalizedGet">
            <summary>Legt die Shim von Vector3.get_Normalized(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.SubtractVector3">
            <summary>Legt die Shim von Vector3.Subtract(Vector3 this, Vector3 right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.ToString01">
            <summary>Legt die Shim von Vector3.ToString(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.ToUnmanaged">
            <summary>Legt die Shim von Vector3.ToUnmanaged(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.XGet">
            <summary>Legt die Shim von Vector3.get_X(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.XSetSingle">
            <summary>Legt die Shim von Vector3.set_X(Vector3 this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.YGet">
            <summary>Legt die Shim von Vector3.get_Y(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.YSetSingle">
            <summary>Legt die Shim von Vector3.set_Y(Vector3 this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.ZGet">
            <summary>Legt die Shim von Vector3.get_Z(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AllInstances.ZSetSingle">
            <summary>Legt die Shim von Vector3.set_Z(Vector3 this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.AroundSingle">
            <summary>Legt die Shim von Vector3.Around(Vector3 this, Single distance) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimVector3.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimVector3.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.Constructor">
            <summary>Legt die Shim von Vector3.Vector3(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.ConstructorDoubleDoubleDouble">
            <summary>Legt die Shim von Vector3.Vector3(Vector3 this, Double x, Double y, Double z) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.ConstructorSingleSingleSingle">
            <summary>Legt die Shim von Vector3.Vector3(Vector3 this, Single x, Single y, Single z) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.Copy">
            <summary>Legt die Shim von Vector3.Copy(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.DistanceSquaredVector3Vector3">
            <summary>Legt die Shim von Vector3.DistanceSquared(Vector3 a, Vector3 b) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.DistanceTo2DVector3">
            <summary>Legt die Shim von Vector3.DistanceTo2D(Vector3 this, Vector3 right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.DistanceToSquared2DVector3">
            <summary>Legt die Shim von Vector3.DistanceToSquared2D(Vector3 this, Vector3 right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.DistanceToSquaredVector3">
            <summary>Legt die Shim von Vector3.DistanceToSquared(Vector3 this, Vector3 right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.DistanceToVector3">
            <summary>Legt die Shim von Vector3.DistanceTo(Vector3 this, Vector3 right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.DistanceVector3Vector3">
            <summary>Legt die Shim von Vector3.Distance(Vector3 a, Vector3 b) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.DivideSingle">
            <summary>Legt die Shim von Vector3.Divide(Vector3 this, Single right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.DivisionOpVector3Single">
            <summary>Legt die Shim von Vector3.op_Division(Vector3 left, Single right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.EqualityOpVector3Vector3">
            <summary>Legt die Shim von Vector3.op_Equality(Vector3 left, Vector3 right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.InequalityOpVector3Vector3">
            <summary>Legt die Shim von Vector3.op_Inequality(Vector3 left, Vector3 right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.Length">
            <summary>Legt die Shim von Vector3.Length(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.LengthSquared">
            <summary>Legt die Shim von Vector3.LengthSquared(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.LerpVector3Vector3Single">
            <summary>Legt die Shim von Vector3.Lerp(Vector3 start, Vector3 end, Single n) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.MultiplyOpVector3Single">
            <summary>Legt die Shim von Vector3.op_Multiply(Vector3 left, Single right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.MultiplySingle">
            <summary>Legt die Shim von Vector3.Multiply(Vector3 this, Single right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.Normalize">
            <summary>Legt die Shim von Vector3.Normalize(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.NormalizedGet">
            <summary>Legt die Shim von Vector3.get_Normalized(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.RandomXy">
            <summary>Legt die Shim von Vector3.RandomXy() fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.StaticConstructor">
            <summary>Legt die Shim von Vector3.Vector3() fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.SubtractVector3">
            <summary>Legt die Shim von Vector3.Subtract(Vector3 this, Vector3 right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.SubtractionOpVector3Vector3">
            <summary>Legt die Shim von Vector3.op_Subtraction(Vector3 left, Vector3 right) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.ToString">
            <summary>Legt die Shim von Vector3.ToString(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.ToUnmanaged">
            <summary>Legt die Shim von Vector3.ToUnmanaged(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.XGet">
            <summary>Legt die Shim von Vector3.get_X(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.XSetSingle">
            <summary>Legt die Shim von Vector3.set_X(Vector3 this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.YGet">
            <summary>Legt die Shim von Vector3.get_Y(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.YSetSingle">
            <summary>Legt die Shim von Vector3.set_Y(Vector3 this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.ZGet">
            <summary>Legt die Shim von Vector3.get_Z(Vector3 this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVector3.ZSetSingle">
            <summary>Legt die Shim von Vector3.set_Z(Vector3 this, Single value) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimVehicle">
            <summary>Shim-Typ von GTANetworkAPI.Vehicle</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimVehicle.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimVehicle.#ctor(GTANetworkAPI.Vehicle)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimVehicle.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.BulletproofTyresGet">
            <summary>Legt die Shim von Vehicle.get_BulletproofTyres(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.BulletproofTyresSetBoolean">
            <summary>Legt die Shim von Vehicle.set_BulletproofTyres(Vehicle this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.ClassGet">
            <summary>Legt die Shim von Vehicle.get_Class(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.ClassNameGet">
            <summary>Legt die Shim von Vehicle.get_ClassName(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.ControllerGet">
            <summary>Legt die Shim von Vehicle.get_Controller(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.CustomPrimaryColorGet">
            <summary>Legt die Shim von Vehicle.get_CustomPrimaryColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.CustomPrimaryColorSetColor">
            <summary>Legt die Shim von Vehicle.set_CustomPrimaryColor(Vehicle this, Color value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.CustomSecondaryColorGet">
            <summary>Legt die Shim von Vehicle.get_CustomSecondaryColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.CustomSecondaryColorSetColor">
            <summary>Legt die Shim von Vehicle.set_CustomSecondaryColor(Vehicle this, Color value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.CustomTiresGet">
            <summary>Legt die Shim von Vehicle.get_CustomTires(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.CustomTiresSetBoolean">
            <summary>Legt die Shim von Vehicle.set_CustomTires(Vehicle this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.DashboardColorGet">
            <summary>Legt die Shim von Vehicle.get_DashboardColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.DashboardColorSetInt32">
            <summary>Legt die Shim von Vehicle.set_DashboardColor(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.DisplayNameGet">
            <summary>Legt die Shim von Vehicle.get_DisplayName(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.EnginePowerMultiplierGet">
            <summary>Legt die Shim von Vehicle.get_EnginePowerMultiplier(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.EnginePowerMultiplierSetSingle">
            <summary>Legt die Shim von Vehicle.set_EnginePowerMultiplier(Vehicle this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.EngineStatusGet">
            <summary>Legt die Shim von Vehicle.get_EngineStatus(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.EngineStatusSetBoolean">
            <summary>Legt die Shim von Vehicle.set_EngineStatus(Vehicle this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.EngineTorqueMultiplierGet">
            <summary>Legt die Shim von Vehicle.get_EngineTorqueMultiplier(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.EngineTorqueMultiplierSetSingle">
            <summary>Legt die Shim von Vehicle.set_EngineTorqueMultiplier(Vehicle this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.GetExtraInt32">
            <summary>Legt die Shim von Vehicle.GetExtra(Vehicle this, Int32 extra) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.GetModInt32">
            <summary>Legt die Shim von Vehicle.GetMod(Vehicle this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.HealthGet">
            <summary>Legt die Shim von Vehicle.get_Health(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.HealthSetSingle">
            <summary>Legt die Shim von Vehicle.set_Health(Vehicle this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.LiveryGet">
            <summary>Legt die Shim von Vehicle.get_Livery(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.LiverySetInt32">
            <summary>Legt die Shim von Vehicle.set_Livery(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.LockedGet">
            <summary>Legt die Shim von Vehicle.get_Locked(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.LockedSetBoolean">
            <summary>Legt die Shim von Vehicle.set_Locked(Vehicle this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.MaxAccelerationGet">
            <summary>Legt die Shim von Vehicle.get_MaxAcceleration(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.MaxBrakingGet">
            <summary>Legt die Shim von Vehicle.get_MaxBraking(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.MaxOccupantsGet">
            <summary>Legt die Shim von Vehicle.get_MaxOccupants(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.MaxPassengersGet">
            <summary>Legt die Shim von Vehicle.get_MaxPassengers(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.MaxSpeedGet">
            <summary>Legt die Shim von Vehicle.get_MaxSpeed(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.MaxTractionGet">
            <summary>Legt die Shim von Vehicle.get_MaxTraction(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.NeonColorGet">
            <summary>Legt die Shim von Vehicle.get_NeonColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.NeonColorSetColor">
            <summary>Legt die Shim von Vehicle.set_NeonColor(Vehicle this, Color value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.NeonsGet">
            <summary>Legt die Shim von Vehicle.get_Neons(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.NeonsSetBoolean">
            <summary>Legt die Shim von Vehicle.set_Neons(Vehicle this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.NumberPlateGet">
            <summary>Legt die Shim von Vehicle.get_NumberPlate(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.NumberPlateSetString">
            <summary>Legt die Shim von Vehicle.set_NumberPlate(Vehicle this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.NumberPlateStyleGet">
            <summary>Legt die Shim von Vehicle.get_NumberPlateStyle(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.NumberPlateStyleSetInt32">
            <summary>Legt die Shim von Vehicle.set_NumberPlateStyle(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.OccupantsGet">
            <summary>Legt die Shim von Vehicle.get_Occupants(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.PearlescentColorGet">
            <summary>Legt die Shim von Vehicle.get_PearlescentColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.PearlescentColorSetInt32">
            <summary>Legt die Shim von Vehicle.set_PearlescentColor(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.PrimaryColorGet">
            <summary>Legt die Shim von Vehicle.get_PrimaryColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.PrimaryColorSetInt32">
            <summary>Legt die Shim von Vehicle.set_PrimaryColor(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.PrimaryPaintGet">
            <summary>Legt die Shim von Vehicle.get_PrimaryPaint(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.PrimaryPaintSetVehiclePaint">
            <summary>Legt die Shim von Vehicle.set_PrimaryPaint(Vehicle this, VehiclePaint value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.RemoveModInt32">
            <summary>Legt die Shim von Vehicle.RemoveMod(Vehicle this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.Repair">
            <summary>Legt die Shim von Vehicle.Repair(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.SecondaryColorGet">
            <summary>Legt die Shim von Vehicle.get_SecondaryColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.SecondaryColorSetInt32">
            <summary>Legt die Shim von Vehicle.set_SecondaryColor(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.SecondaryPaintGet">
            <summary>Legt die Shim von Vehicle.get_SecondaryPaint(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.SecondaryPaintSetVehiclePaint">
            <summary>Legt die Shim von Vehicle.set_SecondaryPaint(Vehicle this, VehiclePaint value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.SetExtraInt32Boolean">
            <summary>Legt die Shim von Vehicle.SetExtra(Vehicle this, Int32 extra, Boolean enabled) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.SetModInt32Int32">
            <summary>Legt die Shim von Vehicle.SetMod(Vehicle this, Int32 slot, Int32 mod) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.SirenGet">
            <summary>Legt die Shim von Vehicle.get_Siren(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.SpawnVector3Single">
            <summary>Legt die Shim von Vehicle.Spawn(Vehicle this, Vector3 position, Single heading) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.SpecialLightGet">
            <summary>Legt die Shim von Vehicle.get_SpecialLight(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.SpecialLightSetBoolean">
            <summary>Legt die Shim von Vehicle.set_SpecialLight(Vehicle this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.TrailerGet">
            <summary>Legt die Shim von Vehicle.get_Trailer(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.TraileredByGet">
            <summary>Legt die Shim von Vehicle.get_TraileredBy(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.TrimColorGet">
            <summary>Legt die Shim von Vehicle.get_TrimColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.TrimColorSetInt32">
            <summary>Legt die Shim von Vehicle.set_TrimColor(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.TyreSmokeColorGet">
            <summary>Legt die Shim von Vehicle.get_TyreSmokeColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.TyreSmokeColorSetColor">
            <summary>Legt die Shim von Vehicle.set_TyreSmokeColor(Vehicle this, Color value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.WheelColorGet">
            <summary>Legt die Shim von Vehicle.get_WheelColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.WheelColorSetInt32">
            <summary>Legt die Shim von Vehicle.set_WheelColor(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.WheelTypeGet">
            <summary>Legt die Shim von Vehicle.get_WheelType(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.WheelTypeSetInt32">
            <summary>Legt die Shim von Vehicle.set_WheelType(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.WindowTintGet">
            <summary>Legt die Shim von Vehicle.get_WindowTint(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.AllInstances.WindowTintSetInt32">
            <summary>Legt die Shim von Vehicle.set_WindowTint(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimVehicle.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimVehicle.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.BulletproofTyresGet">
            <summary>Legt die Shim von Vehicle.get_BulletproofTyres(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.BulletproofTyresSetBoolean">
            <summary>Legt die Shim von Vehicle.set_BulletproofTyres(Vehicle this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.ClassGet">
            <summary>Legt die Shim von Vehicle.get_Class(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.ClassNameGet">
            <summary>Legt die Shim von Vehicle.get_ClassName(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.ConstructorNetHandle">
            <summary>Legt die Shim von Vehicle.Vehicle(Vehicle this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.ControllerGet">
            <summary>Legt die Shim von Vehicle.get_Controller(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.CustomPrimaryColorGet">
            <summary>Legt die Shim von Vehicle.get_CustomPrimaryColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.CustomPrimaryColorSetColor">
            <summary>Legt die Shim von Vehicle.set_CustomPrimaryColor(Vehicle this, Color value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.CustomSecondaryColorGet">
            <summary>Legt die Shim von Vehicle.get_CustomSecondaryColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.CustomSecondaryColorSetColor">
            <summary>Legt die Shim von Vehicle.set_CustomSecondaryColor(Vehicle this, Color value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.CustomTiresGet">
            <summary>Legt die Shim von Vehicle.get_CustomTires(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.CustomTiresSetBoolean">
            <summary>Legt die Shim von Vehicle.set_CustomTires(Vehicle this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.DashboardColorGet">
            <summary>Legt die Shim von Vehicle.get_DashboardColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.DashboardColorSetInt32">
            <summary>Legt die Shim von Vehicle.set_DashboardColor(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.DisplayNameGet">
            <summary>Legt die Shim von Vehicle.get_DisplayName(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.EnginePowerMultiplierGet">
            <summary>Legt die Shim von Vehicle.get_EnginePowerMultiplier(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.EnginePowerMultiplierSetSingle">
            <summary>Legt die Shim von Vehicle.set_EnginePowerMultiplier(Vehicle this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.EngineStatusGet">
            <summary>Legt die Shim von Vehicle.get_EngineStatus(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.EngineStatusSetBoolean">
            <summary>Legt die Shim von Vehicle.set_EngineStatus(Vehicle this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.EngineTorqueMultiplierGet">
            <summary>Legt die Shim von Vehicle.get_EngineTorqueMultiplier(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.EngineTorqueMultiplierSetSingle">
            <summary>Legt die Shim von Vehicle.set_EngineTorqueMultiplier(Vehicle this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.GetExtraInt32">
            <summary>Legt die Shim von Vehicle.GetExtra(Vehicle this, Int32 extra) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.GetModInt32">
            <summary>Legt die Shim von Vehicle.GetMod(Vehicle this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.HealthGet">
            <summary>Legt die Shim von Vehicle.get_Health(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.HealthSetSingle">
            <summary>Legt die Shim von Vehicle.set_Health(Vehicle this, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.LiveryGet">
            <summary>Legt die Shim von Vehicle.get_Livery(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.LiverySetInt32">
            <summary>Legt die Shim von Vehicle.set_Livery(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.LockedGet">
            <summary>Legt die Shim von Vehicle.get_Locked(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.LockedSetBoolean">
            <summary>Legt die Shim von Vehicle.set_Locked(Vehicle this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.MaxAccelerationGet">
            <summary>Legt die Shim von Vehicle.get_MaxAcceleration(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.MaxBrakingGet">
            <summary>Legt die Shim von Vehicle.get_MaxBraking(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.MaxOccupantsGet">
            <summary>Legt die Shim von Vehicle.get_MaxOccupants(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.MaxPassengersGet">
            <summary>Legt die Shim von Vehicle.get_MaxPassengers(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.MaxSpeedGet">
            <summary>Legt die Shim von Vehicle.get_MaxSpeed(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.MaxTractionGet">
            <summary>Legt die Shim von Vehicle.get_MaxTraction(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.NeonColorGet">
            <summary>Legt die Shim von Vehicle.get_NeonColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.NeonColorSetColor">
            <summary>Legt die Shim von Vehicle.set_NeonColor(Vehicle this, Color value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.NeonsGet">
            <summary>Legt die Shim von Vehicle.get_Neons(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.NeonsSetBoolean">
            <summary>Legt die Shim von Vehicle.set_Neons(Vehicle this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.NumberPlateGet">
            <summary>Legt die Shim von Vehicle.get_NumberPlate(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.NumberPlateSetString">
            <summary>Legt die Shim von Vehicle.set_NumberPlate(Vehicle this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.NumberPlateStyleGet">
            <summary>Legt die Shim von Vehicle.get_NumberPlateStyle(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.NumberPlateStyleSetInt32">
            <summary>Legt die Shim von Vehicle.set_NumberPlateStyle(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.OccupantsGet">
            <summary>Legt die Shim von Vehicle.get_Occupants(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.PearlescentColorGet">
            <summary>Legt die Shim von Vehicle.get_PearlescentColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.PearlescentColorSetInt32">
            <summary>Legt die Shim von Vehicle.set_PearlescentColor(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.PrimaryColorGet">
            <summary>Legt die Shim von Vehicle.get_PrimaryColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.PrimaryColorSetInt32">
            <summary>Legt die Shim von Vehicle.set_PrimaryColor(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.PrimaryPaintGet">
            <summary>Legt die Shim von Vehicle.get_PrimaryPaint(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.PrimaryPaintSetVehiclePaint">
            <summary>Legt die Shim von Vehicle.set_PrimaryPaint(Vehicle this, VehiclePaint value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.RemoveModInt32">
            <summary>Legt die Shim von Vehicle.RemoveMod(Vehicle this, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.Repair">
            <summary>Legt die Shim von Vehicle.Repair(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.SecondaryColorGet">
            <summary>Legt die Shim von Vehicle.get_SecondaryColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.SecondaryColorSetInt32">
            <summary>Legt die Shim von Vehicle.set_SecondaryColor(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.SecondaryPaintGet">
            <summary>Legt die Shim von Vehicle.get_SecondaryPaint(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.SecondaryPaintSetVehiclePaint">
            <summary>Legt die Shim von Vehicle.set_SecondaryPaint(Vehicle this, VehiclePaint value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.SetExtraInt32Boolean">
            <summary>Legt die Shim von Vehicle.SetExtra(Vehicle this, Int32 extra, Boolean enabled) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.SetModInt32Int32">
            <summary>Legt die Shim von Vehicle.SetMod(Vehicle this, Int32 slot, Int32 mod) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.SirenGet">
            <summary>Legt die Shim von Vehicle.get_Siren(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.SpawnVector3Single">
            <summary>Legt die Shim von Vehicle.Spawn(Vehicle this, Vector3 position, Single heading) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.SpecialLightGet">
            <summary>Legt die Shim von Vehicle.get_SpecialLight(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.SpecialLightSetBoolean">
            <summary>Legt die Shim von Vehicle.set_SpecialLight(Vehicle this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.TrailerGet">
            <summary>Legt die Shim von Vehicle.get_Trailer(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.TraileredByGet">
            <summary>Legt die Shim von Vehicle.get_TraileredBy(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.TrimColorGet">
            <summary>Legt die Shim von Vehicle.get_TrimColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.TrimColorSetInt32">
            <summary>Legt die Shim von Vehicle.set_TrimColor(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.TyreSmokeColorGet">
            <summary>Legt die Shim von Vehicle.get_TyreSmokeColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.TyreSmokeColorSetColor">
            <summary>Legt die Shim von Vehicle.set_TyreSmokeColor(Vehicle this, Color value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.WheelColorGet">
            <summary>Legt die Shim von Vehicle.get_WheelColor(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.WheelColorSetInt32">
            <summary>Legt die Shim von Vehicle.set_WheelColor(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.WheelTypeGet">
            <summary>Legt die Shim von Vehicle.get_WheelType(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.WheelTypeSetInt32">
            <summary>Legt die Shim von Vehicle.set_WheelType(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.WindowTintGet">
            <summary>Legt die Shim von Vehicle.get_WindowTint(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehicle.WindowTintSetInt32">
            <summary>Legt die Shim von Vehicle.set_WindowTint(Vehicle this, Int32 value) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimVehiclePaint">
            <summary>Shim-Typ von GTANetworkAPI.VehiclePaint</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimVehiclePaint.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimVehiclePaint.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimVehiclePaint.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimVehiclePaint.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimVehiclePaint.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimXmlGroup">
            <summary>Shim-Typ von GTANetworkAPI.XmlGroup</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimXmlGroup.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimXmlGroup.#ctor(GTANetworkAPI.XmlGroup)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimXmlGroup.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimXmlGroup.AllInstances.LoadString">
            <summary>Legt die Shim von XmlGroup.Load(XmlGroup this, String path) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimXmlGroup.AllInstances.LoadXmlNode">
            <summary>Legt die Shim von XmlGroup.Load(XmlGroup this, XmlNode node) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimXmlGroup.AllInstances.getElementByTypeString">
            <summary>Legt die Shim von XmlGroup.getElementByType(XmlGroup this, String typeName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimXmlGroup.AllInstances.getElementsByTypeString">
            <summary>Legt die Shim von XmlGroup.getElementsByType(XmlGroup this, String typeName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimXmlGroup.AllInstances.getNumberOfElementsOfTypeString">
            <summary>Legt die Shim von XmlGroup.getNumberOfElementsOfType(XmlGroup this, String typeName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimXmlGroup.AllInstances.getSubgroupString">
            <summary>Legt die Shim von XmlGroup.getSubgroup(XmlGroup this, String groupName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimXmlGroup.AllInstances.hasAnyElementOfTypeString">
            <summary>Legt die Shim von XmlGroup.hasAnyElementOfType(XmlGroup this, String typeName) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimXmlGroup.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimXmlGroup.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimXmlGroup.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimXmlGroup.Constructor">
            <summary>Legt die Shim von XmlGroup.XmlGroup(XmlGroup this) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimXmlGroup.LoadString">
            <summary>Legt die Shim von XmlGroup.Load(XmlGroup this, String path) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimXmlGroup.LoadXmlNode">
            <summary>Legt die Shim von XmlGroup.Load(XmlGroup this, XmlNode node) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimXmlGroup.getElementByTypeString">
            <summary>Legt die Shim von XmlGroup.getElementByType(XmlGroup this, String typeName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimXmlGroup.getElementsByTypeString">
            <summary>Legt die Shim von XmlGroup.getElementsByType(XmlGroup this, String typeName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimXmlGroup.getNumberOfElementsOfTypeString">
            <summary>Legt die Shim von XmlGroup.getNumberOfElementsOfType(XmlGroup this, String typeName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimXmlGroup.getSubgroupString">
            <summary>Legt die Shim von XmlGroup.getSubgroup(XmlGroup this, String groupName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimXmlGroup.hasAnyElementOfTypeString">
            <summary>Legt die Shim von XmlGroup.hasAnyElementOfType(XmlGroup this, String typeName) fest.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimxmlElement">
            <summary>Shim-Typ von GTANetworkAPI.xmlElement</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimxmlElement.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimxmlElement.#ctor(GTANetworkAPI.xmlElement)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkAPI.Fakes.ShimxmlElement.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimxmlElement.AllInstances.getElementDataOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkAPI.xmlElement,System.String,``0})">
            <summary>Legt die Shim von xmlElement.getElementData(xmlElement this, String elementName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimxmlElement.AllInstances.hasElementDataString">
            <summary>Legt die Shim von xmlElement.hasElementData(xmlElement this, String elementName) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimxmlElement.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimxmlElement.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimxmlElement.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimxmlElement.Constructor">
            <summary>Legt die Shim von xmlElement.xmlElement(xmlElement this) fest.</summary>
        </member>
        <member name="M:GTANetworkAPI.Fakes.ShimxmlElement.getElementDataOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Legt die Shim von xmlElement.getElementData(xmlElement this, String elementName) fest.</summary>
        </member>
        <member name="P:GTANetworkAPI.Fakes.ShimxmlElement.hasElementDataString">
            <summary>Legt die Shim von xmlElement.hasElementData(xmlElement this, String elementName) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimACLGroup">
            <summary>Shim-Typ von GTANetworkInternals.ACLGroup</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLGroup.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLGroup.#ctor(GTANetworkInternals.ACLGroup)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLGroup.ACLRightsGet">
            <summary>Legt die Shim von ACLGroup.get_ACLRights(ACLGroup this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLGroup.ACLRightsSetListOfACLRightsList">
            <summary>Legt die Shim von ACLGroup.set_ACLRights(ACLGroup this, List`1 value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimACLGroup.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLGroup.AllInstances.ACLRightsGet">
            <summary>Legt die Shim von ACLGroup.get_ACLRights(ACLGroup this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLGroup.AllInstances.ACLRightsSetListOfACLRightsList">
            <summary>Legt die Shim von ACLGroup.set_ACLRights(ACLGroup this, List`1 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLGroup.AllInstances.NameGet">
            <summary>Legt die Shim von ACLGroup.get_Name(ACLGroup this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLGroup.AllInstances.NameSetString">
            <summary>Legt die Shim von ACLGroup.set_Name(ACLGroup this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLGroup.AllInstances.ObjectsGet">
            <summary>Legt die Shim von ACLGroup.get_Objects(ACLGroup this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLGroup.AllInstances.ObjectsSetListOfACLObject">
            <summary>Legt die Shim von ACLGroup.set_Objects(ACLGroup this, List`1 value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLGroup.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLGroup.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLGroup.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLGroup.Constructor">
            <summary>Legt die Shim von ACLGroup.ACLGroup(ACLGroup this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLGroup.NameGet">
            <summary>Legt die Shim von ACLGroup.get_Name(ACLGroup this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLGroup.NameSetString">
            <summary>Legt die Shim von ACLGroup.set_Name(ACLGroup this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLGroup.ObjectsGet">
            <summary>Legt die Shim von ACLGroup.get_Objects(ACLGroup this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLGroup.ObjectsSetListOfACLObject">
            <summary>Legt die Shim von ACLGroup.set_Objects(ACLGroup this, List`1 value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimACLObject">
            <summary>Shim-Typ von GTANetworkInternals.ACLObject</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLObject.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLObject.#ctor(GTANetworkInternals.ACLObject)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimACLObject.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLObject.AllInstances.NameGet">
            <summary>Legt die Shim von ACLObject.get_Name(ACLObject this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLObject.AllInstances.NameSetString">
            <summary>Legt die Shim von ACLObject.set_Name(ACLObject this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLObject.AllInstances.PasswordGet">
            <summary>Legt die Shim von ACLObject.get_Password(ACLObject this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLObject.AllInstances.PasswordSetString">
            <summary>Legt die Shim von ACLObject.set_Password(ACLObject this, String value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLObject.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLObject.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLObject.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLObject.Constructor">
            <summary>Legt die Shim von ACLObject.ACLObject(ACLObject this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLObject.NameGet">
            <summary>Legt die Shim von ACLObject.get_Name(ACLObject this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLObject.NameSetString">
            <summary>Legt die Shim von ACLObject.set_Name(ACLObject this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLObject.PasswordGet">
            <summary>Legt die Shim von ACLObject.get_Password(ACLObject this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLObject.PasswordSetString">
            <summary>Legt die Shim von ACLObject.set_Password(ACLObject this, String value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimACLRight">
            <summary>Shim-Typ von GTANetworkInternals.ACLRight</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLRight.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLRight.#ctor(GTANetworkInternals.ACLRight)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRight.AccessGet">
            <summary>Legt die Shim von ACLRight.get_Access(ACLRight this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRight.AccessSetBoolean">
            <summary>Legt die Shim von ACLRight.set_Access(ACLRight this, Boolean value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimACLRight.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRight.AllInstances.AccessGet">
            <summary>Legt die Shim von ACLRight.get_Access(ACLRight this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRight.AllInstances.AccessSetBoolean">
            <summary>Legt die Shim von ACLRight.set_Access(ACLRight this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRight.AllInstances.NameGet">
            <summary>Legt die Shim von ACLRight.get_Name(ACLRight this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRight.AllInstances.NameSetString">
            <summary>Legt die Shim von ACLRight.set_Name(ACLRight this, String value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLRight.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLRight.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRight.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRight.Constructor">
            <summary>Legt die Shim von ACLRight.ACLRight(ACLRight this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRight.NameGet">
            <summary>Legt die Shim von ACLRight.get_Name(ACLRight this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRight.NameSetString">
            <summary>Legt die Shim von ACLRight.set_Name(ACLRight this, String value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimACLRightsList">
            <summary>Shim-Typ von GTANetworkInternals.ACLRightsList</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLRightsList.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLRightsList.#ctor(GTANetworkInternals.ACLRightsList)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimACLRightsList.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRightsList.AllInstances.NameGet">
            <summary>Legt die Shim von ACLRightsList.get_Name(ACLRightsList this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRightsList.AllInstances.NameSetString">
            <summary>Legt die Shim von ACLRightsList.set_Name(ACLRightsList this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRightsList.AllInstances.RightsGet">
            <summary>Legt die Shim von ACLRightsList.get_Rights(ACLRightsList this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRightsList.AllInstances.RightsSetListOfACLRight">
            <summary>Legt die Shim von ACLRightsList.set_Rights(ACLRightsList this, List`1 value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLRightsList.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLRightsList.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRightsList.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRightsList.Constructor">
            <summary>Legt die Shim von ACLRightsList.ACLRightsList(ACLRightsList this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRightsList.NameGet">
            <summary>Legt die Shim von ACLRightsList.get_Name(ACLRightsList this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRightsList.NameSetString">
            <summary>Legt die Shim von ACLRightsList.set_Name(ACLRightsList this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRightsList.RightsGet">
            <summary>Legt die Shim von ACLRightsList.get_Rights(ACLRightsList this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRightsList.RightsSetListOfACLRight">
            <summary>Legt die Shim von ACLRightsList.set_Rights(ACLRightsList this, List`1 value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimACLRoot">
            <summary>Shim-Typ von GTANetworkInternals.ACLRoot</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLRoot.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLRoot.#ctor(GTANetworkInternals.ACLRoot)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimACLRoot.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRoot.AllInstances.GroupsGet">
            <summary>Legt die Shim von ACLRoot.get_Groups(ACLRoot this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRoot.AllInstances.GroupsSetListOfACLGroup">
            <summary>Legt die Shim von ACLRoot.set_Groups(ACLRoot this, List`1 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRoot.AllInstances.RightListsGet">
            <summary>Legt die Shim von ACLRoot.get_RightLists(ACLRoot this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRoot.AllInstances.RightListsSetListOfACLRightsList">
            <summary>Legt die Shim von ACLRoot.set_RightLists(ACLRoot this, List`1 value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLRoot.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimACLRoot.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRoot.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRoot.Constructor">
            <summary>Legt die Shim von ACLRoot.ACLRoot(ACLRoot this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRoot.GroupsGet">
            <summary>Legt die Shim von ACLRoot.get_Groups(ACLRoot this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRoot.GroupsSetListOfACLGroup">
            <summary>Legt die Shim von ACLRoot.set_Groups(ACLRoot this, List`1 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRoot.RightListsGet">
            <summary>Legt die Shim von ACLRoot.get_RightLists(ACLRoot this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimACLRoot.RightListsSetListOfACLRightsList">
            <summary>Legt die Shim von ACLRoot.set_RightLists(ACLRoot this, List`1 value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimAssemblyReferences">
            <summary>Shim-Typ von GTANetworkInternals.AssemblyReferences</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimAssemblyReferences.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimAssemblyReferences.#ctor(GTANetworkInternals.AssemblyReferences)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimAssemblyReferences.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimAssemblyReferences.AllInstances.NameGet">
            <summary>Legt die Shim von AssemblyReferences.get_Name(AssemblyReferences this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimAssemblyReferences.AllInstances.NameSetString">
            <summary>Legt die Shim von AssemblyReferences.set_Name(AssemblyReferences this, String value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimAssemblyReferences.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimAssemblyReferences.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimAssemblyReferences.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimAssemblyReferences.Constructor">
            <summary>Legt die Shim von AssemblyReferences.AssemblyReferences(AssemblyReferences this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimAssemblyReferences.NameGet">
            <summary>Legt die Shim von AssemblyReferences.get_Name(AssemblyReferences this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimAssemblyReferences.NameSetString">
            <summary>Legt die Shim von AssemblyReferences.set_Name(AssemblyReferences this, String value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimExportedEvent">
            <summary>Shim-Typ von GTANetworkInternals.ExportedEvent</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimExportedEvent.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimExportedEvent.#ctor(GTANetworkInternals.ExportedEvent)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimExportedEvent.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimExportedEvent.AllInstances.EndInvokeIAsyncResult">
            <summary>Legt die Shim von ExportedEvent.EndInvoke(ExportedEvent this, IAsyncResult result) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimExportedEvent.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimExportedEvent.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimExportedEvent.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimExportedEvent.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimExportedEvent.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimExportedEvent.ConstructorObjectIntPtr">
            <summary>Legt die Shim von ExportedEvent.ExportedEvent(ExportedEvent this, Object object, IntPtr method) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimExportedEvent.EndInvokeIAsyncResult">
            <summary>Legt die Shim von ExportedEvent.EndInvoke(ExportedEvent this, IAsyncResult result) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimExportedFunctionDelegate">
            <summary>Shim-Typ von GTANetworkInternals.ExportedFunctionDelegate</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimExportedFunctionDelegate.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimExportedFunctionDelegate.#ctor(GTANetworkInternals.ExportedFunctionDelegate)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimExportedFunctionDelegate.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimExportedFunctionDelegate.AllInstances.BeginInvokeObjectArrayAsyncCallbackObject">
            <summary>Legt die Shim von ExportedFunctionDelegate.BeginInvoke(ExportedFunctionDelegate this, Object[] parameters, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimExportedFunctionDelegate.BeginInvokeObjectArrayAsyncCallbackObject">
            <summary>Legt die Shim von ExportedFunctionDelegate.BeginInvoke(ExportedFunctionDelegate this, Object[] parameters, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimExportedFunctionDelegate.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimExportedFunctionDelegate.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimExportedFunctionDelegate.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimExportedFunctionDelegate.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimExportedFunctionDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimExportedFunctionDelegate.ConstructorObjectIntPtr">
            <summary>Legt die Shim von ExportedFunctionDelegate.ExportedFunctionDelegate(ExportedFunctionDelegate this, Object object, IntPtr method) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimFilePath">
            <summary>Shim-Typ von GTANetworkInternals.FilePath</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimFilePath.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimFilePath.#ctor(GTANetworkInternals.FilePath)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimFilePath.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimFilePath.AllInstances.PathGet">
            <summary>Legt die Shim von FilePath.get_Path(FilePath this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimFilePath.AllInstances.PathSetString">
            <summary>Legt die Shim von FilePath.set_Path(FilePath this, String value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimFilePath.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimFilePath.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimFilePath.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimFilePath.Constructor">
            <summary>Legt die Shim von FilePath.FilePath(FilePath this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimFilePath.PathGet">
            <summary>Legt die Shim von FilePath.get_Path(FilePath this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimFilePath.PathSetString">
            <summary>Legt die Shim von FilePath.set_Path(FilePath this, String value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimMapSource">
            <summary>Shim-Typ von GTANetworkInternals.MapSource</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimMapSource.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimMapSource.#ctor(GTANetworkInternals.MapSource)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimMapSource.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMapSource.AllInstances.DimensionGet">
            <summary>Legt die Shim von MapSource.get_Dimension(MapSource this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMapSource.AllInstances.DimensionSetUInt32">
            <summary>Legt die Shim von MapSource.set_Dimension(MapSource this, UInt32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMapSource.AllInstances.PathGet">
            <summary>Legt die Shim von MapSource.get_Path(MapSource this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMapSource.AllInstances.PathSetString">
            <summary>Legt die Shim von MapSource.set_Path(MapSource this, String value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimMapSource.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimMapSource.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMapSource.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMapSource.Constructor">
            <summary>Legt die Shim von MapSource.MapSource(MapSource this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMapSource.DimensionGet">
            <summary>Legt die Shim von MapSource.get_Dimension(MapSource this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMapSource.DimensionSetUInt32">
            <summary>Legt die Shim von MapSource.set_Dimension(MapSource this, UInt32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMapSource.PathGet">
            <summary>Legt die Shim von MapSource.get_Path(MapSource this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMapSource.PathSetString">
            <summary>Legt die Shim von MapSource.set_Path(MapSource this, String value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimMetaSetting">
            <summary>Shim-Typ von GTANetworkInternals.MetaSetting</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimMetaSetting.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimMetaSetting.#ctor(GTANetworkInternals.MetaSetting)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimMetaSetting.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.AllInstances.DefaultValueGet">
            <summary>Legt die Shim von MetaSetting.get_DefaultValue(MetaSetting this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.AllInstances.DefaultValueSetString">
            <summary>Legt die Shim von MetaSetting.set_DefaultValue(MetaSetting this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.AllInstances.DescriptionGet">
            <summary>Legt die Shim von MetaSetting.get_Description(MetaSetting this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.AllInstances.DescriptionSetString">
            <summary>Legt die Shim von MetaSetting.set_Description(MetaSetting this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.AllInstances.NameGet">
            <summary>Legt die Shim von MetaSetting.get_Name(MetaSetting this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.AllInstances.NameSetString">
            <summary>Legt die Shim von MetaSetting.set_Name(MetaSetting this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.AllInstances.ValueGet">
            <summary>Legt die Shim von MetaSetting.get_Value(MetaSetting this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.AllInstances.ValueSetString">
            <summary>Legt die Shim von MetaSetting.set_Value(MetaSetting this, String value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimMetaSetting.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimMetaSetting.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.Constructor">
            <summary>Legt die Shim von MetaSetting.MetaSetting(MetaSetting this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.DefaultValueGet">
            <summary>Legt die Shim von MetaSetting.get_DefaultValue(MetaSetting this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.DefaultValueSetString">
            <summary>Legt die Shim von MetaSetting.set_DefaultValue(MetaSetting this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.DescriptionGet">
            <summary>Legt die Shim von MetaSetting.get_Description(MetaSetting this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.DescriptionSetString">
            <summary>Legt die Shim von MetaSetting.set_Description(MetaSetting this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.NameGet">
            <summary>Legt die Shim von MetaSetting.get_Name(MetaSetting this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.NameSetString">
            <summary>Legt die Shim von MetaSetting.set_Name(MetaSetting this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.ValueGet">
            <summary>Legt die Shim von MetaSetting.get_Value(MetaSetting this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMetaSetting.ValueSetString">
            <summary>Legt die Shim von MetaSetting.set_Value(MetaSetting this, String value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimMethodExport">
            <summary>Shim-Typ von GTANetworkInternals.MethodExport</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimMethodExport.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimMethodExport.#ctor(GTANetworkInternals.MethodExport)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimMethodExport.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMethodExport.AllInstances.EventNameGet">
            <summary>Legt die Shim von MethodExport.get_EventName(MethodExport this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMethodExport.AllInstances.EventNameSetString">
            <summary>Legt die Shim von MethodExport.set_EventName(MethodExport this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMethodExport.AllInstances.NameGet">
            <summary>Legt die Shim von MethodExport.get_Name(MethodExport this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMethodExport.AllInstances.NameSetString">
            <summary>Legt die Shim von MethodExport.set_Name(MethodExport this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMethodExport.AllInstances.PathGet">
            <summary>Legt die Shim von MethodExport.get_Path(MethodExport this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMethodExport.AllInstances.PathSetString">
            <summary>Legt die Shim von MethodExport.set_Path(MethodExport this, String value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimMethodExport.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimMethodExport.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMethodExport.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMethodExport.Constructor">
            <summary>Legt die Shim von MethodExport.MethodExport(MethodExport this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMethodExport.EventNameGet">
            <summary>Legt die Shim von MethodExport.get_EventName(MethodExport this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMethodExport.EventNameSetString">
            <summary>Legt die Shim von MethodExport.set_EventName(MethodExport this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMethodExport.NameGet">
            <summary>Legt die Shim von MethodExport.get_Name(MethodExport this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMethodExport.NameSetString">
            <summary>Legt die Shim von MethodExport.set_Name(MethodExport this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMethodExport.PathGet">
            <summary>Legt die Shim von MethodExport.get_Path(MethodExport this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimMethodExport.PathSetString">
            <summary>Legt die Shim von MethodExport.set_Path(MethodExport this, String value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimRequiredResource">
            <summary>Shim-Typ von GTANetworkInternals.RequiredResource</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimRequiredResource.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimRequiredResource.#ctor(GTANetworkInternals.RequiredResource)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimRequiredResource.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimRequiredResource.AllInstances.ResourceGet">
            <summary>Legt die Shim von RequiredResource.get_Resource(RequiredResource this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimRequiredResource.AllInstances.ResourceSetString">
            <summary>Legt die Shim von RequiredResource.set_Resource(RequiredResource this, String value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimRequiredResource.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimRequiredResource.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimRequiredResource.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimRequiredResource.Constructor">
            <summary>Legt die Shim von RequiredResource.RequiredResource(RequiredResource this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimRequiredResource.ResourceGet">
            <summary>Legt die Shim von RequiredResource.get_Resource(RequiredResource this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimRequiredResource.ResourceSetString">
            <summary>Legt die Shim von RequiredResource.set_Resource(RequiredResource this, String value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimResourceAcl">
            <summary>Shim-Typ von GTANetworkInternals.ResourceAcl</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceAcl.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceAcl.#ctor(GTANetworkInternals.ResourceAcl)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimResourceAcl.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceAcl.AllInstances.PathGet">
            <summary>Legt die Shim von ResourceAcl.get_Path(ResourceAcl this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceAcl.AllInstances.PathSetString">
            <summary>Legt die Shim von ResourceAcl.set_Path(ResourceAcl this, String value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceAcl.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceAcl.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceAcl.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceAcl.Constructor">
            <summary>Legt die Shim von ResourceAcl.ResourceAcl(ResourceAcl this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceAcl.PathGet">
            <summary>Legt die Shim von ResourceAcl.get_Path(ResourceAcl this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceAcl.PathSetString">
            <summary>Legt die Shim von ResourceAcl.set_Path(ResourceAcl this, String value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimResourceConfigFile">
            <summary>Shim-Typ von GTANetworkInternals.ResourceConfigFile</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceConfigFile.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceConfigFile.#ctor(GTANetworkInternals.ResourceConfigFile)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimResourceConfigFile.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceConfigFile.AllInstances.PathGet">
            <summary>Legt die Shim von ResourceConfigFile.get_Path(ResourceConfigFile this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceConfigFile.AllInstances.PathSetString">
            <summary>Legt die Shim von ResourceConfigFile.set_Path(ResourceConfigFile this, String value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceConfigFile.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceConfigFile.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceConfigFile.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceConfigFile.Constructor">
            <summary>Legt die Shim von ResourceConfigFile.ResourceConfigFile(ResourceConfigFile this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceConfigFile.PathGet">
            <summary>Legt die Shim von ResourceConfigFile.get_Path(ResourceConfigFile this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceConfigFile.PathSetString">
            <summary>Legt die Shim von ResourceConfigFile.set_Path(ResourceConfigFile this, String value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimResourceInfo">
            <summary>Shim-Typ von GTANetworkInternals.ResourceInfo</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceInfo.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceInfo.#ctor(GTANetworkInternals.ResourceInfo)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.ConfigFilesGet">
            <summary>Legt die Shim von ResourceInfo.get_ConfigFiles(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.ConfigFilesSetListOfResourceConfigFile">
            <summary>Legt die Shim von ResourceInfo.set_ConfigFiles(ResourceInfo this, List`1 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.ExportedFunctionsGet">
            <summary>Legt die Shim von ResourceInfo.get_ExportedFunctions(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.ExportedFunctionsSetListOfMethodExport">
            <summary>Legt die Shim von ResourceInfo.set_ExportedFunctions(ResourceInfo this, List`1 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.FilesGet">
            <summary>Legt die Shim von ResourceInfo.get_Files(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.FilesSetListOfFilePath">
            <summary>Legt die Shim von ResourceInfo.set_Files(ResourceInfo this, List`1 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.IncludesGet">
            <summary>Legt die Shim von ResourceInfo.get_Includes(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.IncludesSetListOfRequiredResource">
            <summary>Legt die Shim von ResourceInfo.set_Includes(ResourceInfo this, List`1 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.InfoGet">
            <summary>Legt die Shim von ResourceInfo.get_Info(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.InfoSetResourceMetaInfo">
            <summary>Legt die Shim von ResourceInfo.set_Info(ResourceInfo this, ResourceMetaInfo value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.MapGet">
            <summary>Legt die Shim von ResourceInfo.get_Map(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.MapSetMapSource">
            <summary>Legt die Shim von ResourceInfo.set_Map(ResourceInfo this, MapSource value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.ReferencesGet">
            <summary>Legt die Shim von ResourceInfo.get_References(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.ReferencesSetListOfAssemblyReferences">
            <summary>Legt die Shim von ResourceInfo.set_References(ResourceInfo this, List`1 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.ResourceACLGet">
            <summary>Legt die Shim von ResourceInfo.get_ResourceACL(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.ResourceACLSetResourceAcl">
            <summary>Legt die Shim von ResourceInfo.set_ResourceACL(ResourceInfo this, ResourceAcl value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.ScriptsGet">
            <summary>Legt die Shim von ResourceInfo.get_Scripts(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.ScriptsSetListOfResourceScript">
            <summary>Legt die Shim von ResourceInfo.set_Scripts(ResourceInfo this, List`1 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.SettingsMetaGet">
            <summary>Legt die Shim von ResourceInfo.get_SettingsMeta(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.AllInstances.SettingsMetaSetResourceSettingsMeta">
            <summary>Legt die Shim von ResourceInfo.set_SettingsMeta(ResourceInfo this, ResourceSettingsMeta value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceInfo.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceInfo.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.ConfigFilesGet">
            <summary>Legt die Shim von ResourceInfo.get_ConfigFiles(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.ConfigFilesSetListOfResourceConfigFile">
            <summary>Legt die Shim von ResourceInfo.set_ConfigFiles(ResourceInfo this, List`1 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.Constructor">
            <summary>Legt die Shim von ResourceInfo.ResourceInfo(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.ExportedFunctionsGet">
            <summary>Legt die Shim von ResourceInfo.get_ExportedFunctions(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.ExportedFunctionsSetListOfMethodExport">
            <summary>Legt die Shim von ResourceInfo.set_ExportedFunctions(ResourceInfo this, List`1 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.FilesGet">
            <summary>Legt die Shim von ResourceInfo.get_Files(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.FilesSetListOfFilePath">
            <summary>Legt die Shim von ResourceInfo.set_Files(ResourceInfo this, List`1 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.IncludesGet">
            <summary>Legt die Shim von ResourceInfo.get_Includes(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.IncludesSetListOfRequiredResource">
            <summary>Legt die Shim von ResourceInfo.set_Includes(ResourceInfo this, List`1 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.InfoGet">
            <summary>Legt die Shim von ResourceInfo.get_Info(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.InfoSetResourceMetaInfo">
            <summary>Legt die Shim von ResourceInfo.set_Info(ResourceInfo this, ResourceMetaInfo value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.MapGet">
            <summary>Legt die Shim von ResourceInfo.get_Map(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.MapSetMapSource">
            <summary>Legt die Shim von ResourceInfo.set_Map(ResourceInfo this, MapSource value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.ReferencesGet">
            <summary>Legt die Shim von ResourceInfo.get_References(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.ReferencesSetListOfAssemblyReferences">
            <summary>Legt die Shim von ResourceInfo.set_References(ResourceInfo this, List`1 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.ResourceACLGet">
            <summary>Legt die Shim von ResourceInfo.get_ResourceACL(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.ResourceACLSetResourceAcl">
            <summary>Legt die Shim von ResourceInfo.set_ResourceACL(ResourceInfo this, ResourceAcl value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.ScriptsGet">
            <summary>Legt die Shim von ResourceInfo.get_Scripts(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.ScriptsSetListOfResourceScript">
            <summary>Legt die Shim von ResourceInfo.set_Scripts(ResourceInfo this, List`1 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.SettingsMetaGet">
            <summary>Legt die Shim von ResourceInfo.get_SettingsMeta(ResourceInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceInfo.SettingsMetaSetResourceSettingsMeta">
            <summary>Legt die Shim von ResourceInfo.set_SettingsMeta(ResourceInfo this, ResourceSettingsMeta value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimResourceMetaInfo">
            <summary>Shim-Typ von GTANetworkInternals.ResourceMetaInfo</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceMetaInfo.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceMetaInfo.#ctor(GTANetworkInternals.ResourceMetaInfo)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AllInstances.AuthorGet">
            <summary>Legt die Shim von ResourceMetaInfo.get_Author(ResourceMetaInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AllInstances.AuthorSetString">
            <summary>Legt die Shim von ResourceMetaInfo.set_Author(ResourceMetaInfo this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AllInstances.DescriptionGet">
            <summary>Legt die Shim von ResourceMetaInfo.get_Description(ResourceMetaInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AllInstances.DescriptionSetString">
            <summary>Legt die Shim von ResourceMetaInfo.set_Description(ResourceMetaInfo this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AllInstances.GamemodesGet">
            <summary>Legt die Shim von ResourceMetaInfo.get_Gamemodes(ResourceMetaInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AllInstances.GamemodesSetString">
            <summary>Legt die Shim von ResourceMetaInfo.set_Gamemodes(ResourceMetaInfo this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AllInstances.NameGet">
            <summary>Legt die Shim von ResourceMetaInfo.get_Name(ResourceMetaInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AllInstances.NameSetString">
            <summary>Legt die Shim von ResourceMetaInfo.set_Name(ResourceMetaInfo this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AllInstances.ShadowcopyGet">
            <summary>Legt die Shim von ResourceMetaInfo.get_Shadowcopy(ResourceMetaInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AllInstances.ShadowcopySetBoolean">
            <summary>Legt die Shim von ResourceMetaInfo.set_Shadowcopy(ResourceMetaInfo this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AllInstances.TypeGet">
            <summary>Legt die Shim von ResourceMetaInfo.get_Type(ResourceMetaInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AllInstances.TypeSetResourceType">
            <summary>Legt die Shim von ResourceMetaInfo.set_Type(ResourceMetaInfo this, ResourceType value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AllInstances.VersionGet">
            <summary>Legt die Shim von ResourceMetaInfo.get_Version(ResourceMetaInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AllInstances.VersionSetString">
            <summary>Legt die Shim von ResourceMetaInfo.set_Version(ResourceMetaInfo this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AuthorGet">
            <summary>Legt die Shim von ResourceMetaInfo.get_Author(ResourceMetaInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.AuthorSetString">
            <summary>Legt die Shim von ResourceMetaInfo.set_Author(ResourceMetaInfo this, String value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceMetaInfo.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceMetaInfo.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.Constructor">
            <summary>Legt die Shim von ResourceMetaInfo.ResourceMetaInfo(ResourceMetaInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.DescriptionGet">
            <summary>Legt die Shim von ResourceMetaInfo.get_Description(ResourceMetaInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.DescriptionSetString">
            <summary>Legt die Shim von ResourceMetaInfo.set_Description(ResourceMetaInfo this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.GamemodesGet">
            <summary>Legt die Shim von ResourceMetaInfo.get_Gamemodes(ResourceMetaInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.GamemodesSetString">
            <summary>Legt die Shim von ResourceMetaInfo.set_Gamemodes(ResourceMetaInfo this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.NameGet">
            <summary>Legt die Shim von ResourceMetaInfo.get_Name(ResourceMetaInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.NameSetString">
            <summary>Legt die Shim von ResourceMetaInfo.set_Name(ResourceMetaInfo this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.ShadowcopyGet">
            <summary>Legt die Shim von ResourceMetaInfo.get_Shadowcopy(ResourceMetaInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.ShadowcopySetBoolean">
            <summary>Legt die Shim von ResourceMetaInfo.set_Shadowcopy(ResourceMetaInfo this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.TypeGet">
            <summary>Legt die Shim von ResourceMetaInfo.get_Type(ResourceMetaInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.TypeSetResourceType">
            <summary>Legt die Shim von ResourceMetaInfo.set_Type(ResourceMetaInfo this, ResourceType value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.VersionGet">
            <summary>Legt die Shim von ResourceMetaInfo.get_Version(ResourceMetaInfo this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceMetaInfo.VersionSetString">
            <summary>Legt die Shim von ResourceMetaInfo.set_Version(ResourceMetaInfo this, String value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimResourceScript">
            <summary>Shim-Typ von GTANetworkInternals.ResourceScript</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceScript.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceScript.#ctor(GTANetworkInternals.ResourceScript)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimResourceScript.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceScript.AllInstances.PathGet">
            <summary>Legt die Shim von ResourceScript.get_Path(ResourceScript this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceScript.AllInstances.PathSetString">
            <summary>Legt die Shim von ResourceScript.set_Path(ResourceScript this, String value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceScript.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceScript.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceScript.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceScript.Constructor">
            <summary>Legt die Shim von ResourceScript.ResourceScript(ResourceScript this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceScript.PathGet">
            <summary>Legt die Shim von ResourceScript.get_Path(ResourceScript this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceScript.PathSetString">
            <summary>Legt die Shim von ResourceScript.set_Path(ResourceScript this, String value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimResourceSettingsFile">
            <summary>Shim-Typ von GTANetworkInternals.ResourceSettingsFile</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceSettingsFile.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceSettingsFile.#ctor(GTANetworkInternals.ResourceSettingsFile)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimResourceSettingsFile.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceSettingsFile.AllInstances.SettingsGet">
            <summary>Legt die Shim von ResourceSettingsFile.get_Settings(ResourceSettingsFile this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceSettingsFile.AllInstances.SettingsSetListOfMetaSetting">
            <summary>Legt die Shim von ResourceSettingsFile.set_Settings(ResourceSettingsFile this, List`1 value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceSettingsFile.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceSettingsFile.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceSettingsFile.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceSettingsFile.Constructor">
            <summary>Legt die Shim von ResourceSettingsFile.ResourceSettingsFile(ResourceSettingsFile this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceSettingsFile.SettingsGet">
            <summary>Legt die Shim von ResourceSettingsFile.get_Settings(ResourceSettingsFile this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceSettingsFile.SettingsSetListOfMetaSetting">
            <summary>Legt die Shim von ResourceSettingsFile.set_Settings(ResourceSettingsFile this, List`1 value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimResourceSettingsMeta">
            <summary>Shim-Typ von GTANetworkInternals.ResourceSettingsMeta</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceSettingsMeta.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceSettingsMeta.#ctor(GTANetworkInternals.ResourceSettingsMeta)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimResourceSettingsMeta.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceSettingsMeta.AllInstances.PathGet">
            <summary>Legt die Shim von ResourceSettingsMeta.get_Path(ResourceSettingsMeta this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceSettingsMeta.AllInstances.PathSetString">
            <summary>Legt die Shim von ResourceSettingsMeta.set_Path(ResourceSettingsMeta this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceSettingsMeta.AllInstances.SettingsGet">
            <summary>Legt die Shim von ResourceSettingsMeta.get_Settings(ResourceSettingsMeta this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceSettingsMeta.AllInstances.SettingsSetListOfMetaSetting">
            <summary>Legt die Shim von ResourceSettingsMeta.set_Settings(ResourceSettingsMeta this, List`1 value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceSettingsMeta.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimResourceSettingsMeta.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceSettingsMeta.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceSettingsMeta.Constructor">
            <summary>Legt die Shim von ResourceSettingsMeta.ResourceSettingsMeta(ResourceSettingsMeta this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceSettingsMeta.PathGet">
            <summary>Legt die Shim von ResourceSettingsMeta.get_Path(ResourceSettingsMeta this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceSettingsMeta.PathSetString">
            <summary>Legt die Shim von ResourceSettingsMeta.set_Path(ResourceSettingsMeta this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceSettingsMeta.SettingsGet">
            <summary>Legt die Shim von ResourceSettingsMeta.get_Settings(ResourceSettingsMeta this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimResourceSettingsMeta.SettingsSetListOfMetaSetting">
            <summary>Legt die Shim von ResourceSettingsMeta.set_Settings(ResourceSettingsMeta this, List`1 value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimSettings">
            <summary>Shim-Typ von GTANetworkInternals.Settings</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimSettings.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimSettings.#ctor(GTANetworkInternals.Settings)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimSettings.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.AllInstances.LogChatGet">
            <summary>Legt die Shim von Settings.get_LogChat(Settings this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.AllInstances.LogChatSetBoolean">
            <summary>Legt die Shim von Settings.set_LogChat(Settings this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.AllInstances.LogsGet">
            <summary>Legt die Shim von Settings.get_Logs(Settings this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.AllInstances.LogsSetBoolean">
            <summary>Legt die Shim von Settings.set_Logs(Settings this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.AllInstances.ResourcesGet">
            <summary>Legt die Shim von Settings.get_Resources(Settings this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.AllInstances.ResourcesSetListOfSettingsSettingsResFilepath">
            <summary>Legt die Shim von Settings.set_Resources(Settings this, List`1 value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.AllInstances.UseACLGet">
            <summary>Legt die Shim von Settings.get_UseACL(Settings this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.AllInstances.UseACLSetBoolean">
            <summary>Legt die Shim von Settings.set_UseACL(Settings this, Boolean value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimSettings.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimSettings.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.Constructor">
            <summary>Legt die Shim von Settings.Settings(Settings this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.LogChatGet">
            <summary>Legt die Shim von Settings.get_LogChat(Settings this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.LogChatSetBoolean">
            <summary>Legt die Shim von Settings.set_LogChat(Settings this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.LogsGet">
            <summary>Legt die Shim von Settings.get_Logs(Settings this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.LogsSetBoolean">
            <summary>Legt die Shim von Settings.set_Logs(Settings this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.ReadSettingsString">
            <summary>Legt die Shim von Settings.ReadSettings(String path) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.ResourcesGet">
            <summary>Legt die Shim von Settings.get_Resources(Settings this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.ResourcesSetListOfSettingsSettingsResFilepath">
            <summary>Legt die Shim von Settings.set_Resources(Settings this, List`1 value) fest.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimSettings.ShimSettingsResFilepath">
            <summary>Shim-Typ von GTANetworkInternals.Settings.SettingsResFilepath</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimSettings.ShimSettingsResFilepath.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimSettings.ShimSettingsResFilepath.#ctor(GTANetworkInternals.Settings.SettingsResFilepath)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkInternals.Fakes.ShimSettings.ShimSettingsResFilepath.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.ShimSettingsResFilepath.AllInstances.PathGet">
            <summary>Legt die Shim von SettingsResFilepath.get_Path(SettingsResFilepath this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.ShimSettingsResFilepath.AllInstances.PathSetString">
            <summary>Legt die Shim von SettingsResFilepath.set_Path(SettingsResFilepath this, String value) fest.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimSettings.ShimSettingsResFilepath.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkInternals.Fakes.ShimSettings.ShimSettingsResFilepath.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.ShimSettingsResFilepath.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.ShimSettingsResFilepath.Constructor">
            <summary>Legt die Shim von SettingsResFilepath.SettingsResFilepath(SettingsResFilepath this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.ShimSettingsResFilepath.PathGet">
            <summary>Legt die Shim von SettingsResFilepath.get_Path(SettingsResFilepath this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.ShimSettingsResFilepath.PathSetString">
            <summary>Legt die Shim von SettingsResFilepath.set_Path(SettingsResFilepath this, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.UseACLGet">
            <summary>Legt die Shim von Settings.get_UseACL(Settings this) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.UseACLSetBoolean">
            <summary>Legt die Shim von Settings.set_UseACL(Settings this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkInternals.Fakes.ShimSettings.WriteSettingsStringSettings">
            <summary>Legt die Shim von Settings.WriteSettings(String path, Settings sett) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimACL">
            <summary>Shim-Typ von GTANetworkMethods.ACL</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimACL.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimACL.#ctor(GTANetworkMethods.ACL)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimACL.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimACL.AllInstances.DoesPlayerHaveAccessToCommandPlayerString">
            <summary>Legt die Shim von ACL.DoesPlayerHaveAccessToCommand(ACL this, Player player, String cmd) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimACL.AllInstances.GetPlayerAclGroupPlayer">
            <summary>Legt die Shim von ACL.GetPlayerAclGroup(ACL this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimACL.AllInstances.IsAclEnabled">
            <summary>Legt die Shim von ACL.IsAclEnabled(ACL this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimACL.AllInstances.IsPlayerLoggedInPlayer">
            <summary>Legt die Shim von ACL.IsPlayerLoggedIn(ACL this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimACL.AllInstances.LoginPlayerPlayerString">
            <summary>Legt die Shim von ACL.LoginPlayer(ACL this, Player player, String password) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimACL.AllInstances.LogoutPlayerPlayer">
            <summary>Legt die Shim von ACL.LogoutPlayer(ACL this, Player player) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimACL.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimACL.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimACL.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimACL.Bind(GTANetworkMethods.IACL)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimACL.Constructor">
            <summary>Legt die Shim von ACL.ACL(ACL this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimACL.DoesPlayerHaveAccessToCommandPlayerString">
            <summary>Legt die Shim von ACL.DoesPlayerHaveAccessToCommand(ACL this, Player player, String cmd) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimACL.GetPlayerAclGroupPlayer">
            <summary>Legt die Shim von ACL.GetPlayerAclGroup(ACL this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimACL.IsAclEnabled">
            <summary>Legt die Shim von ACL.IsAclEnabled(ACL this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimACL.IsPlayerLoggedInPlayer">
            <summary>Legt die Shim von ACL.IsPlayerLoggedIn(ACL this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimACL.LoginPlayerPlayerString">
            <summary>Legt die Shim von ACL.LoginPlayer(ACL this, Player player, String password) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimACL.LogoutPlayerPlayer">
            <summary>Legt die Shim von ACL.LogoutPlayer(ACL this, Player player) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimBlip">
            <summary>Shim-Typ von GTANetworkMethods.Blip</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimBlip.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimBlip.#ctor(GTANetworkMethods.Blip)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimBlip.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.CreateBlipInt32Vector3SingleByteStringByteSingleBooleanInt16UInt32">
            <summary>Legt die Shim von Blip.CreateBlip(Blip this, Int32 sprite, Vector3 position, Single scale, Byte color, String name, Byte alpha, Single drawDistance, Boolean shortRange, Int16 rotation, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.CreateBlipNetHandle">
            <summary>Legt die Shim von Blip.CreateBlip(Blip this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.CreateBlipUInt32Vector3SingleByteStringByteSingleBooleanInt16UInt32">
            <summary>Legt die Shim von Blip.CreateBlip(Blip this, UInt32 sprite, Vector3 position, Single scale, Byte color, String name, Byte alpha, Single drawDistance, Boolean shortRange, Int16 rotation, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.CreateBlipVector3SingleUInt32">
            <summary>Legt die Shim von Blip.CreateBlip(Blip this, Vector3 pos, Single range, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.CreateBlipVector3UInt32">
            <summary>Legt die Shim von Blip.CreateBlip(Blip this, Vector3 pos, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.GetBlipColorNetHandle">
            <summary>Legt die Shim von Blip.GetBlipColor(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.GetBlipNameNetHandle">
            <summary>Legt die Shim von Blip.GetBlipName(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.GetBlipPositionNetHandle">
            <summary>Legt die Shim von Blip.GetBlipPosition(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.GetBlipRouteColorNetHandle">
            <summary>Legt die Shim von Blip.GetBlipRouteColor(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.GetBlipRouteVisibleNetHandle">
            <summary>Legt die Shim von Blip.GetBlipRouteVisible(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.GetBlipScaleNetHandle">
            <summary>Legt die Shim von Blip.GetBlipScale(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.GetBlipShortRangeNetHandle">
            <summary>Legt die Shim von Blip.GetBlipShortRange(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.GetBlipSpriteNetHandle">
            <summary>Legt die Shim von Blip.GetBlipSprite(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.GetBlipTransparencyNetHandle">
            <summary>Legt die Shim von Blip.GetBlipTransparency(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.SetBlipColorNetHandleInt32">
            <summary>Legt die Shim von Blip.SetBlipColor(Blip this, NetHandle blip, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.SetBlipNameNetHandleString">
            <summary>Legt die Shim von Blip.SetBlipName(Blip this, NetHandle blip, String name) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.SetBlipPositionNetHandleVector3">
            <summary>Legt die Shim von Blip.SetBlipPosition(Blip this, NetHandle blip, Vector3 newPos) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.SetBlipRouteColorNetHandleInt32">
            <summary>Legt die Shim von Blip.SetBlipRouteColor(Blip this, NetHandle blip, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.SetBlipRouteVisibleNetHandleBoolean">
            <summary>Legt die Shim von Blip.SetBlipRouteVisible(Blip this, NetHandle blip, Boolean visible) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.SetBlipScaleNetHandleSingle">
            <summary>Legt die Shim von Blip.SetBlipScale(Blip this, NetHandle blip, Single scale) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.SetBlipShortRangeNetHandleBoolean">
            <summary>Legt die Shim von Blip.SetBlipShortRange(Blip this, NetHandle blip, Boolean range) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.SetBlipSpriteNetHandleInt32">
            <summary>Legt die Shim von Blip.SetBlipSprite(Blip this, NetHandle blip, Int32 sprite) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.SetBlipSpriteNetHandleUInt32">
            <summary>Legt die Shim von Blip.SetBlipSprite(Blip this, NetHandle blip, UInt32 sprite) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.AllInstances.SetBlipTransparencyNetHandleInt32">
            <summary>Legt die Shim von Blip.SetBlipTransparency(Blip this, NetHandle blip, Int32 alpha) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimBlip.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimBlip.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimBlip.Bind(GTANetworkMethods.IBlip)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.Constructor">
            <summary>Legt die Shim von Blip.Blip(Blip this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.CreateBlipInt32Vector3SingleByteStringByteSingleBooleanInt16UInt32">
            <summary>Legt die Shim von Blip.CreateBlip(Blip this, Int32 sprite, Vector3 position, Single scale, Byte color, String name, Byte alpha, Single drawDistance, Boolean shortRange, Int16 rotation, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.CreateBlipNetHandle">
            <summary>Legt die Shim von Blip.CreateBlip(Blip this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.CreateBlipUInt32Vector3SingleByteStringByteSingleBooleanInt16UInt32">
            <summary>Legt die Shim von Blip.CreateBlip(Blip this, UInt32 sprite, Vector3 position, Single scale, Byte color, String name, Byte alpha, Single drawDistance, Boolean shortRange, Int16 rotation, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.CreateBlipVector3SingleUInt32">
            <summary>Legt die Shim von Blip.CreateBlip(Blip this, Vector3 pos, Single range, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.CreateBlipVector3UInt32">
            <summary>Legt die Shim von Blip.CreateBlip(Blip this, Vector3 pos, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.GetBlipColorNetHandle">
            <summary>Legt die Shim von Blip.GetBlipColor(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.GetBlipNameNetHandle">
            <summary>Legt die Shim von Blip.GetBlipName(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.GetBlipPositionNetHandle">
            <summary>Legt die Shim von Blip.GetBlipPosition(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.GetBlipRouteColorNetHandle">
            <summary>Legt die Shim von Blip.GetBlipRouteColor(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.GetBlipRouteVisibleNetHandle">
            <summary>Legt die Shim von Blip.GetBlipRouteVisible(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.GetBlipScaleNetHandle">
            <summary>Legt die Shim von Blip.GetBlipScale(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.GetBlipShortRangeNetHandle">
            <summary>Legt die Shim von Blip.GetBlipShortRange(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.GetBlipSpriteNetHandle">
            <summary>Legt die Shim von Blip.GetBlipSprite(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.GetBlipTransparencyNetHandle">
            <summary>Legt die Shim von Blip.GetBlipTransparency(Blip this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.SetBlipColorNetHandleInt32">
            <summary>Legt die Shim von Blip.SetBlipColor(Blip this, NetHandle blip, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.SetBlipNameNetHandleString">
            <summary>Legt die Shim von Blip.SetBlipName(Blip this, NetHandle blip, String name) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.SetBlipPositionNetHandleVector3">
            <summary>Legt die Shim von Blip.SetBlipPosition(Blip this, NetHandle blip, Vector3 newPos) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.SetBlipRouteColorNetHandleInt32">
            <summary>Legt die Shim von Blip.SetBlipRouteColor(Blip this, NetHandle blip, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.SetBlipRouteVisibleNetHandleBoolean">
            <summary>Legt die Shim von Blip.SetBlipRouteVisible(Blip this, NetHandle blip, Boolean visible) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.SetBlipScaleNetHandleSingle">
            <summary>Legt die Shim von Blip.SetBlipScale(Blip this, NetHandle blip, Single scale) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.SetBlipShortRangeNetHandleBoolean">
            <summary>Legt die Shim von Blip.SetBlipShortRange(Blip this, NetHandle blip, Boolean range) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.SetBlipSpriteNetHandleInt32">
            <summary>Legt die Shim von Blip.SetBlipSprite(Blip this, NetHandle blip, Int32 sprite) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.SetBlipSpriteNetHandleUInt32">
            <summary>Legt die Shim von Blip.SetBlipSprite(Blip this, NetHandle blip, UInt32 sprite) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimBlip.SetBlipTransparencyNetHandleInt32">
            <summary>Legt die Shim von Blip.SetBlipTransparency(Blip this, NetHandle blip, Int32 alpha) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimChat">
            <summary>Shim-Typ von GTANetworkMethods.Chat</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimChat.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimChat.#ctor(GTANetworkMethods.Chat)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimChat.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimChat.AllInstances.ConvertToNewColorsString">
            <summary>Legt die Shim von Chat.ConvertToNewColors(Chat this, String text) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimChat.AllInstances.SendChatMessageToAllStringBoolean">
            <summary>Legt die Shim von Chat.SendChatMessageToAll(Chat this, String message, Boolean oldColors) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimChat.AllInstances.SendChatMessageToAllStringStringBoolean">
            <summary>Legt die Shim von Chat.SendChatMessageToAll(Chat this, String sender, String message, Boolean oldColors) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimChat.AllInstances.SendChatMessageToPlayerPlayerStringBoolean">
            <summary>Legt die Shim von Chat.SendChatMessageToPlayer(Chat this, Player player, String message, Boolean oldColors) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimChat.AllInstances.SendChatMessageToPlayerPlayerStringStringBoolean">
            <summary>Legt die Shim von Chat.SendChatMessageToPlayer(Chat this, Player player, String sender, String message, Boolean oldColors) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimChat.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimChat.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimChat.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimChat.Bind(GTANetworkMethods.IChat)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimChat.Constructor">
            <summary>Legt die Shim von Chat.Chat(Chat this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimChat.ConvertToNewColorsString">
            <summary>Legt die Shim von Chat.ConvertToNewColors(Chat this, String text) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimChat.SendChatMessageToAllStringBoolean">
            <summary>Legt die Shim von Chat.SendChatMessageToAll(Chat this, String message, Boolean oldColors) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimChat.SendChatMessageToAllStringStringBoolean">
            <summary>Legt die Shim von Chat.SendChatMessageToAll(Chat this, String sender, String message, Boolean oldColors) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimChat.SendChatMessageToPlayerPlayerStringBoolean">
            <summary>Legt die Shim von Chat.SendChatMessageToPlayer(Chat this, Player player, String message, Boolean oldColors) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimChat.SendChatMessageToPlayerPlayerStringStringBoolean">
            <summary>Legt die Shim von Chat.SendChatMessageToPlayer(Chat this, Player player, String sender, String message, Boolean oldColors) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimCheckpoint">
            <summary>Shim-Typ von GTANetworkMethods.Checkpoint</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimCheckpoint.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimCheckpoint.#ctor(GTANetworkMethods.Checkpoint)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimCheckpoint.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.AllInstances.CreateCheckpointCheckpointTypeVector3Vector3SingleColorUInt32">
            <summary>Legt die Shim von Checkpoint.CreateCheckpoint(Checkpoint this, CheckpointType model, Vector3 pos, Vector3 dir, Single scale, Color color, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.AllInstances.CreateCheckpointInt32Vector3Vector3SingleColorUInt32">
            <summary>Legt die Shim von Checkpoint.CreateCheckpoint(Checkpoint this, Int32 model, Vector3 pos, Vector3 dir, Single scale, Color color, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.AllInstances.CreateCheckpointUInt32Vector3Vector3SingleColorUInt32">
            <summary>Legt die Shim von Checkpoint.CreateCheckpoint(Checkpoint this, UInt32 model, Vector3 pos, Vector3 dir, Single scale, Color color, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.AllInstances.GetCheckpointColorNetHandle">
            <summary>Legt die Shim von Checkpoint.GetCheckpointColor(Checkpoint this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.AllInstances.GetCheckpointDirectionNetHandle">
            <summary>Legt die Shim von Checkpoint.GetCheckpointDirection(Checkpoint this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.AllInstances.GetCheckpointScaleNetHandle">
            <summary>Legt die Shim von Checkpoint.GetCheckpointScale(Checkpoint this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.AllInstances.SetCheckpointColorNetHandleInt32Int32Int32Int32">
            <summary>Legt die Shim von Checkpoint.SetCheckpointColor(Checkpoint this, NetHandle marker, Int32 alpha, Int32 red, Int32 green, Int32 blue) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.AllInstances.SetCheckpointDirectionNetHandleVector3">
            <summary>Legt die Shim von Checkpoint.SetCheckpointDirection(Checkpoint this, NetHandle marker, Vector3 dir) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.AllInstances.SetCheckpointScaleNetHandleSingle">
            <summary>Legt die Shim von Checkpoint.SetCheckpointScale(Checkpoint this, NetHandle marker, Single scale) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimCheckpoint.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimCheckpoint.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimCheckpoint.Bind(GTANetworkMethods.ICheckpoint)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.Constructor">
            <summary>Legt die Shim von Checkpoint.Checkpoint(Checkpoint this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.CreateCheckpointCheckpointTypeVector3Vector3SingleColorUInt32">
            <summary>Legt die Shim von Checkpoint.CreateCheckpoint(Checkpoint this, CheckpointType model, Vector3 pos, Vector3 dir, Single scale, Color color, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.CreateCheckpointInt32Vector3Vector3SingleColorUInt32">
            <summary>Legt die Shim von Checkpoint.CreateCheckpoint(Checkpoint this, Int32 model, Vector3 pos, Vector3 dir, Single scale, Color color, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.CreateCheckpointUInt32Vector3Vector3SingleColorUInt32">
            <summary>Legt die Shim von Checkpoint.CreateCheckpoint(Checkpoint this, UInt32 model, Vector3 pos, Vector3 dir, Single scale, Color color, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.GetCheckpointColorNetHandle">
            <summary>Legt die Shim von Checkpoint.GetCheckpointColor(Checkpoint this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.GetCheckpointDirectionNetHandle">
            <summary>Legt die Shim von Checkpoint.GetCheckpointDirection(Checkpoint this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.GetCheckpointScaleNetHandle">
            <summary>Legt die Shim von Checkpoint.GetCheckpointScale(Checkpoint this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.SetCheckpointColorNetHandleInt32Int32Int32Int32">
            <summary>Legt die Shim von Checkpoint.SetCheckpointColor(Checkpoint this, NetHandle marker, Int32 alpha, Int32 red, Int32 green, Int32 blue) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.SetCheckpointDirectionNetHandleVector3">
            <summary>Legt die Shim von Checkpoint.SetCheckpointDirection(Checkpoint this, NetHandle marker, Vector3 dir) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCheckpoint.SetCheckpointScaleNetHandleSingle">
            <summary>Legt die Shim von Checkpoint.SetCheckpointScale(Checkpoint this, NetHandle marker, Single scale) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimClean">
            <summary>Shim-Typ von GTANetworkMethods.Clean</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClean.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClean.#ctor(GTANetworkMethods.Clean)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimClean.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClean.AllInstances.EqualsObject">
            <summary>Legt die Shim von Clean.Equals(Clean this, Object obj) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClean.AllInstances.GetHashCode01">
            <summary>Legt die Shim von Clean.GetHashCode(Clean this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClean.AllInstances.GetType01">
            <summary>Legt die Shim von Clean.GetType(Clean this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClean.AllInstances.ToString01">
            <summary>Legt die Shim von Clean.ToString(Clean this) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClean.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClean.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClean.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClean.Constructor">
            <summary>Legt die Shim von Clean.Clean(Clean this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClean.EqualsObject">
            <summary>Legt die Shim von Clean.Equals(Clean this, Object obj) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClean.GetHashCode">
            <summary>Legt die Shim von Clean.GetHashCode(Clean this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClean.GetType">
            <summary>Legt die Shim von Clean.GetType(Clean this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClean.ToString">
            <summary>Legt die Shim von Clean.ToString(Clean this) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimClientEvent">
            <summary>Shim-Typ von GTANetworkMethods.ClientEvent</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClientEvent.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClientEvent.#ctor(GTANetworkMethods.ClientEvent)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.CancelPendingRpcPlayer">
            <summary>Legt die Shim von ClientEvent.CancelPendingRpc(ClientEvent this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.CancelPendingRpcPlayerString">
            <summary>Legt die Shim von ClientEvent.CancelPendingRpc(ClientEvent this, Player player, String eventName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.HasPendingRpcPlayer">
            <summary>Legt die Shim von ClientEvent.HasPendingRpc(ClientEvent this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.HasPendingRpcPlayerString">
            <summary>Legt die Shim von ClientEvent.HasPendingRpc(ClientEvent this, Player player, String eventName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.RegisterMethodInfoStringObject">
            <summary>Legt die Shim von ClientEvent.Register(ClientEvent this, MethodInfo method, String eventName, Object classInstance) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.RegisterProcMethodInfoStringObjectBoolean">
            <summary>Legt die Shim von ClientEvent.RegisterProc(ClientEvent this, MethodInfo method, String eventName, Object classInstance, Boolean async) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.TriggerClientEventForAllRelStringBooleanObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventForAllRel(ClientEvent this, String eventName, Boolean reliable, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.TriggerClientEventForAllStringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventForAll(ClientEvent this, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.TriggerClientEventForAllUnreliableStringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventForAllUnreliable(ClientEvent this, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.TriggerClientEventInDimensionUInt32StringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventInDimension(ClientEvent this, UInt32 dimension, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.TriggerClientEventInRangeVector3SingleStringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventInRange(ClientEvent this, Vector3 pos, Single range, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.TriggerClientEventPlayerStringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEvent(ClientEvent this, Player player, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.TriggerClientEventRelPlayerStringBooleanObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventRel(ClientEvent this, Player player, String eventName, Boolean reliable, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.TriggerClientEventToPlayersPlayerArrayStringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventToPlayers(ClientEvent this, Player[] players, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.TriggerClientEventToPlayersRelPlayerArrayStringBooleanObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventToPlayersRel(ClientEvent this, Player[] players, String eventName, Boolean reliable, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.TriggerClientEventToPlayersUnreliablePlayerArrayStringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventToPlayersUnreliable(ClientEvent this, Player[] players, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.TriggerClientEventUnreliablePlayerStringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventUnreliable(ClientEvent this, Player player, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.TriggerClientProcPlayerStringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientProc(ClientEvent this, Player player, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.UnregisterProcString">
            <summary>Legt die Shim von ClientEvent.UnregisterProc(ClientEvent this, String eventName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.AllInstances.UnregisterString">
            <summary>Legt die Shim von ClientEvent.Unregister(ClientEvent this, String eventName) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClientEvent.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClientEvent.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClientEvent.Bind(GTANetworkMethods.IClientEvent)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.CancelPendingRpcPlayer">
            <summary>Legt die Shim von ClientEvent.CancelPendingRpc(ClientEvent this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.CancelPendingRpcPlayerString">
            <summary>Legt die Shim von ClientEvent.CancelPendingRpc(ClientEvent this, Player player, String eventName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.Constructor">
            <summary>Legt die Shim von ClientEvent.ClientEvent(ClientEvent this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.HasPendingRpcPlayer">
            <summary>Legt die Shim von ClientEvent.HasPendingRpc(ClientEvent this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.HasPendingRpcPlayerString">
            <summary>Legt die Shim von ClientEvent.HasPendingRpc(ClientEvent this, Player player, String eventName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.RegisterMethodInfoStringObject">
            <summary>Legt die Shim von ClientEvent.Register(ClientEvent this, MethodInfo method, String eventName, Object classInstance) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.RegisterProcMethodInfoStringObjectBoolean">
            <summary>Legt die Shim von ClientEvent.RegisterProc(ClientEvent this, MethodInfo method, String eventName, Object classInstance, Boolean async) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.TriggerClientEventForAllRelStringBooleanObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventForAllRel(ClientEvent this, String eventName, Boolean reliable, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.TriggerClientEventForAllStringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventForAll(ClientEvent this, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.TriggerClientEventForAllUnreliableStringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventForAllUnreliable(ClientEvent this, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.TriggerClientEventInDimensionUInt32StringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventInDimension(ClientEvent this, UInt32 dimension, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.TriggerClientEventInRangeVector3SingleStringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventInRange(ClientEvent this, Vector3 pos, Single range, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.TriggerClientEventPlayerStringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEvent(ClientEvent this, Player player, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.TriggerClientEventRelPlayerStringBooleanObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventRel(ClientEvent this, Player player, String eventName, Boolean reliable, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.TriggerClientEventToPlayersPlayerArrayStringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventToPlayers(ClientEvent this, Player[] players, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.TriggerClientEventToPlayersRelPlayerArrayStringBooleanObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventToPlayersRel(ClientEvent this, Player[] players, String eventName, Boolean reliable, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.TriggerClientEventToPlayersUnreliablePlayerArrayStringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventToPlayersUnreliable(ClientEvent this, Player[] players, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.TriggerClientEventUnreliablePlayerStringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientEventUnreliable(ClientEvent this, Player player, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.TriggerClientProcPlayerStringObjectArray">
            <summary>Legt die Shim von ClientEvent.TriggerClientProc(ClientEvent this, Player player, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.UnregisterProcString">
            <summary>Legt die Shim von ClientEvent.UnregisterProc(ClientEvent this, String eventName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEvent.UnregisterString">
            <summary>Legt die Shim von ClientEvent.Unregister(ClientEvent this, String eventName) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimClientEventResponse">
            <summary>Shim-Typ von GTANetworkMethods.ClientEventResponse</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClientEventResponse.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClientEventResponse.#ctor(GTANetworkMethods.ClientEventResponse)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimClientEventResponse.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEventResponse.AllInstances.BeginInvokeObjectArrayAsyncCallbackObject">
            <summary>Legt die Shim von ClientEventResponse.BeginInvoke(ClientEventResponse this, Object[] args, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEventResponse.AllInstances.EndInvokeIAsyncResult">
            <summary>Legt die Shim von ClientEventResponse.EndInvoke(ClientEventResponse this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEventResponse.AllInstances.InvokeObjectArray">
            <summary>Legt die Shim von ClientEventResponse.Invoke(ClientEventResponse this, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEventResponse.BeginInvokeObjectArrayAsyncCallbackObject">
            <summary>Legt die Shim von ClientEventResponse.BeginInvoke(ClientEventResponse this, Object[] args, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClientEventResponse.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClientEventResponse.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEventResponse.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClientEventResponse.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClientEventResponse.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEventResponse.ConstructorObjectIntPtr">
            <summary>Legt die Shim von ClientEventResponse.ClientEventResponse(ClientEventResponse this, Object object, IntPtr method) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEventResponse.EndInvokeIAsyncResult">
            <summary>Legt die Shim von ClientEventResponse.EndInvoke(ClientEventResponse this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEventResponse.InvokeObjectArray">
            <summary>Legt die Shim von ClientEventResponse.Invoke(ClientEventResponse this, Object[] args) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimClientEventThreadSafe">
            <summary>Shim-Typ von GTANetworkMethods.ClientEventThreadSafe</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClientEventThreadSafe.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClientEventThreadSafe.#ctor(GTANetworkMethods.ClientEventThreadSafe)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimClientEventThreadSafe.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEventThreadSafe.AllInstances.TriggerClientEventForAllStringObjectArray">
            <summary>Legt die Shim von ClientEventThreadSafe.TriggerClientEventForAll(ClientEventThreadSafe this, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEventThreadSafe.AllInstances.TriggerClientEventNetHandleStringObjectArray">
            <summary>Legt die Shim von ClientEventThreadSafe.TriggerClientEvent(ClientEventThreadSafe this, NetHandle player, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEventThreadSafe.AllInstances.TriggerClientEventToPlayersNetHandleArrayStringObjectArray">
            <summary>Legt die Shim von ClientEventThreadSafe.TriggerClientEventToPlayers(ClientEventThreadSafe this, NetHandle[] players, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClientEventThreadSafe.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClientEventThreadSafe.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEventThreadSafe.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimClientEventThreadSafe.Bind(GTANetworkMethods.IClientEventThreadSafe)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEventThreadSafe.Constructor">
            <summary>Legt die Shim von ClientEventThreadSafe.ClientEventThreadSafe(ClientEventThreadSafe this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEventThreadSafe.TriggerClientEventForAllStringObjectArray">
            <summary>Legt die Shim von ClientEventThreadSafe.TriggerClientEventForAll(ClientEventThreadSafe this, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEventThreadSafe.TriggerClientEventNetHandleStringObjectArray">
            <summary>Legt die Shim von ClientEventThreadSafe.TriggerClientEvent(ClientEventThreadSafe this, NetHandle player, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimClientEventThreadSafe.TriggerClientEventToPlayersNetHandleArrayStringObjectArray">
            <summary>Legt die Shim von ClientEventThreadSafe.TriggerClientEventToPlayers(ClientEventThreadSafe this, NetHandle[] players, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimColShape">
            <summary>Shim-Typ von GTANetworkMethods.ColShape</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimColShape.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimColShape.#ctor(GTANetworkMethods.ColShape)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimColShape.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimColShape.AllInstances.CreatCircleColShapeSingleSingleSingleUInt32">
            <summary>Legt die Shim von ColShape.CreatCircleColShape(ColShape this, Single x, Single y, Single range, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimColShape.AllInstances.Create2DColShapeSingleSingleSingleSingleUInt32">
            <summary>Legt die Shim von ColShape.Create2DColShape(ColShape this, Single x, Single y, Single width, Single height, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimColShape.AllInstances.Create3DColShapeVector3Vector3UInt32">
            <summary>Legt die Shim von ColShape.Create3DColShape(ColShape this, Vector3 start, Vector3 end, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimColShape.AllInstances.CreateCylinderColShapeVector3SingleSingleUInt32">
            <summary>Legt die Shim von ColShape.CreateCylinderColShape(ColShape this, Vector3 position, Single range, Single height, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimColShape.AllInstances.CreateSphereColShapeVector3SingleUInt32">
            <summary>Legt die Shim von ColShape.CreateSphereColShape(ColShape this, Vector3 position, Single range, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimColShape.AllInstances.DeleteColShapeColShape">
            <summary>Legt die Shim von ColShape.DeleteColShape(ColShape this, ColShape shape) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimColShape.AllInstances.IsPointWithinColshapeColShapeVector3">
            <summary>Legt die Shim von ColShape.IsPointWithinColshape(ColShape this, ColShape shape, Vector3 point) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimColShape.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimColShape.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimColShape.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimColShape.Bind(GTANetworkMethods.IColShape)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimColShape.Constructor">
            <summary>Legt die Shim von ColShape.ColShape(ColShape this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimColShape.CreatCircleColShapeSingleSingleSingleUInt32">
            <summary>Legt die Shim von ColShape.CreatCircleColShape(ColShape this, Single x, Single y, Single range, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimColShape.Create2DColShapeSingleSingleSingleSingleUInt32">
            <summary>Legt die Shim von ColShape.Create2DColShape(ColShape this, Single x, Single y, Single width, Single height, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimColShape.Create3DColShapeVector3Vector3UInt32">
            <summary>Legt die Shim von ColShape.Create3DColShape(ColShape this, Vector3 start, Vector3 end, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimColShape.CreateCylinderColShapeVector3SingleSingleUInt32">
            <summary>Legt die Shim von ColShape.CreateCylinderColShape(ColShape this, Vector3 position, Single range, Single height, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimColShape.CreateSphereColShapeVector3SingleUInt32">
            <summary>Legt die Shim von ColShape.CreateSphereColShape(ColShape this, Vector3 position, Single range, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimColShape.DeleteColShapeColShape">
            <summary>Legt die Shim von ColShape.DeleteColShape(ColShape this, ColShape shape) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimColShape.IsPointWithinColshapeColShapeVector3">
            <summary>Legt die Shim von ColShape.IsPointWithinColshape(ColShape this, ColShape shape, Vector3 point) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimCommand">
            <summary>Shim-Typ von GTANetworkMethods.Command</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimCommand.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimCommand.#ctor(GTANetworkMethods.Command)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimCommand.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCommand.AllInstances.RegisterMethodInfoRuntimeCommandInfo">
            <summary>Legt die Shim von Command.Register(Command this, MethodInfo method, RuntimeCommandInfo cmd) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCommand.AllInstances.UnregisterString">
            <summary>Legt die Shim von Command.Unregister(Command this, String commandName) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimCommand.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimCommand.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCommand.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimCommand.Bind(GTANetworkMethods.ICommand)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCommand.Constructor">
            <summary>Legt die Shim von Command.Command(Command this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCommand.RegisterMethodInfoRuntimeCommandInfo">
            <summary>Legt die Shim von Command.Register(Command this, MethodInfo method, RuntimeCommandInfo cmd) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimCommand.UnregisterString">
            <summary>Legt die Shim von Command.Unregister(Command this, String commandName) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimData">
            <summary>Shim-Typ von GTANetworkMethods.Data</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimData.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimData.#ctor(GTANetworkMethods.Data)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimData.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.GetAllEntityDataEntity">
            <summary>Legt die Shim von Data.GetAllEntityData(Data this, Entity entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.GetAllEntitySharedDataEntity">
            <summary>Legt die Shim von Data.GetAllEntitySharedData(Data this, Entity entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.GetAllWorldData">
            <summary>Legt die Shim von Data.GetAllWorldData(Data this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.GetAllWorldSharedData">
            <summary>Legt die Shim von Data.GetAllWorldSharedData(Data this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.GetEntitySharedDataEntityString">
            <summary>Legt die Shim von Data.GetEntitySharedData(Data this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.GetPlayerOwnSharedDataPlayerString">
            <summary>Legt die Shim von Data.GetPlayerOwnSharedData(Data this, Player entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.HasEntityDataEntityString">
            <summary>Legt die Shim von Data.HasEntityData(Data this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.HasEntitySharedDataEntityString">
            <summary>Legt die Shim von Data.HasEntitySharedData(Data this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.HasPlayerOwnSharedDataPlayerString">
            <summary>Legt die Shim von Data.HasPlayerOwnSharedData(Data this, Player entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.HasWorldDataString">
            <summary>Legt die Shim von Data.HasWorldData(Data this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.HasWorldSharedDataString">
            <summary>Legt die Shim von Data.HasWorldSharedData(Data this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.ResetEntityDataEntityString">
            <summary>Legt die Shim von Data.ResetEntityData(Data this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.ResetEntitySharedDataEntityString">
            <summary>Legt die Shim von Data.ResetEntitySharedData(Data this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.ResetPlayerOwnSharedDataPlayerString">
            <summary>Legt die Shim von Data.ResetPlayerOwnSharedData(Data this, Player entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.ResetWorldDataString">
            <summary>Legt die Shim von Data.ResetWorldData(Data this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.ResetWorldSharedDataString">
            <summary>Legt die Shim von Data.ResetWorldSharedData(Data this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetEntityDataEntityStringObject">
            <summary>Legt die Shim von Data.SetEntityData(Data this, Entity entity, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetEntitySharedDataEntityDictionaryOfStringObject">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, Dictionary`2 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetEntitySharedDataEntityStringBoolean">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetEntitySharedDataEntityStringByteArray">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, Byte[] value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetEntitySharedDataEntityStringEntity">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, Entity value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetEntitySharedDataEntityStringInt32">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetEntitySharedDataEntityStringInt64">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, Int64 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetEntitySharedDataEntityStringNetHandle">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, NetHandle value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetEntitySharedDataEntityStringObject">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetEntitySharedDataEntityStringSingle">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetEntitySharedDataEntityStringString">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetEntitySharedDataEntityStringUInt32">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, UInt32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetEntitySharedDataEntityStringUInt64">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, UInt64 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetEntitySharedDataEntityStringVector3">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, Vector3 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetPlayerOwnSharedDataPlayerDictionaryOfStringObject">
            <summary>Legt die Shim von Data.SetPlayerOwnSharedData(Data this, Player entity, Dictionary`2 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetPlayerOwnSharedDataPlayerStringObject">
            <summary>Legt die Shim von Data.SetPlayerOwnSharedData(Data this, Player entity, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetWorldDataStringObject">
            <summary>Legt die Shim von Data.SetWorldData(Data this, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.AllInstances.SetWorldSharedDataStringObject">
            <summary>Legt die Shim von Data.SetWorldSharedData(Data this, String key, Object value) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimData.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimData.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimData.Bind(GTANetworkMethods.IData)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.Constructor">
            <summary>Legt die Shim von Data.Data(Data this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.GetAllEntityDataEntity">
            <summary>Legt die Shim von Data.GetAllEntityData(Data this, Entity entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.GetAllEntitySharedDataEntity">
            <summary>Legt die Shim von Data.GetAllEntitySharedData(Data this, Entity entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.GetAllWorldData">
            <summary>Legt die Shim von Data.GetAllWorldData(Data this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.GetAllWorldSharedData">
            <summary>Legt die Shim von Data.GetAllWorldSharedData(Data this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.GetEntitySharedDataEntityString">
            <summary>Legt die Shim von Data.GetEntitySharedData(Data this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.GetPlayerOwnSharedDataPlayerString">
            <summary>Legt die Shim von Data.GetPlayerOwnSharedData(Data this, Player entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.HasEntityDataEntityString">
            <summary>Legt die Shim von Data.HasEntityData(Data this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.HasEntitySharedDataEntityString">
            <summary>Legt die Shim von Data.HasEntitySharedData(Data this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.HasPlayerOwnSharedDataPlayerString">
            <summary>Legt die Shim von Data.HasPlayerOwnSharedData(Data this, Player entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.HasWorldDataString">
            <summary>Legt die Shim von Data.HasWorldData(Data this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.HasWorldSharedDataString">
            <summary>Legt die Shim von Data.HasWorldSharedData(Data this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.ResetEntityDataEntityString">
            <summary>Legt die Shim von Data.ResetEntityData(Data this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.ResetEntitySharedDataEntityString">
            <summary>Legt die Shim von Data.ResetEntitySharedData(Data this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.ResetPlayerOwnSharedDataPlayerString">
            <summary>Legt die Shim von Data.ResetPlayerOwnSharedData(Data this, Player entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.ResetWorldDataString">
            <summary>Legt die Shim von Data.ResetWorldData(Data this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.ResetWorldSharedDataString">
            <summary>Legt die Shim von Data.ResetWorldSharedData(Data this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetEntityDataEntityStringObject">
            <summary>Legt die Shim von Data.SetEntityData(Data this, Entity entity, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetEntitySharedDataEntityDictionaryOfStringObject">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, Dictionary`2 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetEntitySharedDataEntityStringBoolean">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetEntitySharedDataEntityStringByteArray">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, Byte[] value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetEntitySharedDataEntityStringEntity">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, Entity value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetEntitySharedDataEntityStringInt32">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetEntitySharedDataEntityStringInt64">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, Int64 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetEntitySharedDataEntityStringNetHandle">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, NetHandle value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetEntitySharedDataEntityStringObject">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetEntitySharedDataEntityStringSingle">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, Single value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetEntitySharedDataEntityStringString">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, String value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetEntitySharedDataEntityStringUInt32">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, UInt32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetEntitySharedDataEntityStringUInt64">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, UInt64 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetEntitySharedDataEntityStringVector3">
            <summary>Legt die Shim von Data.SetEntitySharedData(Data this, Entity entity, String key, Vector3 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetPlayerOwnSharedDataPlayerDictionaryOfStringObject">
            <summary>Legt die Shim von Data.SetPlayerOwnSharedData(Data this, Player entity, Dictionary`2 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetPlayerOwnSharedDataPlayerStringObject">
            <summary>Legt die Shim von Data.SetPlayerOwnSharedData(Data this, Player entity, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetWorldDataStringObject">
            <summary>Legt die Shim von Data.SetWorldData(Data this, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimData.SetWorldSharedDataStringObject">
            <summary>Legt die Shim von Data.SetWorldSharedData(Data this, String key, Object value) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimDummyEntity">
            <summary>Shim-Typ von GTANetworkMethods.DummyEntity</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimDummyEntity.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimDummyEntity.#ctor(GTANetworkMethods.DummyEntity)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimDummyEntity.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimDummyEntity.AllInstances.CreateDummyEntityInt32DictionaryOfStringObjectUInt32">
            <summary>Legt die Shim von DummyEntity.CreateDummyEntity(DummyEntity this, Int32 dummyType, Dictionary`2 sharedData, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimDummyEntity.AllInstances.GetDummyEntityTypeNetHandle">
            <summary>Legt die Shim von DummyEntity.GetDummyEntityType(DummyEntity this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimDummyEntity.AllInstances.SetDummyEntityTypeNetHandleInt32">
            <summary>Legt die Shim von DummyEntity.SetDummyEntityType(DummyEntity this, NetHandle entity, Int32 type) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimDummyEntity.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimDummyEntity.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimDummyEntity.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimDummyEntity.Bind(GTANetworkMethods.IDummyEntity)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimDummyEntity.Constructor">
            <summary>Legt die Shim von DummyEntity.DummyEntity(DummyEntity this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimDummyEntity.CreateDummyEntityInt32DictionaryOfStringObjectUInt32">
            <summary>Legt die Shim von DummyEntity.CreateDummyEntity(DummyEntity this, Int32 dummyType, Dictionary`2 sharedData, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimDummyEntity.GetDummyEntityTypeNetHandle">
            <summary>Legt die Shim von DummyEntity.GetDummyEntityType(DummyEntity this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimDummyEntity.SetDummyEntityTypeNetHandleInt32">
            <summary>Legt die Shim von DummyEntity.SetDummyEntityType(DummyEntity this, NetHandle entity, Int32 type) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimEntity">
            <summary>Shim-Typ von GTANetworkMethods.Entity</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimEntity.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimEntity.#ctor(GTANetworkMethods.Entity)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimEntity.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.DeleteEntityNetHandle">
            <summary>Legt die Shim von Entity.DeleteEntity(Entity this, NetHandle netHandle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.DoesEntityExistForPlayerPlayerNetHandle">
            <summary>Legt die Shim von Entity.DoesEntityExistForPlayer(Entity this, Player player, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.DoesEntityExistNetHandle">
            <summary>Legt die Shim von Entity.DoesEntityExist(Entity this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.GetEntityDimensionNetHandle">
            <summary>Legt die Shim von Entity.GetEntityDimension(Entity this, NetHandle entity) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimEntity.AllInstances.GetEntityFromHandleOf1NetHandle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkMethods.Entity,GTANetworkAPI.NetHandle,``0})">
            <summary>Legt die Shim von Entity.GetEntityFromHandle(Entity this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.GetEntityModelNetHandle">
            <summary>Legt die Shim von Entity.GetEntityModel(Entity this, NetHandle ent) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.GetEntityPositionNetHandle">
            <summary>Legt die Shim von Entity.GetEntityPosition(Entity this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.GetEntityRotationNetHandle">
            <summary>Legt die Shim von Entity.GetEntityRotation(Entity this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.GetEntityTransparencyNetHandle">
            <summary>Legt die Shim von Entity.GetEntityTransparency(Entity this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.GetEntityTypeNetHandle">
            <summary>Legt die Shim von Entity.GetEntityType(Entity this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.GetEntityVelocityNetHandle">
            <summary>Legt die Shim von Entity.GetEntityVelocity(Entity this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.SetEntityDimensionNetHandleUInt32">
            <summary>Legt die Shim von Entity.SetEntityDimension(Entity this, NetHandle entity, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.SetEntityModelNetHandleInt32">
            <summary>Legt die Shim von Entity.SetEntityModel(Entity this, NetHandle handle, Int32 modelHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.SetEntityModelNetHandleUInt32">
            <summary>Legt die Shim von Entity.SetEntityModel(Entity this, NetHandle handle, UInt32 modelHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.SetEntityPositionNetHandleVector3">
            <summary>Legt die Shim von Entity.SetEntityPosition(Entity this, NetHandle netHandle, Vector3 newPosition) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.SetEntityRotationNetHandleVector3">
            <summary>Legt die Shim von Entity.SetEntityRotation(Entity this, NetHandle netHandle, Vector3 newRotation) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.SetEntityTransparencyNetHandleInt32">
            <summary>Legt die Shim von Entity.SetEntityTransparency(Entity this, NetHandle entity, Int32 newAlpha) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.AllInstances.SetEntityVelocityNetHandleVector3">
            <summary>Legt die Shim von Entity.SetEntityVelocity(Entity this, NetHandle netHandle, Vector3 newVelocity) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimEntity.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimEntity.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimEntity.Bind(GTANetworkMethods.IEntity)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.Constructor">
            <summary>Legt die Shim von Entity.Entity(Entity this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.DeleteEntityNetHandle">
            <summary>Legt die Shim von Entity.DeleteEntity(Entity this, NetHandle netHandle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.DoesEntityExistForPlayerPlayerNetHandle">
            <summary>Legt die Shim von Entity.DoesEntityExistForPlayer(Entity this, Player player, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.DoesEntityExistNetHandle">
            <summary>Legt die Shim von Entity.DoesEntityExist(Entity this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.GetEntityDimensionNetHandle">
            <summary>Legt die Shim von Entity.GetEntityDimension(Entity this, NetHandle entity) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimEntity.GetEntityFromHandleOf1NetHandle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkAPI.NetHandle,``0})">
            <summary>Legt die Shim von Entity.GetEntityFromHandle(Entity this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.GetEntityModelNetHandle">
            <summary>Legt die Shim von Entity.GetEntityModel(Entity this, NetHandle ent) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.GetEntityPositionNetHandle">
            <summary>Legt die Shim von Entity.GetEntityPosition(Entity this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.GetEntityRotationNetHandle">
            <summary>Legt die Shim von Entity.GetEntityRotation(Entity this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.GetEntityTransparencyNetHandle">
            <summary>Legt die Shim von Entity.GetEntityTransparency(Entity this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.GetEntityTypeNetHandle">
            <summary>Legt die Shim von Entity.GetEntityType(Entity this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.GetEntityVelocityNetHandle">
            <summary>Legt die Shim von Entity.GetEntityVelocity(Entity this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.SetEntityDimensionNetHandleUInt32">
            <summary>Legt die Shim von Entity.SetEntityDimension(Entity this, NetHandle entity, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.SetEntityModelNetHandleInt32">
            <summary>Legt die Shim von Entity.SetEntityModel(Entity this, NetHandle handle, Int32 modelHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.SetEntityModelNetHandleUInt32">
            <summary>Legt die Shim von Entity.SetEntityModel(Entity this, NetHandle handle, UInt32 modelHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.SetEntityPositionNetHandleVector3">
            <summary>Legt die Shim von Entity.SetEntityPosition(Entity this, NetHandle netHandle, Vector3 newPosition) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.SetEntityRotationNetHandleVector3">
            <summary>Legt die Shim von Entity.SetEntityRotation(Entity this, NetHandle netHandle, Vector3 newRotation) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.SetEntityTransparencyNetHandleInt32">
            <summary>Legt die Shim von Entity.SetEntityTransparency(Entity this, NetHandle entity, Int32 newAlpha) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimEntity.SetEntityVelocityNetHandleVector3">
            <summary>Legt die Shim von Entity.SetEntityVelocity(Entity this, NetHandle netHandle, Vector3 newVelocity) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimExplosion">
            <summary>Shim-Typ von GTANetworkMethods.Explosion</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimExplosion.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimExplosion.#ctor(GTANetworkMethods.Explosion)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimExplosion.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimExplosion.AllInstances.CreateExplosionExplosionTypeVector3SingleUInt32">
            <summary>Legt die Shim von Explosion.CreateExplosion(Explosion this, ExplosionType explosionType, Vector3 position, Single damageScale, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimExplosion.AllInstances.CreateOwnedExplosionPlayerExplosionTypeVector3SingleUInt32">
            <summary>Legt die Shim von Explosion.CreateOwnedExplosion(Explosion this, Player owner, ExplosionType explosionType, Vector3 position, Single damageScale, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimExplosion.AllInstances.CreateOwnedProjectilePlayerWeaponHashVector3Vector3Int32SingleUInt32">
            <summary>Legt die Shim von Explosion.CreateOwnedProjectile(Explosion this, Player owner, WeaponHash weapon, Vector3 start, Vector3 target, Int32 damage, Single speed, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimExplosion.AllInstances.CreateProjectileWeaponHashVector3Vector3Int32SingleUInt32">
            <summary>Legt die Shim von Explosion.CreateProjectile(Explosion this, WeaponHash weapon, Vector3 start, Vector3 target, Int32 damage, Single speed, UInt32 dimension) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimExplosion.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimExplosion.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimExplosion.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimExplosion.Bind(GTANetworkMethods.IExplosion)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimExplosion.Constructor">
            <summary>Legt die Shim von Explosion.Explosion(Explosion this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimExplosion.CreateExplosionExplosionTypeVector3SingleUInt32">
            <summary>Legt die Shim von Explosion.CreateExplosion(Explosion this, ExplosionType explosionType, Vector3 position, Single damageScale, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimExplosion.CreateOwnedExplosionPlayerExplosionTypeVector3SingleUInt32">
            <summary>Legt die Shim von Explosion.CreateOwnedExplosion(Explosion this, Player owner, ExplosionType explosionType, Vector3 position, Single damageScale, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimExplosion.CreateOwnedProjectilePlayerWeaponHashVector3Vector3Int32SingleUInt32">
            <summary>Legt die Shim von Explosion.CreateOwnedProjectile(Explosion this, Player owner, WeaponHash weapon, Vector3 start, Vector3 target, Int32 damage, Single speed, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimExplosion.CreateProjectileWeaponHashVector3Vector3Int32SingleUInt32">
            <summary>Legt die Shim von Explosion.CreateProjectile(Explosion this, WeaponHash weapon, Vector3 start, Vector3 target, Int32 damage, Single speed, UInt32 dimension) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimFather">
            <summary>Shim-Typ von GTANetworkMethods.Father</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.#ctor(GTANetworkMethods.Father)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimFather.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.BanPlayerPlayer">
            <summary>Legt die Shim von Father.BanPlayer(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.BanPlayerPlayerString">
            <summary>Legt die Shim von Father.BanPlayer(Father this, Player player, String reason) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CallScriptStringStringObjectArray">
            <summary>Legt die Shim von Father.Call(Father this, Script scriptEngine, String className, String methodName, Object[] arguments) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.ClearPedTasksPed">
            <summary>Legt die Shim von Father.ClearPedTasks(Father this, Ped ped) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.ClearPlayerAccessoryPlayerInt32">
            <summary>Legt die Shim von Father.ClearPlayerAccessory(Father this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.ClearPlayerTasksPlayer">
            <summary>Legt die Shim von Father.ClearPlayerTasks(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.ConsoleOutputString">
            <summary>Legt die Shim von Father.ConsoleOutput(Father this, String text) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.ConsoleOutputStringObjectArray">
            <summary>Legt die Shim von Father.ConsoleOutput(Father this, String text, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreatCircleColShapeSingleSingleSingleUInt32">
            <summary>Legt die Shim von Father.CreatCircleColShape(Father this, Single x, Single y, Single range, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.Create2DColShapeSingleSingleSingleSingleUInt32">
            <summary>Legt die Shim von Father.Create2DColShape(Father this, Single x, Single y, Single width, Single height, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.Create3DColShapeVector3Vector3UInt32">
            <summary>Legt die Shim von Father.Create3DColShape(Father this, Vector3 start, Vector3 end, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateBlipInt32Vector3SingleByteStringByteSingleBooleanInt16UInt32">
            <summary>Legt die Shim von Father.CreateBlip(Father this, Int32 sprite, Vector3 position, Single scale, Byte color, String name, Byte alpha, Single drawDistance, Boolean shortRange, Int16 rotation, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateBlipNetHandle">
            <summary>Legt die Shim von Father.CreateBlip(Father this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateBlipUInt32Vector3SingleByteStringByteSingleBooleanInt16UInt32">
            <summary>Legt die Shim von Father.CreateBlip(Father this, UInt32 sprite, Vector3 position, Single scale, Byte color, String name, Byte alpha, Single drawDistance, Boolean shortRange, Int16 rotation, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateBlipVector3SingleUInt32">
            <summary>Legt die Shim von Father.CreateBlip(Father this, Vector3 pos, Single range, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateBlipVector3UInt32">
            <summary>Legt die Shim von Father.CreateBlip(Father this, Vector3 pos, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateCheckpointInt32Vector3Vector3SingleColorUInt32">
            <summary>Legt die Shim von Father.CreateCheckpoint(Father this, Int32 model, Vector3 pos, Vector3 dir, Single scale, Color color, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateCheckpointUInt32Vector3Vector3SingleColorUInt32">
            <summary>Legt die Shim von Father.CreateCheckpoint(Father this, UInt32 model, Vector3 pos, Vector3 dir, Single scale, Color color, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateCylinderColShapeVector3SingleSingleUInt32">
            <summary>Legt die Shim von Father.CreateCylinderColShape(Father this, Vector3 position, Single range, Single height, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateExplosionExplosionTypeVector3SingleUInt32">
            <summary>Legt die Shim von Father.CreateExplosion(Father this, ExplosionType explosionType, Vector3 position, Single damageScale, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateLoopedParticleEffectOnEntityStringStringNetHandleVector3Vector3SingleInt32UInt32">
            <summary>Legt die Shim von Father.CreateLoopedParticleEffectOnEntity(Father this, String ptfxLib, String ptfxName, NetHandle entity, Vector3 offset, Vector3 rotation, Single scale, Int32 bone, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateLoopedParticleEffectOnPositionStringStringVector3Vector3SingleUInt32">
            <summary>Legt die Shim von Father.CreateLoopedParticleEffectOnPosition(Father this, String ptfxLib, String ptfxName, Vector3 position, Vector3 rotation, Single scale, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateMarkerInt32Vector3Vector3Vector3SingleColorBooleanUInt32">
            <summary>Legt die Shim von Father.CreateMarker(Father this, Int32 markerType, Vector3 pos, Vector3 dir, Vector3 rot, Single scale, Color color, Boolean bobUpAndDown, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateMarkerUInt32Vector3Vector3Vector3SingleColorBooleanUInt32">
            <summary>Legt die Shim von Father.CreateMarker(Father this, UInt32 markerType, Vector3 pos, Vector3 dir, Vector3 rot, Single scale, Color color, Boolean bobUpAndDown, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateObjectInt32Vector3QuaternionUInt32">
            <summary>Legt die Shim von Father.CreateObject(Father this, Int32 model, Vector3 pos, Quaternion rot, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateObjectInt32Vector3Vector3ByteUInt32">
            <summary>Legt die Shim von Father.CreateObject(Father this, Int32 model, Vector3 pos, Vector3 rot, Byte alpha, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateObjectUInt32Vector3QuaternionUInt32">
            <summary>Legt die Shim von Father.CreateObject(Father this, UInt32 model, Vector3 pos, Quaternion rot, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateObjectUInt32Vector3Vector3ByteUInt32">
            <summary>Legt die Shim von Father.CreateObject(Father this, UInt32 model, Vector3 pos, Vector3 rot, Byte alpha, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateOwnedExplosionPlayerExplosionTypeVector3SingleUInt32">
            <summary>Legt die Shim von Father.CreateOwnedExplosion(Father this, Player owner, ExplosionType explosionType, Vector3 position, Single damageScale, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateOwnedProjectilePlayerWeaponHashVector3Vector3Int32SingleUInt32">
            <summary>Legt die Shim von Father.CreateOwnedProjectile(Father this, Player owner, WeaponHash weapon, Vector3 start, Vector3 target, Int32 damage, Single speed, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateParticleEffectOnEntityStringStringNetHandleVector3Vector3SingleInt32UInt32">
            <summary>Legt die Shim von Father.CreateParticleEffectOnEntity(Father this, String ptfxLibrary, String ptfxName, NetHandle entity, Vector3 offset, Vector3 rotation, Single scale, Int32 boneIndex, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateParticleEffectOnPositionStringStringVector3Vector3SingleUInt32">
            <summary>Legt die Shim von Father.CreateParticleEffectOnPosition(Father this, String ptfxLibrary, String ptfxName, Vector3 position, Vector3 rotation, Single scale, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreatePedPedHashVector3SingleUInt32">
            <summary>Legt die Shim von Father.CreatePed(Father this, PedHash model, Vector3 pos, Single heading, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreatePedUInt32Vector3SingleBooleanBooleanBooleanBooleanUInt32">
            <summary>Legt die Shim von Father.CreatePed(Father this, UInt32 model, Vector3 pos, Single heading, Boolean dynamic, Boolean invincible, Boolean frozen, Boolean controlLocked, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreatePedUInt32Vector3SingleUInt32">
            <summary>Legt die Shim von Father.CreatePed(Father this, UInt32 model, Vector3 pos, Single heading, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreatePickupInt32Vector3Vector3BooleanUInt32UInt32">
            <summary>Legt die Shim von Father.CreatePickup(Father this, Int32 model, Vector3 pos, Vector3 rot, Boolean vehicle, UInt32 respawnTime, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreatePickupPickupHashVector3Vector3Int32UInt32UInt32">
            <summary>Legt die Shim von Father.CreatePickup(Father this, PickupHash pickupHash, Vector3 pos, Vector3 rot, Int32 amount, UInt32 respawnTime, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreatePickupUInt32Vector3Vector3BooleanUInt32UInt32">
            <summary>Legt die Shim von Father.CreatePickup(Father this, UInt32 model, Vector3 pos, Vector3 rot, Boolean vehicle, UInt32 respawnTime, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateProjectileWeaponHashVector3Vector3Int32SingleUInt32">
            <summary>Legt die Shim von Father.CreateProjectile(Father this, WeaponHash weapon, Vector3 start, Vector3 target, Int32 damage, Single speed, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateSphereColShapeVector3SingleUInt32">
            <summary>Legt die Shim von Father.CreateSphereColShape(Father this, Vector3 position, Single range, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateTextLabelStringVector3SingleSingleInt32ColorBooleanUInt32">
            <summary>Legt die Shim von Father.CreateTextLabel(Father this, String text, Vector3 pos, Single range, Single size, Int32 font, Color color, Boolean entitySeethrough, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateVehicleInt32Vector3SingleInt32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Father.CreateVehicle(Father this, Int32 model, Vector3 pos, Single rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateVehicleInt32Vector3Vector3Int32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Father.CreateVehicle(Father this, Int32 model, Vector3 pos, Vector3 rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateVehicleUInt32Vector3SingleInt32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Father.CreateVehicle(Father this, UInt32 model, Vector3 pos, Single rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateVehicleVehicleHashVector3SingleColorColorStringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Father.CreateVehicle(Father this, VehicleHash model, Vector3 pos, Single rot, Color color1, Color color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateVehicleVehicleHashVector3SingleInt32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Father.CreateVehicle(Father this, VehicleHash model, Vector3 pos, Single rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.CreateVehicleVehicleHashVector3Vector3Int32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Father.CreateVehicle(Father this, VehicleHash model, Vector3 pos, Vector3 rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.DeleteColShapeColShape">
            <summary>Legt die Shim von Father.DeleteColShape(Father this, ColShape shape) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.DeleteEntityNetHandle">
            <summary>Legt die Shim von Father.DeleteEntity(Father this, NetHandle netHandle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.DeletePlayerWorldPropPlayerInt32Vector3Single">
            <summary>Legt die Shim von Father.DeletePlayerWorldProp(Father this, Player player, Int32 modelHash, Vector3 position, Single radius) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.DeletePlayerWorldPropPlayerUInt32Vector3Single">
            <summary>Legt die Shim von Father.DeletePlayerWorldProp(Father this, Player player, UInt32 modelHash, Vector3 position, Single radius) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.DeleteWorldPropInt32Vector3Single">
            <summary>Legt die Shim von Father.DeleteWorldProp(Father this, Int32 modelHash, Vector3 position, Single radius) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.DeleteWorldPropUInt32Vector3Single">
            <summary>Legt die Shim von Father.DeleteWorldProp(Father this, UInt32 modelHash, Vector3 position, Single radius) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.DoesConfigExistScriptString">
            <summary>Legt die Shim von Father.DoesConfigExist(Father this, Script scriptEngine, String configName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.DoesEntityExistForPlayerPlayerNetHandle">
            <summary>Legt die Shim von Father.DoesEntityExistForPlayer(Father this, Player player, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.DoesEntityExistNetHandle">
            <summary>Legt die Shim von Father.DoesEntityExist(Father this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.DoesPlayerHaveAccessToCommandPlayerString">
            <summary>Legt die Shim von Father.DoesPlayerHaveAccessToCommand(Father this, Player player, String cmd) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.DoesResourceExistString">
            <summary>Legt die Shim von Father.DoesResourceExist(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.EvalPlayerString">
            <summary>Legt die Shim von Father.Eval(Father this, Player player, String code) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.ExplodeVehicleVehicle">
            <summary>Legt die Shim von Father.ExplodeVehicle(Father this, Vehicle vehicle) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.AllInstances.FetchNativeFromPlayerOf1PlayerHashObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkMethods.Father,GTANetworkAPI.Player,GTANetworkAPI.Hash,System.Object[],``0})">
            <summary>Legt die Shim von Father.FetchNativeFromPlayer(Father this, Player player, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.AllInstances.FetchNativeFromPlayerOf1PlayerUInt64ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkMethods.Father,GTANetworkAPI.Player,System.UInt64,System.Object[],``0})">
            <summary>Legt die Shim von Father.FetchNativeFromPlayer(Father this, Player player, UInt64 longHash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetAllEntityDataEntity">
            <summary>Legt die Shim von Father.GetAllEntityData(Father this, Entity entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetAllEntitySharedDataEntity">
            <summary>Legt die Shim von Father.GetAllEntitySharedData(Father this, Entity entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetAllPlayers">
            <summary>Legt die Shim von Father.GetAllPlayers(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetAllResources">
            <summary>Legt die Shim von Father.GetAllResources(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetAllWeaponComponentsWeaponHash">
            <summary>Legt die Shim von Father.GetAllWeaponComponents(Father this, WeaponHash weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetAllWorldData">
            <summary>Legt die Shim von Father.GetAllWorldData(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetAllWorldSharedData">
            <summary>Legt die Shim von Father.GetAllWorldSharedData(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetBlipColorNetHandle">
            <summary>Legt die Shim von Father.GetBlipColor(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetBlipNameNetHandle">
            <summary>Legt die Shim von Father.GetBlipName(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetBlipPositionNetHandle">
            <summary>Legt die Shim von Father.GetBlipPosition(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetBlipRouteColorNetHandle">
            <summary>Legt die Shim von Father.GetBlipRouteColor(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetBlipRouteVisibleNetHandle">
            <summary>Legt die Shim von Father.GetBlipRouteVisible(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetBlipScaleNetHandle">
            <summary>Legt die Shim von Father.GetBlipScale(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetBlipShortRangeNetHandle">
            <summary>Legt die Shim von Father.GetBlipShortRange(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetBlipSpriteNetHandle">
            <summary>Legt die Shim von Father.GetBlipSprite(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetBlipTransparencyNetHandle">
            <summary>Legt die Shim von Father.GetBlipTransparency(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetCheckpointColorNetHandle">
            <summary>Legt die Shim von Father.GetCheckpointColor(Father this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetCheckpointDirectionNetHandle">
            <summary>Legt die Shim von Father.GetCheckpointDirection(Father this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetCheckpointScaleNetHandle">
            <summary>Legt die Shim von Father.GetCheckpointScale(Father this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetCurrentGamemode">
            <summary>Legt die Shim von Father.GetCurrentGamemode(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetEntityDimensionNetHandle">
            <summary>Legt die Shim von Father.GetEntityDimension(Father this, NetHandle entity) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetEntityFromHandleOf1NetHandle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkMethods.Father,GTANetworkAPI.NetHandle,``0})">
            <summary>Legt die Shim von Father.GetEntityFromHandle(Father this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetEntityModelNetHandle">
            <summary>Legt die Shim von Father.GetEntityModel(Father this, NetHandle ent) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetEntityPositionNetHandle">
            <summary>Legt die Shim von Father.GetEntityPosition(Father this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetEntityRotationNetHandle">
            <summary>Legt die Shim von Father.GetEntityRotation(Father this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetEntityTransparencyNetHandle">
            <summary>Legt die Shim von Father.GetEntityTransparency(Father this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetEntityTypeNetHandle">
            <summary>Legt die Shim von Father.GetEntityType(Father this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetEntityVelocityNetHandle">
            <summary>Legt die Shim von Father.GetEntityVelocity(Father this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetHashKeyString">
            <summary>Legt die Shim von Father.GetHashKey(Father this, String input) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetHashSha256String">
            <summary>Legt die Shim von Father.GetHashSha256(Father this, String input) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetMapGamemodesString">
            <summary>Legt die Shim von Father.GetMapGamemodes(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetMapsForGamemodeString">
            <summary>Legt die Shim von Father.GetMapsForGamemode(Father this, String gamemode) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetMarkerBobUpAndDownNetHandle">
            <summary>Legt die Shim von Father.GetMarkerBobUpAndDown(Father this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetMarkerColorNetHandle">
            <summary>Legt die Shim von Father.GetMarkerColor(Father this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetMarkerDirectionNetHandle">
            <summary>Legt die Shim von Father.GetMarkerDirection(Father this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetMarkerScaleNetHandle">
            <summary>Legt die Shim von Father.GetMarkerScale(Father this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetMarkerTypeNetHandle">
            <summary>Legt die Shim von Father.GetMarkerType(Father this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetMaxPlayers">
            <summary>Legt die Shim von Father.GetMaxPlayers(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPickupAmountNetHandle">
            <summary>Legt die Shim von Father.GetPickupAmount(Father this, NetHandle pickup) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPickupCustomModelNetHandle">
            <summary>Legt die Shim von Father.GetPickupCustomModel(Father this, NetHandle pickup) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPickupPickedUpNetHandle">
            <summary>Legt die Shim von Father.GetPickupPickedUp(Father this, NetHandle pickup) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerAccessoryDrawablePlayerInt32">
            <summary>Legt die Shim von Father.GetPlayerAccessoryDrawable(Father this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerAccessoryPlayerInt32">
            <summary>Legt die Shim von Father.GetPlayerAccessory(Father this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerAccessoryTexturePlayerInt32">
            <summary>Legt die Shim von Father.GetPlayerAccessoryTexture(Father this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerAclGroupPlayer">
            <summary>Legt die Shim von Father.GetPlayerAclGroup(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerAddressPlayer">
            <summary>Legt die Shim von Father.GetPlayerAddress(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerAimingPointPlayer">
            <summary>Legt die Shim von Father.GetPlayerAimingPoint(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerArmorPlayer">
            <summary>Legt die Shim von Father.GetPlayerArmor(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerClothesDrawablePlayerInt32">
            <summary>Legt die Shim von Father.GetPlayerClothesDrawable(Father this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerClothesPlayerInt32">
            <summary>Legt die Shim von Father.GetPlayerClothes(Father this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerClothesTexturePlayerInt32">
            <summary>Legt die Shim von Father.GetPlayerClothesTexture(Father this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerCurrentWeaponAmmoPlayer">
            <summary>Legt die Shim von Father.GetPlayerCurrentWeaponAmmo(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerCurrentWeaponPlayer">
            <summary>Legt die Shim von Father.GetPlayerCurrentWeapon(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerEyeColorPlayer">
            <summary>Legt die Shim von Father.GetPlayerEyeColor(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerFaceFeaturePlayerInt32">
            <summary>Legt die Shim von Father.GetPlayerFaceFeature(Father this, Player player, Int32 id) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerFromHandleNetHandle">
            <summary>Legt die Shim von Father.GetPlayerFromHandle(Father this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerFromNameString">
            <summary>Legt die Shim von Father.GetPlayerFromName(Father this, String name) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerHairColorPlayer">
            <summary>Legt die Shim von Father.GetPlayerHairColor(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerHeadBlendPlayer">
            <summary>Legt die Shim von Father.GetPlayerHeadBlend(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerHeadOverlayPlayerInt32">
            <summary>Legt die Shim von Father.GetPlayerHeadOverlay(Father this, Player player, Int32 overlayId) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerHealthPlayer">
            <summary>Legt die Shim von Father.GetPlayerHealth(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerNamePlayer">
            <summary>Legt die Shim von Father.GetPlayerName(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerPingPlayer">
            <summary>Legt die Shim von Father.GetPlayerPing(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerSerialPlayer">
            <summary>Legt die Shim von Father.GetPlayerSerial(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerSocialClubNamePlayer">
            <summary>Legt die Shim von Father.GetPlayerSocialClubName(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerVehiclePlayer">
            <summary>Legt die Shim von Father.GetPlayerVehicle(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerVehicleSeatPlayer">
            <summary>Legt die Shim von Father.GetPlayerVehicleSeat(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerVelocityPlayer">
            <summary>Legt die Shim von Father.GetPlayerVelocity(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerWeaponAmmoPlayerWeaponHash">
            <summary>Legt die Shim von Father.GetPlayerWeaponAmmo(Father this, Player player, WeaponHash weaponHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayerWeaponsPlayer">
            <summary>Legt die Shim von Father.GetPlayerWeapons(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayersInRadiusOfPlayerDoublePlayer">
            <summary>Legt die Shim von Father.GetPlayersInRadiusOfPlayer(Father this, Double radius, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetPlayersInRadiusOfPositionDoubleVector3">
            <summary>Legt die Shim von Father.GetPlayersInRadiusOfPosition(Father this, Double radius, Vector3 position) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetResourceAuthorString">
            <summary>Legt die Shim von Father.GetResourceAuthor(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetResourceCommandInfoStringString">
            <summary>Legt die Shim von Father.GetResourceCommandInfo(Father this, String resource, String command) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetResourceCommandInfosString">
            <summary>Legt die Shim von Father.GetResourceCommandInfos(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetResourceCommandsString">
            <summary>Legt die Shim von Father.GetResourceCommands(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetResourceDescriptionString">
            <summary>Legt die Shim von Father.GetResourceDescription(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetResourceFolderScript">
            <summary>Legt die Shim von Father.GetResourceFolder(Father this, Script scriptEngine) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetResourceNameString">
            <summary>Legt die Shim von Father.GetResourceName(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetResourceSettingDescriptionStringString">
            <summary>Legt die Shim von Father.GetResourceSettingDescription(Father this, String resource, String setting) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetResourceSettingOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkMethods.Father,System.String,System.String,``0})">
            <summary>Legt die Shim von Father.GetResourceSetting(Father this, String resource, String setting) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetResourceSettingsString">
            <summary>Legt die Shim von Father.GetResourceSettings(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetResourceTypeString">
            <summary>Legt die Shim von Father.GetResourceType(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetResourceVersionString">
            <summary>Legt die Shim von Father.GetResourceVersion(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetRunningResources">
            <summary>Legt die Shim von Father.GetRunningResources(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetServerName">
            <summary>Legt die Shim von Father.GetServerName(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetServerPort">
            <summary>Legt die Shim von Father.GetServerPort(Father this) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetSettingOf1ScriptString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkMethods.Father,GTANetworkAPI.Script,System.String,``0})">
            <summary>Legt die Shim von Father.GetSetting(Father this, Script scriptEngine, String settingName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetTextLabelColorNetHandle">
            <summary>Legt die Shim von Father.GetTextLabelColor(Father this, NetHandle label) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetTextLabelRangeNetHandle">
            <summary>Legt die Shim von Father.GetTextLabelRange(Father this, NetHandle label) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetTextLabelSeethroughNetHandle">
            <summary>Legt die Shim von Father.GetTextLabelSeethrough(Father this, NetHandle label) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetTextLabelTextNetHandle">
            <summary>Legt die Shim von Father.GetTextLabelText(Father this, NetHandle label) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetThisResourceScript">
            <summary>Legt die Shim von Father.GetThisResource(Father this, Script scriptEngine) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetTime">
            <summary>Legt die Shim von Father.GetTime(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleBodyHealthNetHandle">
            <summary>Legt die Shim von Father.GetVehicleBodyHealth(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleBulletproofTyresNetHandle">
            <summary>Legt die Shim von Father.GetVehicleBulletproofTyres(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleClassNameInt32">
            <summary>Legt die Shim von Father.GetVehicleClassName(Father this, Int32 classId) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleClassVehicleHash">
            <summary>Legt die Shim von Father.GetVehicleClass(Father this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleCustomPrimaryColorNetHandle">
            <summary>Legt die Shim von Father.GetVehicleCustomPrimaryColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleCustomSecondaryColorNetHandle">
            <summary>Legt die Shim von Father.GetVehicleCustomSecondaryColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleCustomTiresNetHandle">
            <summary>Legt die Shim von Father.GetVehicleCustomTires(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleDashboardColorNetHandle">
            <summary>Legt die Shim von Father.GetVehicleDashboardColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleDisplayNameVehicleHash">
            <summary>Legt die Shim von Father.GetVehicleDisplayName(Father this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleDriverNetHandle">
            <summary>Legt die Shim von Father.GetVehicleDriver(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleEngineHealthNetHandle">
            <summary>Legt die Shim von Father.GetVehicleEngineHealth(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleEnginePowerMultiplierNetHandle">
            <summary>Legt die Shim von Father.GetVehicleEnginePowerMultiplier(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleEngineStatusNetHandle">
            <summary>Legt die Shim von Father.GetVehicleEngineStatus(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleEngineTorqueMultiplierNetHandle">
            <summary>Legt die Shim von Father.GetVehicleEngineTorqueMultiplier(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleExtraNetHandleInt32">
            <summary>Legt die Shim von Father.GetVehicleExtra(Father this, NetHandle vehicle, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleHealthNetHandle">
            <summary>Legt die Shim von Father.GetVehicleHealth(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleLiveryNetHandle">
            <summary>Legt die Shim von Father.GetVehicleLivery(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleLockedNetHandle">
            <summary>Legt die Shim von Father.GetVehicleLocked(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleMaxAccelerationVehicleHash">
            <summary>Legt die Shim von Father.GetVehicleMaxAcceleration(Father this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleMaxBrakingVehicleHash">
            <summary>Legt die Shim von Father.GetVehicleMaxBraking(Father this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleMaxPassengersVehicleHash">
            <summary>Legt die Shim von Father.GetVehicleMaxPassengers(Father this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleMaxSpeedVehicleHash">
            <summary>Legt die Shim von Father.GetVehicleMaxSpeed(Father this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleMaxTractionVehicleHash">
            <summary>Legt die Shim von Father.GetVehicleMaxTraction(Father this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleModNetHandleInt32">
            <summary>Legt die Shim von Father.GetVehicleMod(Father this, NetHandle vehicle, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleNeonColorNetHandle">
            <summary>Legt die Shim von Father.GetVehicleNeonColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleNeonStateNetHandle">
            <summary>Legt die Shim von Father.GetVehicleNeonState(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleNumberPlateNetHandle">
            <summary>Legt die Shim von Father.GetVehicleNumberPlate(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleNumberPlateStyleNetHandle">
            <summary>Legt die Shim von Father.GetVehicleNumberPlateStyle(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleOccupantsNetHandle">
            <summary>Legt die Shim von Father.GetVehicleOccupants(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehiclePearlescentColorNetHandle">
            <summary>Legt die Shim von Father.GetVehiclePearlescentColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehiclePrimaryColorNetHandle">
            <summary>Legt die Shim von Father.GetVehiclePrimaryColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehiclePrimaryPaintNetHandle">
            <summary>Legt die Shim von Father.GetVehiclePrimaryPaint(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleSecondaryColorNetHandle">
            <summary>Legt die Shim von Father.GetVehicleSecondaryColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleSecondaryPaintNetHandle">
            <summary>Legt die Shim von Father.GetVehicleSecondaryPaint(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleSirenStateNetHandle">
            <summary>Legt die Shim von Father.GetVehicleSirenState(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleSpecialLightStatusNetHandle">
            <summary>Legt die Shim von Father.GetVehicleSpecialLightStatus(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleTrailerNetHandle">
            <summary>Legt die Shim von Father.GetVehicleTrailer(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleTraileredByNetHandle">
            <summary>Legt die Shim von Father.GetVehicleTraileredBy(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleTrimColorNetHandle">
            <summary>Legt die Shim von Father.GetVehicleTrimColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleTyreSmokeColorNetHandle">
            <summary>Legt die Shim von Father.GetVehicleTyreSmokeColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleWheelColorNetHandle">
            <summary>Legt die Shim von Father.GetVehicleWheelColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleWheelTypeNetHandle">
            <summary>Legt die Shim von Father.GetVehicleWheelType(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetVehicleWindowTintNetHandle">
            <summary>Legt die Shim von Father.GetVehicleWindowTint(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GetWeather">
            <summary>Legt die Shim von Father.GetWeather(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.GivePlayerWeaponPlayerWeaponHashInt32">
            <summary>Legt die Shim von Father.GivePlayerWeapon(Father this, Player player, WeaponHash weaponHash, Int32 ammo) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.HasEntityDataEntityString">
            <summary>Legt die Shim von Father.HasEntityData(Father this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.HasEntitySharedDataEntityString">
            <summary>Legt die Shim von Father.HasEntitySharedData(Father this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.HasResourceSettingStringString">
            <summary>Legt die Shim von Father.HasResourceSetting(Father this, String resource, String settingName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.HasSettingScriptString">
            <summary>Legt die Shim von Father.HasSetting(Father this, Script scriptEngine, String settingName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.HasWorldDataString">
            <summary>Legt die Shim von Father.HasWorldData(Father this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.HasWorldSharedDataString">
            <summary>Legt die Shim von Father.HasWorldSharedData(Father this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.IsAclEnabled">
            <summary>Legt die Shim von Father.IsAclEnabled(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.IsCefEnabledPlayer">
            <summary>Legt die Shim von Father.IsCefEnabled(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.IsMediaStreamEnabledPlayer">
            <summary>Legt die Shim von Father.IsMediaStreamEnabled(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.IsPasswordProtected">
            <summary>Legt die Shim von Father.IsPasswordProtected(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.IsPlayerAimingPlayer">
            <summary>Legt die Shim von Father.IsPlayerAiming(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.IsPlayerConnectedPlayer">
            <summary>Legt die Shim von Father.IsPlayerConnected(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.IsPlayerDeadPlayer">
            <summary>Legt die Shim von Father.IsPlayerDead(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.IsPlayerInAnyVehiclePlayer">
            <summary>Legt die Shim von Father.IsPlayerInAnyVehicle(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.IsPlayerInCoverPlayer">
            <summary>Legt die Shim von Father.IsPlayerInCover(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.IsPlayerLoggedInPlayer">
            <summary>Legt die Shim von Father.IsPlayerLoggedIn(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.IsPlayerOnLadderPlayer">
            <summary>Legt die Shim von Father.IsPlayerOnLadder(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.IsPlayerReloadingPlayer">
            <summary>Legt die Shim von Father.IsPlayerReloading(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.IsPlayerRespawningPlayer">
            <summary>Legt die Shim von Father.IsPlayerRespawning(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.IsPlayerShootingPlayer">
            <summary>Legt die Shim von Father.IsPlayerShooting(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.IsPointWithinColshapeColShapeVector3">
            <summary>Legt die Shim von Father.IsPointWithinColshape(Father this, ColShape shape, Vector3 point) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.IsResourceRunningString">
            <summary>Legt die Shim von Father.IsResourceRunning(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.KickPlayerPlayer">
            <summary>Legt die Shim von Father.KickPlayer(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.KickPlayerPlayerString">
            <summary>Legt die Shim von Father.KickPlayer(Father this, Player player, String reason) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.KickPlayerSilentPlayer">
            <summary>Legt die Shim von Father.KickPlayerSilent(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.KickPlayerSilentPlayerString">
            <summary>Legt die Shim von Father.KickPlayerSilent(Father this, Player player, String reason) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.LoadXmlString">
            <summary>Legt die Shim von Father.LoadXml(Father this, String path) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.LoginPlayerPlayerString">
            <summary>Legt die Shim von Father.LoginPlayer(Father this, Player player, String password) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.LogoutPlayerPlayer">
            <summary>Legt die Shim von Father.LogoutPlayer(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.PedNameToModelString">
            <summary>Legt die Shim von Father.PedNameToModel(Father this, String modelName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.PickupNameToModelString">
            <summary>Legt die Shim von Father.PickupNameToModel(Father this, String modelName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.PlayPedAnimationPedBooleanStringString">
            <summary>Legt die Shim von Father.PlayPedAnimation(Father this, Ped ped, Boolean looped, String dictionary, String name) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.PlayPedScenarioPedString">
            <summary>Legt die Shim von Father.PlayPedScenario(Father this, Ped ped, String scenario) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.PlayPlayerAnimationPlayerInt32StringStringSingle">
            <summary>Legt die Shim von Father.PlayPlayerAnimation(Father this, Player player, Int32 flag, String animDict, String animName, Single speed) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.PlayPlayerScenarioPlayerString">
            <summary>Legt die Shim von Father.PlayPlayerScenario(Father this, Player player, String scenarioName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.RegisterMethodInfoStringObject">
            <summary>Legt die Shim von Father.Register(Father this, MethodInfo method, String eventName, Object classInstance) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.RemoveAllPlayerWeaponsPlayer">
            <summary>Legt die Shim von Father.RemoveAllPlayerWeapons(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.RemoveIplString">
            <summary>Legt die Shim von Father.RemoveIpl(Father this, String iplName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.RemovePlayerWeaponPlayerWeaponHash">
            <summary>Legt die Shim von Father.RemovePlayerWeapon(Father this, Player player, WeaponHash weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.RemoveVehicleModNetHandleInt32">
            <summary>Legt die Shim von Father.RemoveVehicleMod(Father this, NetHandle vehicle, Int32 modType) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.RepairVehicleNetHandle">
            <summary>Legt die Shim von Father.RepairVehicle(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.RequestIplString">
            <summary>Legt die Shim von Father.RequestIpl(Father this, String iplName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.ResetEntityDataEntityString">
            <summary>Legt die Shim von Father.ResetEntityData(Father this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.ResetEntitySharedDataEntityString">
            <summary>Legt die Shim von Father.ResetEntitySharedData(Father this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.ResetIplList">
            <summary>Legt die Shim von Father.ResetIplList(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.ResetWorldDataString">
            <summary>Legt die Shim von Father.ResetWorldData(Father this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.ResetWorldSharedDataString">
            <summary>Legt die Shim von Father.ResetWorldSharedData(Father this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.RespawnPickupNetHandle">
            <summary>Legt die Shim von Father.RespawnPickup(Father this, NetHandle pickup) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendChatMessageToAllStringBoolean">
            <summary>Legt die Shim von Father.SendChatMessageToAll(Father this, String message, Boolean oldColors) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendChatMessageToAllStringStringBoolean">
            <summary>Legt die Shim von Father.SendChatMessageToAll(Father this, String sender, String message, Boolean oldColors) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendChatMessageToPlayerPlayerStringBoolean">
            <summary>Legt die Shim von Father.SendChatMessageToPlayer(Father this, Player player, String message, Boolean oldColors) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendChatMessageToPlayerPlayerStringStringBoolean">
            <summary>Legt die Shim von Father.SendChatMessageToPlayer(Father this, Player player, String sender, String message, Boolean oldColors) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendNativeToAllPlayersHashObjectArray">
            <summary>Legt die Shim von Father.SendNativeToAllPlayers(Father this, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendNativeToAllPlayersUInt64ObjectArray">
            <summary>Legt die Shim von Father.SendNativeToAllPlayers(Father this, UInt64 longHash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendNativeToPlayerPlayerHashObjectArray">
            <summary>Legt die Shim von Father.SendNativeToPlayer(Father this, Player player, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendNativeToPlayerPlayerUInt64ObjectArray">
            <summary>Legt die Shim von Father.SendNativeToPlayer(Father this, Player player, UInt64 longHash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendNativeToPlayersInDimensionUInt32HashObjectArray">
            <summary>Legt die Shim von Father.SendNativeToPlayersInDimension(Father this, UInt32 dimension, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendNativeToPlayersInDimensionUInt32UInt64ObjectArray">
            <summary>Legt die Shim von Father.SendNativeToPlayersInDimension(Father this, UInt32 dimension, UInt64 hash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendNativeToPlayersInRangeInDimensionVector3SingleUInt32HashObjectArray">
            <summary>Legt die Shim von Father.SendNativeToPlayersInRangeInDimension(Father this, Vector3 pos, Single range, UInt32 dimension, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendNativeToPlayersInRangeInDimensionVector3SingleUInt32UInt64ObjectArray">
            <summary>Legt die Shim von Father.SendNativeToPlayersInRangeInDimension(Father this, Vector3 pos, Single range, UInt32 dimension, UInt64 hash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendNativeToPlayersInRangeVector3SingleHashObjectArray">
            <summary>Legt die Shim von Father.SendNativeToPlayersInRange(Father this, Vector3 pos, Single range, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendNativeToPlayersInRangeVector3SingleUInt64ObjectArray">
            <summary>Legt die Shim von Father.SendNativeToPlayersInRange(Father this, Vector3 pos, Single range, UInt64 hash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendNotificationToAllStringBoolean">
            <summary>Legt die Shim von Father.SendNotificationToAll(Father this, String message, Boolean flashing) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendNotificationToPlayerPlayerStringBoolean">
            <summary>Legt die Shim von Father.SendNotificationToPlayer(Father this, Player player, String message, Boolean flashing) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendPictureNotificationToAllStringStringInt32Int32StringString">
            <summary>Legt die Shim von Father.SendPictureNotificationToAll(Father this, String body, String pic, Int32 flash, Int32 iconType, String sender, String subject) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SendPictureNotificationToPlayerPlayerStringStringInt32Int32StringString">
            <summary>Legt die Shim von Father.SendPictureNotificationToPlayer(Father this, Player player, String body, String pic, Int32 flash, Int32 iconType, String sender, String subject) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetBlipColorNetHandleInt32">
            <summary>Legt die Shim von Father.SetBlipColor(Father this, NetHandle blip, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetBlipNameNetHandleString">
            <summary>Legt die Shim von Father.SetBlipName(Father this, NetHandle blip, String name) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetBlipPositionNetHandleVector3">
            <summary>Legt die Shim von Father.SetBlipPosition(Father this, NetHandle blip, Vector3 newPos) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetBlipRouteColorNetHandleInt32">
            <summary>Legt die Shim von Father.SetBlipRouteColor(Father this, NetHandle blip, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetBlipRouteVisibleNetHandleBoolean">
            <summary>Legt die Shim von Father.SetBlipRouteVisible(Father this, NetHandle blip, Boolean visible) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetBlipScaleNetHandleSingle">
            <summary>Legt die Shim von Father.SetBlipScale(Father this, NetHandle blip, Single scale) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetBlipShortRangeNetHandleBoolean">
            <summary>Legt die Shim von Father.SetBlipShortRange(Father this, NetHandle blip, Boolean range) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetBlipSpriteNetHandleInt32">
            <summary>Legt die Shim von Father.SetBlipSprite(Father this, NetHandle blip, Int32 sprite) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetBlipSpriteNetHandleUInt32">
            <summary>Legt die Shim von Father.SetBlipSprite(Father this, NetHandle blip, UInt32 sprite) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetBlipTransparencyNetHandleInt32">
            <summary>Legt die Shim von Father.SetBlipTransparency(Father this, NetHandle blip, Int32 alpha) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetCheckpointColorNetHandleInt32Int32Int32Int32">
            <summary>Legt die Shim von Father.SetCheckpointColor(Father this, NetHandle marker, Int32 alpha, Int32 red, Int32 green, Int32 blue) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetCheckpointDirectionNetHandleVector3">
            <summary>Legt die Shim von Father.SetCheckpointDirection(Father this, NetHandle marker, Vector3 dir) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetCheckpointScaleNetHandleSingle">
            <summary>Legt die Shim von Father.SetCheckpointScale(Father this, NetHandle marker, Single scale) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetCommandErrorMessageString">
            <summary>Legt die Shim von Father.SetCommandErrorMessage(Father this, String msg) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetDefaultSpawnLocationVector3Single">
            <summary>Legt die Shim von Father.SetDefaultSpawnLocation(Father this, Vector3 location, Single heading) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetEntityDataEntityStringObject">
            <summary>Legt die Shim von Father.SetEntityData(Father this, Entity entity, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetEntityDimensionNetHandleUInt32">
            <summary>Legt die Shim von Father.SetEntityDimension(Father this, NetHandle entity, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetEntityModelNetHandleInt32">
            <summary>Legt die Shim von Father.SetEntityModel(Father this, NetHandle handle, Int32 modelHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetEntityModelNetHandleUInt32">
            <summary>Legt die Shim von Father.SetEntityModel(Father this, NetHandle handle, UInt32 modelHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetEntityPositionNetHandleVector3">
            <summary>Legt die Shim von Father.SetEntityPosition(Father this, NetHandle netHandle, Vector3 newPosition) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetEntityRotationNetHandleVector3">
            <summary>Legt die Shim von Father.SetEntityRotation(Father this, NetHandle netHandle, Vector3 newRotation) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetEntitySharedDataEntityStringObject">
            <summary>Legt die Shim von Father.SetEntitySharedData(Father this, Entity entity, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetEntityTransparencyNetHandleInt32">
            <summary>Legt die Shim von Father.SetEntityTransparency(Father this, NetHandle entity, Int32 newAlpha) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetEntityVelocityNetHandleVector3">
            <summary>Legt die Shim von Father.SetEntityVelocity(Father this, NetHandle netHandle, Vector3 newVelocity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetGamemodeNameString">
            <summary>Legt die Shim von Father.SetGamemodeName(Father this, String newName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetLogCommandParamParserExceptionsBoolean">
            <summary>Legt die Shim von Father.SetLogCommandParamParserExceptions(Father this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetLogRemoteEventParamParserExceptionsBoolean">
            <summary>Legt die Shim von Father.SetLogRemoteEventParamParserExceptions(Father this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetMarkerBobUpAndDownNetHandleBoolean">
            <summary>Legt die Shim von Father.SetMarkerBobUpAndDown(Father this, NetHandle marker, Boolean state) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetMarkerColorNetHandleInt32Int32Int32Int32">
            <summary>Legt die Shim von Father.SetMarkerColor(Father this, NetHandle marker, Int32 alpha, Int32 red, Int32 green, Int32 blue) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetMarkerDirectionNetHandleVector3">
            <summary>Legt die Shim von Father.SetMarkerDirection(Father this, NetHandle marker, Vector3 dir) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetMarkerScaleNetHandleSingle">
            <summary>Legt die Shim von Father.SetMarkerScale(Father this, NetHandle marker, Single scale) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetMarkerTypeNetHandleInt32">
            <summary>Legt die Shim von Father.SetMarkerType(Father this, NetHandle marker, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetMarkerTypeNetHandleUInt32">
            <summary>Legt die Shim von Father.SetMarkerType(Father this, NetHandle marker, UInt32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetPlayerAccessoryPlayerInt32Int32Int32">
            <summary>Legt die Shim von Father.SetPlayerAccessory(Father this, Player player, Int32 slot, Int32 drawable, Int32 texture) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetPlayerArmorPlayerInt32">
            <summary>Legt die Shim von Father.SetPlayerArmor(Father this, Player player, Int32 armor) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetPlayerClothesPlayerInt32Int32Int32">
            <summary>Legt die Shim von Father.SetPlayerClothes(Father this, Player player, Int32 slot, Int32 drawable, Int32 texture) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetPlayerCurrentWeaponAmmoPlayerInt32">
            <summary>Legt die Shim von Father.SetPlayerCurrentWeaponAmmo(Father this, Player player, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetPlayerCurrentWeaponPlayerWeaponHash">
            <summary>Legt die Shim von Father.SetPlayerCurrentWeapon(Father this, Player player, WeaponHash weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetPlayerEyeColorPlayerByte">
            <summary>Legt die Shim von Father.SetPlayerEyeColor(Father this, Player player, Byte color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetPlayerFaceFeaturePlayerInt32Single">
            <summary>Legt die Shim von Father.SetPlayerFaceFeature(Father this, Player player, Int32 id, Single scale) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetPlayerHairColorPlayerByteByte">
            <summary>Legt die Shim von Father.SetPlayerHairColor(Father this, Player player, Byte color, Byte highlightColor) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetPlayerHeadBlendPlayerHeadBlend">
            <summary>Legt die Shim von Father.SetPlayerHeadBlend(Father this, Player player, HeadBlend headblend) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetPlayerHeadOverlayPlayerInt32HeadOverlay">
            <summary>Legt die Shim von Father.SetPlayerHeadOverlay(Father this, Player player, Int32 overlayId, HeadOverlay headOverlay) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetPlayerHealthPlayerInt32">
            <summary>Legt die Shim von Father.SetPlayerHealth(Father this, Player player, Int32 health) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetPlayerIntoVehiclePlayerNetHandleInt32">
            <summary>Legt die Shim von Father.SetPlayerIntoVehicle(Father this, Player player, NetHandle vehicle, Int32 seat) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetPlayerNamePlayerString">
            <summary>Legt die Shim von Father.SetPlayerName(Father this, Player player, String newName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetPlayerVelocityPlayerVector3">
            <summary>Legt die Shim von Father.SetPlayerVelocity(Father this, Player player, Vector3 velocity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetPlayerWeaponAmmoPlayerWeaponHashInt32">
            <summary>Legt die Shim von Father.SetPlayerWeaponAmmo(Father this, Player player, WeaponHash weaponHash, Int32 ammo) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetResourceSettingStringStringObject">
            <summary>Legt die Shim von Father.SetResourceSetting(Father this, String resource, String setting, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetSettingScriptStringObject">
            <summary>Legt die Shim von Father.SetSetting(Father this, Script scriptEngine, String settingName, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetTextLabelColorNetHandleInt32Int32Int32Int32">
            <summary>Legt die Shim von Father.SetTextLabelColor(Father this, NetHandle label, Int32 red, Int32 green, Int32 blue, Int32 alpha) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetTextLabelRangeNetHandleSingle">
            <summary>Legt die Shim von Father.SetTextLabelRange(Father this, NetHandle label, Single newRange) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetTextLabelSeethroughNetHandleBoolean">
            <summary>Legt die Shim von Father.SetTextLabelSeethrough(Father this, NetHandle label, Boolean seethrough) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetTextLabelTextNetHandleString">
            <summary>Legt die Shim von Father.SetTextLabelText(Father this, NetHandle label, String newText) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetTimeInt32Int32Int32">
            <summary>Legt die Shim von Father.SetTime(Father this, Int32 hours, Int32 minutes, Int32 seconds) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleBodyHealthNetHandleSingle">
            <summary>Legt die Shim von Father.SetVehicleBodyHealth(Father this, NetHandle vehicle, Single health) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleBulletproofTyresNetHandleBoolean">
            <summary>Legt die Shim von Father.SetVehicleBulletproofTyres(Father this, NetHandle vehicle, Boolean state) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleCustomPrimaryColorNetHandleInt32Int32Int32">
            <summary>Legt die Shim von Father.SetVehicleCustomPrimaryColor(Father this, NetHandle vehicle, Int32 red, Int32 green, Int32 blue) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleCustomSecondaryColorNetHandleInt32Int32Int32">
            <summary>Legt die Shim von Father.SetVehicleCustomSecondaryColor(Father this, NetHandle vehicle, Int32 red, Int32 green, Int32 blue) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleCustomTiresNetHandleBoolean">
            <summary>Legt die Shim von Father.SetVehicleCustomTires(Father this, NetHandle vehicle, Boolean toggle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleDashboardColorNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehicleDashboardColor(Father this, NetHandle vehicle, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleEngineHealthNetHandleSingle">
            <summary>Legt die Shim von Father.SetVehicleEngineHealth(Father this, NetHandle vehicle, Single health) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleEnginePowerMultiplierNetHandleSingle">
            <summary>Legt die Shim von Father.SetVehicleEnginePowerMultiplier(Father this, NetHandle vehicle, Single mult) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleEngineStatusNetHandleBoolean">
            <summary>Legt die Shim von Father.SetVehicleEngineStatus(Father this, NetHandle vehicle, Boolean turnedOn) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleEngineTorqueMultiplierNetHandleSingle">
            <summary>Legt die Shim von Father.SetVehicleEngineTorqueMultiplier(Father this, NetHandle vehicle, Single mult) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleExtraNetHandleInt32Boolean">
            <summary>Legt die Shim von Father.SetVehicleExtra(Father this, NetHandle vehicle, Int32 slot, Boolean enabled) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleHealthNetHandleSingle">
            <summary>Legt die Shim von Father.SetVehicleHealth(Father this, NetHandle vehicle, Single health) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleLiveryNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehicleLivery(Father this, NetHandle vehicle, Int32 livery) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleLockedNetHandleBoolean">
            <summary>Legt die Shim von Father.SetVehicleLocked(Father this, NetHandle vehicle, Boolean locked) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleModNetHandleInt32Int32">
            <summary>Legt die Shim von Father.SetVehicleMod(Father this, NetHandle vehicle, Int32 modType, Int32 mod) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleNeonColorNetHandleInt32Int32Int32">
            <summary>Legt die Shim von Father.SetVehicleNeonColor(Father this, NetHandle vehicle, Int32 r, Int32 g, Int32 b) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleNeonStateNetHandleBoolean">
            <summary>Legt die Shim von Father.SetVehicleNeonState(Father this, NetHandle vehicle, Boolean turnedOn) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleNumberPlateNetHandleString">
            <summary>Legt die Shim von Father.SetVehicleNumberPlate(Father this, NetHandle vehicle, String plate) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleNumberPlateStyleNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehicleNumberPlateStyle(Father this, NetHandle vehicle, Int32 style) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehiclePearlescentColorNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehiclePearlescentColor(Father this, NetHandle vehicle, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehiclePrimaryColorNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehiclePrimaryColor(Father this, NetHandle vehicle, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehiclePrimaryPaintNetHandleInt32Int32">
            <summary>Legt die Shim von Father.SetVehiclePrimaryPaint(Father this, NetHandle vehicle, Int32 paintType, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleSecondaryColorNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehicleSecondaryColor(Father this, NetHandle vehicle, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleSecondaryPaintNetHandleInt32Int32">
            <summary>Legt die Shim von Father.SetVehicleSecondaryPaint(Father this, NetHandle vehicle, Int32 paintType, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleSirenStateNetHandleBoolean">
            <summary>Legt die Shim von Father.SetVehicleSirenState(Father this, NetHandle vehicle, Boolean state) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleSpecialLightStatusNetHandleBoolean">
            <summary>Legt die Shim von Father.SetVehicleSpecialLightStatus(Father this, NetHandle vehicle, Boolean turnedOn) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleTrimColorNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehicleTrimColor(Father this, NetHandle vehicle, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleTyreSmokeColorNetHandleColor">
            <summary>Legt die Shim von Father.SetVehicleTyreSmokeColor(Father this, NetHandle vehicle, Color color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleWheelColorNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehicleWheelColor(Father this, NetHandle vehicle, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleWheelTypeNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehicleWheelType(Father this, NetHandle vehicle, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetVehicleWindowTintNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehicleWindowTint(Father this, NetHandle vehicle, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetWeatherString">
            <summary>Legt die Shim von Father.SetWeather(Father this, String weather) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetWeatherWeather">
            <summary>Legt die Shim von Father.SetWeather(Father this, Weather weather) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetWorldDataStringObject">
            <summary>Legt die Shim von Father.SetWorldData(Father this, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SetWorldSharedDataStringObject">
            <summary>Legt die Shim von Father.SetWorldSharedData(Father this, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SpawnPlayerPlayerVector3Single">
            <summary>Legt die Shim von Father.SpawnPlayer(Father this, Player player, Vector3 pos, Single heading) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.SpawnVehicleNetHandleVector3Single">
            <summary>Legt die Shim von Father.SpawnVehicle(Father this, NetHandle vehicle, Vector3 position, Single heading) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.StartResourceString">
            <summary>Legt die Shim von Father.StartResource(Father this, String resourceName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.StopPlayerAnimationPlayer">
            <summary>Legt die Shim von Father.StopPlayerAnimation(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.StopResourceString">
            <summary>Legt die Shim von Father.StopResource(Father this, String name) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.ToJsonObject">
            <summary>Legt die Shim von Father.ToJson(Father this, Object data) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.TriggerClientEventForAllStringObjectArray">
            <summary>Legt die Shim von Father.TriggerClientEventForAll(Father this, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.TriggerClientEventInDimensionUInt32StringObjectArray">
            <summary>Legt die Shim von Father.TriggerClientEventInDimension(Father this, UInt32 dimension, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.TriggerClientEventInRangeVector3SingleStringObjectArray">
            <summary>Legt die Shim von Father.TriggerClientEventInRange(Father this, Vector3 pos, Single range, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.TriggerClientEventPlayerStringObjectArray">
            <summary>Legt die Shim von Father.TriggerClientEvent(Father this, Player player, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.TriggerClientEventToPlayersPlayerArrayStringObjectArray">
            <summary>Legt die Shim von Father.TriggerClientEventToPlayers(Father this, Player[] players, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.UnregisterString">
            <summary>Legt die Shim von Father.Unregister(Father this, String eventName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.UpdatePlayerHeadBlendPlayerSingleSingleSingle">
            <summary>Legt die Shim von Father.UpdatePlayerHeadBlend(Father this, Player player, Single shapeMix, Single skinMix, Single thirdMix) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.VehicleNameToModelString">
            <summary>Legt die Shim von Father.VehicleNameToModel(Father this, String modelName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.WarpPlayerOutOfVehiclePlayer">
            <summary>Legt die Shim von Father.WarpPlayerOutOfVehicle(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.AllInstances.WeaponNameToModelString">
            <summary>Legt die Shim von Father.WeaponNameToModel(Father this, String modelName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.BanPlayerPlayer">
            <summary>Legt die Shim von Father.BanPlayer(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.BanPlayerPlayerString">
            <summary>Legt die Shim von Father.BanPlayer(Father this, Player player, String reason) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IACL)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IBlip)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IChat)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.ICheckpoint)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IClientEvent)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IColShape)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IData)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IEntity)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IExplosion)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IMarker)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.INative)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.INotification)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IObject)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IParticle)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IPed)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IPickup)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IPlayer)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IPools)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IResource)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IServer)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.ITextLabel)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IUtil)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IVehicle)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.Bind(GTANetworkMethods.IWorld)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CallScriptStringStringObjectArray">
            <summary>Legt die Shim von Father.Call(Father this, Script scriptEngine, String className, String methodName, Object[] arguments) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.ClearPedTasksPed">
            <summary>Legt die Shim von Father.ClearPedTasks(Father this, Ped ped) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.ClearPlayerAccessoryPlayerInt32">
            <summary>Legt die Shim von Father.ClearPlayerAccessory(Father this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.ClearPlayerTasksPlayer">
            <summary>Legt die Shim von Father.ClearPlayerTasks(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.ConsoleOutputString">
            <summary>Legt die Shim von Father.ConsoleOutput(Father this, String text) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.ConsoleOutputStringObjectArray">
            <summary>Legt die Shim von Father.ConsoleOutput(Father this, String text, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.Constructor">
            <summary>Legt die Shim von Father.Father(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreatCircleColShapeSingleSingleSingleUInt32">
            <summary>Legt die Shim von Father.CreatCircleColShape(Father this, Single x, Single y, Single range, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.Create2DColShapeSingleSingleSingleSingleUInt32">
            <summary>Legt die Shim von Father.Create2DColShape(Father this, Single x, Single y, Single width, Single height, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.Create3DColShapeVector3Vector3UInt32">
            <summary>Legt die Shim von Father.Create3DColShape(Father this, Vector3 start, Vector3 end, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateBlipInt32Vector3SingleByteStringByteSingleBooleanInt16UInt32">
            <summary>Legt die Shim von Father.CreateBlip(Father this, Int32 sprite, Vector3 position, Single scale, Byte color, String name, Byte alpha, Single drawDistance, Boolean shortRange, Int16 rotation, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateBlipNetHandle">
            <summary>Legt die Shim von Father.CreateBlip(Father this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateBlipUInt32Vector3SingleByteStringByteSingleBooleanInt16UInt32">
            <summary>Legt die Shim von Father.CreateBlip(Father this, UInt32 sprite, Vector3 position, Single scale, Byte color, String name, Byte alpha, Single drawDistance, Boolean shortRange, Int16 rotation, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateBlipVector3SingleUInt32">
            <summary>Legt die Shim von Father.CreateBlip(Father this, Vector3 pos, Single range, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateBlipVector3UInt32">
            <summary>Legt die Shim von Father.CreateBlip(Father this, Vector3 pos, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateCheckpointInt32Vector3Vector3SingleColorUInt32">
            <summary>Legt die Shim von Father.CreateCheckpoint(Father this, Int32 model, Vector3 pos, Vector3 dir, Single scale, Color color, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateCheckpointUInt32Vector3Vector3SingleColorUInt32">
            <summary>Legt die Shim von Father.CreateCheckpoint(Father this, UInt32 model, Vector3 pos, Vector3 dir, Single scale, Color color, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateCylinderColShapeVector3SingleSingleUInt32">
            <summary>Legt die Shim von Father.CreateCylinderColShape(Father this, Vector3 position, Single range, Single height, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateExplosionExplosionTypeVector3SingleUInt32">
            <summary>Legt die Shim von Father.CreateExplosion(Father this, ExplosionType explosionType, Vector3 position, Single damageScale, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateLoopedParticleEffectOnEntityStringStringNetHandleVector3Vector3SingleInt32UInt32">
            <summary>Legt die Shim von Father.CreateLoopedParticleEffectOnEntity(Father this, String ptfxLib, String ptfxName, NetHandle entity, Vector3 offset, Vector3 rotation, Single scale, Int32 bone, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateLoopedParticleEffectOnPositionStringStringVector3Vector3SingleUInt32">
            <summary>Legt die Shim von Father.CreateLoopedParticleEffectOnPosition(Father this, String ptfxLib, String ptfxName, Vector3 position, Vector3 rotation, Single scale, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateMarkerInt32Vector3Vector3Vector3SingleColorBooleanUInt32">
            <summary>Legt die Shim von Father.CreateMarker(Father this, Int32 markerType, Vector3 pos, Vector3 dir, Vector3 rot, Single scale, Color color, Boolean bobUpAndDown, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateMarkerUInt32Vector3Vector3Vector3SingleColorBooleanUInt32">
            <summary>Legt die Shim von Father.CreateMarker(Father this, UInt32 markerType, Vector3 pos, Vector3 dir, Vector3 rot, Single scale, Color color, Boolean bobUpAndDown, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateObjectInt32Vector3QuaternionUInt32">
            <summary>Legt die Shim von Father.CreateObject(Father this, Int32 model, Vector3 pos, Quaternion rot, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateObjectInt32Vector3Vector3ByteUInt32">
            <summary>Legt die Shim von Father.CreateObject(Father this, Int32 model, Vector3 pos, Vector3 rot, Byte alpha, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateObjectUInt32Vector3QuaternionUInt32">
            <summary>Legt die Shim von Father.CreateObject(Father this, UInt32 model, Vector3 pos, Quaternion rot, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateObjectUInt32Vector3Vector3ByteUInt32">
            <summary>Legt die Shim von Father.CreateObject(Father this, UInt32 model, Vector3 pos, Vector3 rot, Byte alpha, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateOwnedExplosionPlayerExplosionTypeVector3SingleUInt32">
            <summary>Legt die Shim von Father.CreateOwnedExplosion(Father this, Player owner, ExplosionType explosionType, Vector3 position, Single damageScale, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateOwnedProjectilePlayerWeaponHashVector3Vector3Int32SingleUInt32">
            <summary>Legt die Shim von Father.CreateOwnedProjectile(Father this, Player owner, WeaponHash weapon, Vector3 start, Vector3 target, Int32 damage, Single speed, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateParticleEffectOnEntityStringStringNetHandleVector3Vector3SingleInt32UInt32">
            <summary>Legt die Shim von Father.CreateParticleEffectOnEntity(Father this, String ptfxLibrary, String ptfxName, NetHandle entity, Vector3 offset, Vector3 rotation, Single scale, Int32 boneIndex, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateParticleEffectOnPositionStringStringVector3Vector3SingleUInt32">
            <summary>Legt die Shim von Father.CreateParticleEffectOnPosition(Father this, String ptfxLibrary, String ptfxName, Vector3 position, Vector3 rotation, Single scale, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreatePedPedHashVector3SingleUInt32">
            <summary>Legt die Shim von Father.CreatePed(Father this, PedHash model, Vector3 pos, Single heading, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreatePedUInt32Vector3SingleBooleanBooleanBooleanBooleanUInt32">
            <summary>Legt die Shim von Father.CreatePed(Father this, UInt32 model, Vector3 pos, Single heading, Boolean dynamic, Boolean invincible, Boolean frozen, Boolean controlLocked, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreatePedUInt32Vector3SingleUInt32">
            <summary>Legt die Shim von Father.CreatePed(Father this, UInt32 model, Vector3 pos, Single heading, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreatePickupInt32Vector3Vector3BooleanUInt32UInt32">
            <summary>Legt die Shim von Father.CreatePickup(Father this, Int32 model, Vector3 pos, Vector3 rot, Boolean vehicle, UInt32 respawnTime, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreatePickupPickupHashVector3Vector3Int32UInt32UInt32">
            <summary>Legt die Shim von Father.CreatePickup(Father this, PickupHash pickupHash, Vector3 pos, Vector3 rot, Int32 amount, UInt32 respawnTime, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreatePickupUInt32Vector3Vector3BooleanUInt32UInt32">
            <summary>Legt die Shim von Father.CreatePickup(Father this, UInt32 model, Vector3 pos, Vector3 rot, Boolean vehicle, UInt32 respawnTime, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateProjectileWeaponHashVector3Vector3Int32SingleUInt32">
            <summary>Legt die Shim von Father.CreateProjectile(Father this, WeaponHash weapon, Vector3 start, Vector3 target, Int32 damage, Single speed, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateSphereColShapeVector3SingleUInt32">
            <summary>Legt die Shim von Father.CreateSphereColShape(Father this, Vector3 position, Single range, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateTextLabelStringVector3SingleSingleInt32ColorBooleanUInt32">
            <summary>Legt die Shim von Father.CreateTextLabel(Father this, String text, Vector3 pos, Single range, Single size, Int32 font, Color color, Boolean entitySeethrough, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateVehicleInt32Vector3SingleInt32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Father.CreateVehicle(Father this, Int32 model, Vector3 pos, Single rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateVehicleInt32Vector3Vector3Int32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Father.CreateVehicle(Father this, Int32 model, Vector3 pos, Vector3 rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateVehicleUInt32Vector3SingleInt32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Father.CreateVehicle(Father this, UInt32 model, Vector3 pos, Single rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateVehicleVehicleHashVector3SingleColorColorStringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Father.CreateVehicle(Father this, VehicleHash model, Vector3 pos, Single rot, Color color1, Color color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateVehicleVehicleHashVector3SingleInt32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Father.CreateVehicle(Father this, VehicleHash model, Vector3 pos, Single rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.CreateVehicleVehicleHashVector3Vector3Int32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Father.CreateVehicle(Father this, VehicleHash model, Vector3 pos, Vector3 rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.DeleteColShapeColShape">
            <summary>Legt die Shim von Father.DeleteColShape(Father this, ColShape shape) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.DeleteEntityNetHandle">
            <summary>Legt die Shim von Father.DeleteEntity(Father this, NetHandle netHandle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.DeletePlayerWorldPropPlayerInt32Vector3Single">
            <summary>Legt die Shim von Father.DeletePlayerWorldProp(Father this, Player player, Int32 modelHash, Vector3 position, Single radius) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.DeletePlayerWorldPropPlayerUInt32Vector3Single">
            <summary>Legt die Shim von Father.DeletePlayerWorldProp(Father this, Player player, UInt32 modelHash, Vector3 position, Single radius) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.DeleteWorldPropInt32Vector3Single">
            <summary>Legt die Shim von Father.DeleteWorldProp(Father this, Int32 modelHash, Vector3 position, Single radius) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.DeleteWorldPropUInt32Vector3Single">
            <summary>Legt die Shim von Father.DeleteWorldProp(Father this, UInt32 modelHash, Vector3 position, Single radius) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.DoesConfigExistScriptString">
            <summary>Legt die Shim von Father.DoesConfigExist(Father this, Script scriptEngine, String configName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.DoesEntityExistForPlayerPlayerNetHandle">
            <summary>Legt die Shim von Father.DoesEntityExistForPlayer(Father this, Player player, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.DoesEntityExistNetHandle">
            <summary>Legt die Shim von Father.DoesEntityExist(Father this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.DoesPlayerHaveAccessToCommandPlayerString">
            <summary>Legt die Shim von Father.DoesPlayerHaveAccessToCommand(Father this, Player player, String cmd) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.DoesResourceExistString">
            <summary>Legt die Shim von Father.DoesResourceExist(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.EvalPlayerString">
            <summary>Legt die Shim von Father.Eval(Father this, Player player, String code) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.ExplodeVehicleVehicle">
            <summary>Legt die Shim von Father.ExplodeVehicle(Father this, Vehicle vehicle) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.FetchNativeFromPlayerOf1PlayerHashObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkAPI.Player,GTANetworkAPI.Hash,System.Object[],``0})">
            <summary>Legt die Shim von Father.FetchNativeFromPlayer(Father this, Player player, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.FetchNativeFromPlayerOf1PlayerUInt64ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkAPI.Player,System.UInt64,System.Object[],``0})">
            <summary>Legt die Shim von Father.FetchNativeFromPlayer(Father this, Player player, UInt64 longHash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetAllEntityDataEntity">
            <summary>Legt die Shim von Father.GetAllEntityData(Father this, Entity entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetAllEntitySharedDataEntity">
            <summary>Legt die Shim von Father.GetAllEntitySharedData(Father this, Entity entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetAllPlayers">
            <summary>Legt die Shim von Father.GetAllPlayers(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetAllResources">
            <summary>Legt die Shim von Father.GetAllResources(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetAllWeaponComponentsWeaponHash">
            <summary>Legt die Shim von Father.GetAllWeaponComponents(Father this, WeaponHash weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetAllWorldData">
            <summary>Legt die Shim von Father.GetAllWorldData(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetAllWorldSharedData">
            <summary>Legt die Shim von Father.GetAllWorldSharedData(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetBlipColorNetHandle">
            <summary>Legt die Shim von Father.GetBlipColor(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetBlipNameNetHandle">
            <summary>Legt die Shim von Father.GetBlipName(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetBlipPositionNetHandle">
            <summary>Legt die Shim von Father.GetBlipPosition(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetBlipRouteColorNetHandle">
            <summary>Legt die Shim von Father.GetBlipRouteColor(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetBlipRouteVisibleNetHandle">
            <summary>Legt die Shim von Father.GetBlipRouteVisible(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetBlipScaleNetHandle">
            <summary>Legt die Shim von Father.GetBlipScale(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetBlipShortRangeNetHandle">
            <summary>Legt die Shim von Father.GetBlipShortRange(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetBlipSpriteNetHandle">
            <summary>Legt die Shim von Father.GetBlipSprite(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetBlipTransparencyNetHandle">
            <summary>Legt die Shim von Father.GetBlipTransparency(Father this, NetHandle blip) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetCheckpointColorNetHandle">
            <summary>Legt die Shim von Father.GetCheckpointColor(Father this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetCheckpointDirectionNetHandle">
            <summary>Legt die Shim von Father.GetCheckpointDirection(Father this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetCheckpointScaleNetHandle">
            <summary>Legt die Shim von Father.GetCheckpointScale(Father this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetCurrentGamemode">
            <summary>Legt die Shim von Father.GetCurrentGamemode(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetEntityDimensionNetHandle">
            <summary>Legt die Shim von Father.GetEntityDimension(Father this, NetHandle entity) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.GetEntityFromHandleOf1NetHandle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkAPI.NetHandle,``0})">
            <summary>Legt die Shim von Father.GetEntityFromHandle(Father this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetEntityModelNetHandle">
            <summary>Legt die Shim von Father.GetEntityModel(Father this, NetHandle ent) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetEntityPositionNetHandle">
            <summary>Legt die Shim von Father.GetEntityPosition(Father this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetEntityRotationNetHandle">
            <summary>Legt die Shim von Father.GetEntityRotation(Father this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetEntityTransparencyNetHandle">
            <summary>Legt die Shim von Father.GetEntityTransparency(Father this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetEntityTypeNetHandle">
            <summary>Legt die Shim von Father.GetEntityType(Father this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetEntityVelocityNetHandle">
            <summary>Legt die Shim von Father.GetEntityVelocity(Father this, NetHandle entity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetHashKeyString">
            <summary>Legt die Shim von Father.GetHashKey(Father this, String input) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetHashSha256String">
            <summary>Legt die Shim von Father.GetHashSha256(Father this, String input) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetMapGamemodesString">
            <summary>Legt die Shim von Father.GetMapGamemodes(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetMapsForGamemodeString">
            <summary>Legt die Shim von Father.GetMapsForGamemode(Father this, String gamemode) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetMarkerBobUpAndDownNetHandle">
            <summary>Legt die Shim von Father.GetMarkerBobUpAndDown(Father this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetMarkerColorNetHandle">
            <summary>Legt die Shim von Father.GetMarkerColor(Father this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetMarkerDirectionNetHandle">
            <summary>Legt die Shim von Father.GetMarkerDirection(Father this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetMarkerScaleNetHandle">
            <summary>Legt die Shim von Father.GetMarkerScale(Father this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetMarkerTypeNetHandle">
            <summary>Legt die Shim von Father.GetMarkerType(Father this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetMaxPlayers">
            <summary>Legt die Shim von Father.GetMaxPlayers(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPickupAmountNetHandle">
            <summary>Legt die Shim von Father.GetPickupAmount(Father this, NetHandle pickup) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPickupCustomModelNetHandle">
            <summary>Legt die Shim von Father.GetPickupCustomModel(Father this, NetHandle pickup) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPickupPickedUpNetHandle">
            <summary>Legt die Shim von Father.GetPickupPickedUp(Father this, NetHandle pickup) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerAccessoryDrawablePlayerInt32">
            <summary>Legt die Shim von Father.GetPlayerAccessoryDrawable(Father this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerAccessoryPlayerInt32">
            <summary>Legt die Shim von Father.GetPlayerAccessory(Father this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerAccessoryTexturePlayerInt32">
            <summary>Legt die Shim von Father.GetPlayerAccessoryTexture(Father this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerAclGroupPlayer">
            <summary>Legt die Shim von Father.GetPlayerAclGroup(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerAddressPlayer">
            <summary>Legt die Shim von Father.GetPlayerAddress(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerAimingPointPlayer">
            <summary>Legt die Shim von Father.GetPlayerAimingPoint(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerArmorPlayer">
            <summary>Legt die Shim von Father.GetPlayerArmor(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerClothesDrawablePlayerInt32">
            <summary>Legt die Shim von Father.GetPlayerClothesDrawable(Father this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerClothesPlayerInt32">
            <summary>Legt die Shim von Father.GetPlayerClothes(Father this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerClothesTexturePlayerInt32">
            <summary>Legt die Shim von Father.GetPlayerClothesTexture(Father this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerCurrentWeaponAmmoPlayer">
            <summary>Legt die Shim von Father.GetPlayerCurrentWeaponAmmo(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerCurrentWeaponPlayer">
            <summary>Legt die Shim von Father.GetPlayerCurrentWeapon(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerEyeColorPlayer">
            <summary>Legt die Shim von Father.GetPlayerEyeColor(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerFaceFeaturePlayerInt32">
            <summary>Legt die Shim von Father.GetPlayerFaceFeature(Father this, Player player, Int32 id) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerFromHandleNetHandle">
            <summary>Legt die Shim von Father.GetPlayerFromHandle(Father this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerFromNameString">
            <summary>Legt die Shim von Father.GetPlayerFromName(Father this, String name) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerHairColorPlayer">
            <summary>Legt die Shim von Father.GetPlayerHairColor(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerHeadBlendPlayer">
            <summary>Legt die Shim von Father.GetPlayerHeadBlend(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerHeadOverlayPlayerInt32">
            <summary>Legt die Shim von Father.GetPlayerHeadOverlay(Father this, Player player, Int32 overlayId) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerHealthPlayer">
            <summary>Legt die Shim von Father.GetPlayerHealth(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerNamePlayer">
            <summary>Legt die Shim von Father.GetPlayerName(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerPingPlayer">
            <summary>Legt die Shim von Father.GetPlayerPing(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerSerialPlayer">
            <summary>Legt die Shim von Father.GetPlayerSerial(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerSocialClubNamePlayer">
            <summary>Legt die Shim von Father.GetPlayerSocialClubName(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerVehiclePlayer">
            <summary>Legt die Shim von Father.GetPlayerVehicle(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerVehicleSeatPlayer">
            <summary>Legt die Shim von Father.GetPlayerVehicleSeat(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerVelocityPlayer">
            <summary>Legt die Shim von Father.GetPlayerVelocity(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerWeaponAmmoPlayerWeaponHash">
            <summary>Legt die Shim von Father.GetPlayerWeaponAmmo(Father this, Player player, WeaponHash weaponHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayerWeaponsPlayer">
            <summary>Legt die Shim von Father.GetPlayerWeapons(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayersInRadiusOfPlayerDoublePlayer">
            <summary>Legt die Shim von Father.GetPlayersInRadiusOfPlayer(Father this, Double radius, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetPlayersInRadiusOfPositionDoubleVector3">
            <summary>Legt die Shim von Father.GetPlayersInRadiusOfPosition(Father this, Double radius, Vector3 position) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetResourceAuthorString">
            <summary>Legt die Shim von Father.GetResourceAuthor(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetResourceCommandInfoStringString">
            <summary>Legt die Shim von Father.GetResourceCommandInfo(Father this, String resource, String command) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetResourceCommandInfosString">
            <summary>Legt die Shim von Father.GetResourceCommandInfos(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetResourceCommandsString">
            <summary>Legt die Shim von Father.GetResourceCommands(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetResourceDescriptionString">
            <summary>Legt die Shim von Father.GetResourceDescription(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetResourceFolderScript">
            <summary>Legt die Shim von Father.GetResourceFolder(Father this, Script scriptEngine) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetResourceNameString">
            <summary>Legt die Shim von Father.GetResourceName(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetResourceSettingDescriptionStringString">
            <summary>Legt die Shim von Father.GetResourceSettingDescription(Father this, String resource, String setting) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.GetResourceSettingOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,``0})">
            <summary>Legt die Shim von Father.GetResourceSetting(Father this, String resource, String setting) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetResourceSettingsString">
            <summary>Legt die Shim von Father.GetResourceSettings(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetResourceTypeString">
            <summary>Legt die Shim von Father.GetResourceType(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetResourceVersionString">
            <summary>Legt die Shim von Father.GetResourceVersion(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetRunningResources">
            <summary>Legt die Shim von Father.GetRunningResources(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetServerName">
            <summary>Legt die Shim von Father.GetServerName(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetServerPort">
            <summary>Legt die Shim von Father.GetServerPort(Father this) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimFather.GetSettingOf1ScriptString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkAPI.Script,System.String,``0})">
            <summary>Legt die Shim von Father.GetSetting(Father this, Script scriptEngine, String settingName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetTextLabelColorNetHandle">
            <summary>Legt die Shim von Father.GetTextLabelColor(Father this, NetHandle label) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetTextLabelRangeNetHandle">
            <summary>Legt die Shim von Father.GetTextLabelRange(Father this, NetHandle label) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetTextLabelSeethroughNetHandle">
            <summary>Legt die Shim von Father.GetTextLabelSeethrough(Father this, NetHandle label) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetTextLabelTextNetHandle">
            <summary>Legt die Shim von Father.GetTextLabelText(Father this, NetHandle label) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetThisResourceScript">
            <summary>Legt die Shim von Father.GetThisResource(Father this, Script scriptEngine) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetTime">
            <summary>Legt die Shim von Father.GetTime(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleBodyHealthNetHandle">
            <summary>Legt die Shim von Father.GetVehicleBodyHealth(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleBulletproofTyresNetHandle">
            <summary>Legt die Shim von Father.GetVehicleBulletproofTyres(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleClassNameInt32">
            <summary>Legt die Shim von Father.GetVehicleClassName(Father this, Int32 classId) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleClassVehicleHash">
            <summary>Legt die Shim von Father.GetVehicleClass(Father this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleCustomPrimaryColorNetHandle">
            <summary>Legt die Shim von Father.GetVehicleCustomPrimaryColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleCustomSecondaryColorNetHandle">
            <summary>Legt die Shim von Father.GetVehicleCustomSecondaryColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleCustomTiresNetHandle">
            <summary>Legt die Shim von Father.GetVehicleCustomTires(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleDashboardColorNetHandle">
            <summary>Legt die Shim von Father.GetVehicleDashboardColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleDisplayNameVehicleHash">
            <summary>Legt die Shim von Father.GetVehicleDisplayName(Father this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleDriverNetHandle">
            <summary>Legt die Shim von Father.GetVehicleDriver(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleEngineHealthNetHandle">
            <summary>Legt die Shim von Father.GetVehicleEngineHealth(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleEnginePowerMultiplierNetHandle">
            <summary>Legt die Shim von Father.GetVehicleEnginePowerMultiplier(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleEngineStatusNetHandle">
            <summary>Legt die Shim von Father.GetVehicleEngineStatus(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleEngineTorqueMultiplierNetHandle">
            <summary>Legt die Shim von Father.GetVehicleEngineTorqueMultiplier(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleExtraNetHandleInt32">
            <summary>Legt die Shim von Father.GetVehicleExtra(Father this, NetHandle vehicle, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleHealthNetHandle">
            <summary>Legt die Shim von Father.GetVehicleHealth(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleLiveryNetHandle">
            <summary>Legt die Shim von Father.GetVehicleLivery(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleLockedNetHandle">
            <summary>Legt die Shim von Father.GetVehicleLocked(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleMaxAccelerationVehicleHash">
            <summary>Legt die Shim von Father.GetVehicleMaxAcceleration(Father this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleMaxBrakingVehicleHash">
            <summary>Legt die Shim von Father.GetVehicleMaxBraking(Father this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleMaxPassengersVehicleHash">
            <summary>Legt die Shim von Father.GetVehicleMaxPassengers(Father this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleMaxSpeedVehicleHash">
            <summary>Legt die Shim von Father.GetVehicleMaxSpeed(Father this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleMaxTractionVehicleHash">
            <summary>Legt die Shim von Father.GetVehicleMaxTraction(Father this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleModNetHandleInt32">
            <summary>Legt die Shim von Father.GetVehicleMod(Father this, NetHandle vehicle, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleNeonColorNetHandle">
            <summary>Legt die Shim von Father.GetVehicleNeonColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleNeonStateNetHandle">
            <summary>Legt die Shim von Father.GetVehicleNeonState(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleNumberPlateNetHandle">
            <summary>Legt die Shim von Father.GetVehicleNumberPlate(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleNumberPlateStyleNetHandle">
            <summary>Legt die Shim von Father.GetVehicleNumberPlateStyle(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleOccupantsNetHandle">
            <summary>Legt die Shim von Father.GetVehicleOccupants(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehiclePearlescentColorNetHandle">
            <summary>Legt die Shim von Father.GetVehiclePearlescentColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehiclePrimaryColorNetHandle">
            <summary>Legt die Shim von Father.GetVehiclePrimaryColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehiclePrimaryPaintNetHandle">
            <summary>Legt die Shim von Father.GetVehiclePrimaryPaint(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleSecondaryColorNetHandle">
            <summary>Legt die Shim von Father.GetVehicleSecondaryColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleSecondaryPaintNetHandle">
            <summary>Legt die Shim von Father.GetVehicleSecondaryPaint(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleSirenStateNetHandle">
            <summary>Legt die Shim von Father.GetVehicleSirenState(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleSpecialLightStatusNetHandle">
            <summary>Legt die Shim von Father.GetVehicleSpecialLightStatus(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleTrailerNetHandle">
            <summary>Legt die Shim von Father.GetVehicleTrailer(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleTraileredByNetHandle">
            <summary>Legt die Shim von Father.GetVehicleTraileredBy(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleTrimColorNetHandle">
            <summary>Legt die Shim von Father.GetVehicleTrimColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleTyreSmokeColorNetHandle">
            <summary>Legt die Shim von Father.GetVehicleTyreSmokeColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleWheelColorNetHandle">
            <summary>Legt die Shim von Father.GetVehicleWheelColor(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleWheelTypeNetHandle">
            <summary>Legt die Shim von Father.GetVehicleWheelType(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetVehicleWindowTintNetHandle">
            <summary>Legt die Shim von Father.GetVehicleWindowTint(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GetWeather">
            <summary>Legt die Shim von Father.GetWeather(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.GivePlayerWeaponPlayerWeaponHashInt32">
            <summary>Legt die Shim von Father.GivePlayerWeapon(Father this, Player player, WeaponHash weaponHash, Int32 ammo) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.HasEntityDataEntityString">
            <summary>Legt die Shim von Father.HasEntityData(Father this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.HasEntitySharedDataEntityString">
            <summary>Legt die Shim von Father.HasEntitySharedData(Father this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.HasResourceSettingStringString">
            <summary>Legt die Shim von Father.HasResourceSetting(Father this, String resource, String settingName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.HasSettingScriptString">
            <summary>Legt die Shim von Father.HasSetting(Father this, Script scriptEngine, String settingName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.HasWorldDataString">
            <summary>Legt die Shim von Father.HasWorldData(Father this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.HasWorldSharedDataString">
            <summary>Legt die Shim von Father.HasWorldSharedData(Father this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.IsAclEnabled">
            <summary>Legt die Shim von Father.IsAclEnabled(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.IsCefEnabledPlayer">
            <summary>Legt die Shim von Father.IsCefEnabled(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.IsMediaStreamEnabledPlayer">
            <summary>Legt die Shim von Father.IsMediaStreamEnabled(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.IsPasswordProtected">
            <summary>Legt die Shim von Father.IsPasswordProtected(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.IsPlayerAimingPlayer">
            <summary>Legt die Shim von Father.IsPlayerAiming(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.IsPlayerConnectedPlayer">
            <summary>Legt die Shim von Father.IsPlayerConnected(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.IsPlayerDeadPlayer">
            <summary>Legt die Shim von Father.IsPlayerDead(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.IsPlayerInAnyVehiclePlayer">
            <summary>Legt die Shim von Father.IsPlayerInAnyVehicle(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.IsPlayerInCoverPlayer">
            <summary>Legt die Shim von Father.IsPlayerInCover(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.IsPlayerLoggedInPlayer">
            <summary>Legt die Shim von Father.IsPlayerLoggedIn(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.IsPlayerOnLadderPlayer">
            <summary>Legt die Shim von Father.IsPlayerOnLadder(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.IsPlayerReloadingPlayer">
            <summary>Legt die Shim von Father.IsPlayerReloading(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.IsPlayerRespawningPlayer">
            <summary>Legt die Shim von Father.IsPlayerRespawning(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.IsPlayerShootingPlayer">
            <summary>Legt die Shim von Father.IsPlayerShooting(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.IsPointWithinColshapeColShapeVector3">
            <summary>Legt die Shim von Father.IsPointWithinColshape(Father this, ColShape shape, Vector3 point) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.IsResourceRunningString">
            <summary>Legt die Shim von Father.IsResourceRunning(Father this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.KickPlayerPlayer">
            <summary>Legt die Shim von Father.KickPlayer(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.KickPlayerPlayerString">
            <summary>Legt die Shim von Father.KickPlayer(Father this, Player player, String reason) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.KickPlayerSilentPlayer">
            <summary>Legt die Shim von Father.KickPlayerSilent(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.KickPlayerSilentPlayerString">
            <summary>Legt die Shim von Father.KickPlayerSilent(Father this, Player player, String reason) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.LoadXmlString">
            <summary>Legt die Shim von Father.LoadXml(Father this, String path) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.LoginPlayerPlayerString">
            <summary>Legt die Shim von Father.LoginPlayer(Father this, Player player, String password) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.LogoutPlayerPlayer">
            <summary>Legt die Shim von Father.LogoutPlayer(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.PedNameToModelString">
            <summary>Legt die Shim von Father.PedNameToModel(Father this, String modelName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.PickupNameToModelString">
            <summary>Legt die Shim von Father.PickupNameToModel(Father this, String modelName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.PlayPedAnimationPedBooleanStringString">
            <summary>Legt die Shim von Father.PlayPedAnimation(Father this, Ped ped, Boolean looped, String dictionary, String name) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.PlayPedScenarioPedString">
            <summary>Legt die Shim von Father.PlayPedScenario(Father this, Ped ped, String scenario) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.PlayPlayerAnimationPlayerInt32StringStringSingle">
            <summary>Legt die Shim von Father.PlayPlayerAnimation(Father this, Player player, Int32 flag, String animDict, String animName, Single speed) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.PlayPlayerScenarioPlayerString">
            <summary>Legt die Shim von Father.PlayPlayerScenario(Father this, Player player, String scenarioName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.RegisterMethodInfoStringObject">
            <summary>Legt die Shim von Father.Register(Father this, MethodInfo method, String eventName, Object classInstance) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.RemoveAllPlayerWeaponsPlayer">
            <summary>Legt die Shim von Father.RemoveAllPlayerWeapons(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.RemoveIplString">
            <summary>Legt die Shim von Father.RemoveIpl(Father this, String iplName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.RemovePlayerWeaponPlayerWeaponHash">
            <summary>Legt die Shim von Father.RemovePlayerWeapon(Father this, Player player, WeaponHash weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.RemoveVehicleModNetHandleInt32">
            <summary>Legt die Shim von Father.RemoveVehicleMod(Father this, NetHandle vehicle, Int32 modType) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.RepairVehicleNetHandle">
            <summary>Legt die Shim von Father.RepairVehicle(Father this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.RequestIplString">
            <summary>Legt die Shim von Father.RequestIpl(Father this, String iplName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.ResetEntityDataEntityString">
            <summary>Legt die Shim von Father.ResetEntityData(Father this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.ResetEntitySharedDataEntityString">
            <summary>Legt die Shim von Father.ResetEntitySharedData(Father this, Entity entity, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.ResetIplList">
            <summary>Legt die Shim von Father.ResetIplList(Father this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.ResetWorldDataString">
            <summary>Legt die Shim von Father.ResetWorldData(Father this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.ResetWorldSharedDataString">
            <summary>Legt die Shim von Father.ResetWorldSharedData(Father this, String key) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.RespawnPickupNetHandle">
            <summary>Legt die Shim von Father.RespawnPickup(Father this, NetHandle pickup) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendChatMessageToAllStringBoolean">
            <summary>Legt die Shim von Father.SendChatMessageToAll(Father this, String message, Boolean oldColors) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendChatMessageToAllStringStringBoolean">
            <summary>Legt die Shim von Father.SendChatMessageToAll(Father this, String sender, String message, Boolean oldColors) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendChatMessageToPlayerPlayerStringBoolean">
            <summary>Legt die Shim von Father.SendChatMessageToPlayer(Father this, Player player, String message, Boolean oldColors) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendChatMessageToPlayerPlayerStringStringBoolean">
            <summary>Legt die Shim von Father.SendChatMessageToPlayer(Father this, Player player, String sender, String message, Boolean oldColors) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendNativeToAllPlayersHashObjectArray">
            <summary>Legt die Shim von Father.SendNativeToAllPlayers(Father this, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendNativeToAllPlayersUInt64ObjectArray">
            <summary>Legt die Shim von Father.SendNativeToAllPlayers(Father this, UInt64 longHash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendNativeToPlayerPlayerHashObjectArray">
            <summary>Legt die Shim von Father.SendNativeToPlayer(Father this, Player player, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendNativeToPlayerPlayerUInt64ObjectArray">
            <summary>Legt die Shim von Father.SendNativeToPlayer(Father this, Player player, UInt64 longHash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendNativeToPlayersInDimensionUInt32HashObjectArray">
            <summary>Legt die Shim von Father.SendNativeToPlayersInDimension(Father this, UInt32 dimension, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendNativeToPlayersInDimensionUInt32UInt64ObjectArray">
            <summary>Legt die Shim von Father.SendNativeToPlayersInDimension(Father this, UInt32 dimension, UInt64 hash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendNativeToPlayersInRangeInDimensionVector3SingleUInt32HashObjectArray">
            <summary>Legt die Shim von Father.SendNativeToPlayersInRangeInDimension(Father this, Vector3 pos, Single range, UInt32 dimension, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendNativeToPlayersInRangeInDimensionVector3SingleUInt32UInt64ObjectArray">
            <summary>Legt die Shim von Father.SendNativeToPlayersInRangeInDimension(Father this, Vector3 pos, Single range, UInt32 dimension, UInt64 hash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendNativeToPlayersInRangeVector3SingleHashObjectArray">
            <summary>Legt die Shim von Father.SendNativeToPlayersInRange(Father this, Vector3 pos, Single range, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendNativeToPlayersInRangeVector3SingleUInt64ObjectArray">
            <summary>Legt die Shim von Father.SendNativeToPlayersInRange(Father this, Vector3 pos, Single range, UInt64 hash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendNotificationToAllStringBoolean">
            <summary>Legt die Shim von Father.SendNotificationToAll(Father this, String message, Boolean flashing) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendNotificationToPlayerPlayerStringBoolean">
            <summary>Legt die Shim von Father.SendNotificationToPlayer(Father this, Player player, String message, Boolean flashing) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendPictureNotificationToAllStringStringInt32Int32StringString">
            <summary>Legt die Shim von Father.SendPictureNotificationToAll(Father this, String body, String pic, Int32 flash, Int32 iconType, String sender, String subject) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SendPictureNotificationToPlayerPlayerStringStringInt32Int32StringString">
            <summary>Legt die Shim von Father.SendPictureNotificationToPlayer(Father this, Player player, String body, String pic, Int32 flash, Int32 iconType, String sender, String subject) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetBlipColorNetHandleInt32">
            <summary>Legt die Shim von Father.SetBlipColor(Father this, NetHandle blip, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetBlipNameNetHandleString">
            <summary>Legt die Shim von Father.SetBlipName(Father this, NetHandle blip, String name) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetBlipPositionNetHandleVector3">
            <summary>Legt die Shim von Father.SetBlipPosition(Father this, NetHandle blip, Vector3 newPos) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetBlipRouteColorNetHandleInt32">
            <summary>Legt die Shim von Father.SetBlipRouteColor(Father this, NetHandle blip, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetBlipRouteVisibleNetHandleBoolean">
            <summary>Legt die Shim von Father.SetBlipRouteVisible(Father this, NetHandle blip, Boolean visible) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetBlipScaleNetHandleSingle">
            <summary>Legt die Shim von Father.SetBlipScale(Father this, NetHandle blip, Single scale) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetBlipShortRangeNetHandleBoolean">
            <summary>Legt die Shim von Father.SetBlipShortRange(Father this, NetHandle blip, Boolean range) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetBlipSpriteNetHandleInt32">
            <summary>Legt die Shim von Father.SetBlipSprite(Father this, NetHandle blip, Int32 sprite) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetBlipSpriteNetHandleUInt32">
            <summary>Legt die Shim von Father.SetBlipSprite(Father this, NetHandle blip, UInt32 sprite) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetBlipTransparencyNetHandleInt32">
            <summary>Legt die Shim von Father.SetBlipTransparency(Father this, NetHandle blip, Int32 alpha) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetCheckpointColorNetHandleInt32Int32Int32Int32">
            <summary>Legt die Shim von Father.SetCheckpointColor(Father this, NetHandle marker, Int32 alpha, Int32 red, Int32 green, Int32 blue) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetCheckpointDirectionNetHandleVector3">
            <summary>Legt die Shim von Father.SetCheckpointDirection(Father this, NetHandle marker, Vector3 dir) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetCheckpointScaleNetHandleSingle">
            <summary>Legt die Shim von Father.SetCheckpointScale(Father this, NetHandle marker, Single scale) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetCommandErrorMessageString">
            <summary>Legt die Shim von Father.SetCommandErrorMessage(Father this, String msg) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetDefaultSpawnLocationVector3Single">
            <summary>Legt die Shim von Father.SetDefaultSpawnLocation(Father this, Vector3 location, Single heading) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetEntityDataEntityStringObject">
            <summary>Legt die Shim von Father.SetEntityData(Father this, Entity entity, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetEntityDimensionNetHandleUInt32">
            <summary>Legt die Shim von Father.SetEntityDimension(Father this, NetHandle entity, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetEntityModelNetHandleInt32">
            <summary>Legt die Shim von Father.SetEntityModel(Father this, NetHandle handle, Int32 modelHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetEntityModelNetHandleUInt32">
            <summary>Legt die Shim von Father.SetEntityModel(Father this, NetHandle handle, UInt32 modelHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetEntityPositionNetHandleVector3">
            <summary>Legt die Shim von Father.SetEntityPosition(Father this, NetHandle netHandle, Vector3 newPosition) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetEntityRotationNetHandleVector3">
            <summary>Legt die Shim von Father.SetEntityRotation(Father this, NetHandle netHandle, Vector3 newRotation) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetEntitySharedDataEntityStringObject">
            <summary>Legt die Shim von Father.SetEntitySharedData(Father this, Entity entity, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetEntityTransparencyNetHandleInt32">
            <summary>Legt die Shim von Father.SetEntityTransparency(Father this, NetHandle entity, Int32 newAlpha) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetEntityVelocityNetHandleVector3">
            <summary>Legt die Shim von Father.SetEntityVelocity(Father this, NetHandle netHandle, Vector3 newVelocity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetGamemodeNameString">
            <summary>Legt die Shim von Father.SetGamemodeName(Father this, String newName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetLogCommandParamParserExceptionsBoolean">
            <summary>Legt die Shim von Father.SetLogCommandParamParserExceptions(Father this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetLogRemoteEventParamParserExceptionsBoolean">
            <summary>Legt die Shim von Father.SetLogRemoteEventParamParserExceptions(Father this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetMarkerBobUpAndDownNetHandleBoolean">
            <summary>Legt die Shim von Father.SetMarkerBobUpAndDown(Father this, NetHandle marker, Boolean state) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetMarkerColorNetHandleInt32Int32Int32Int32">
            <summary>Legt die Shim von Father.SetMarkerColor(Father this, NetHandle marker, Int32 alpha, Int32 red, Int32 green, Int32 blue) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetMarkerDirectionNetHandleVector3">
            <summary>Legt die Shim von Father.SetMarkerDirection(Father this, NetHandle marker, Vector3 dir) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetMarkerScaleNetHandleSingle">
            <summary>Legt die Shim von Father.SetMarkerScale(Father this, NetHandle marker, Single scale) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetMarkerTypeNetHandleInt32">
            <summary>Legt die Shim von Father.SetMarkerType(Father this, NetHandle marker, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetMarkerTypeNetHandleUInt32">
            <summary>Legt die Shim von Father.SetMarkerType(Father this, NetHandle marker, UInt32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetPlayerAccessoryPlayerInt32Int32Int32">
            <summary>Legt die Shim von Father.SetPlayerAccessory(Father this, Player player, Int32 slot, Int32 drawable, Int32 texture) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetPlayerArmorPlayerInt32">
            <summary>Legt die Shim von Father.SetPlayerArmor(Father this, Player player, Int32 armor) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetPlayerClothesPlayerInt32Int32Int32">
            <summary>Legt die Shim von Father.SetPlayerClothes(Father this, Player player, Int32 slot, Int32 drawable, Int32 texture) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetPlayerCurrentWeaponAmmoPlayerInt32">
            <summary>Legt die Shim von Father.SetPlayerCurrentWeaponAmmo(Father this, Player player, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetPlayerCurrentWeaponPlayerWeaponHash">
            <summary>Legt die Shim von Father.SetPlayerCurrentWeapon(Father this, Player player, WeaponHash weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetPlayerEyeColorPlayerByte">
            <summary>Legt die Shim von Father.SetPlayerEyeColor(Father this, Player player, Byte color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetPlayerFaceFeaturePlayerInt32Single">
            <summary>Legt die Shim von Father.SetPlayerFaceFeature(Father this, Player player, Int32 id, Single scale) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetPlayerHairColorPlayerByteByte">
            <summary>Legt die Shim von Father.SetPlayerHairColor(Father this, Player player, Byte color, Byte highlightColor) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetPlayerHeadBlendPlayerHeadBlend">
            <summary>Legt die Shim von Father.SetPlayerHeadBlend(Father this, Player player, HeadBlend headblend) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetPlayerHeadOverlayPlayerInt32HeadOverlay">
            <summary>Legt die Shim von Father.SetPlayerHeadOverlay(Father this, Player player, Int32 overlayId, HeadOverlay headOverlay) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetPlayerHealthPlayerInt32">
            <summary>Legt die Shim von Father.SetPlayerHealth(Father this, Player player, Int32 health) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetPlayerIntoVehiclePlayerNetHandleInt32">
            <summary>Legt die Shim von Father.SetPlayerIntoVehicle(Father this, Player player, NetHandle vehicle, Int32 seat) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetPlayerNamePlayerString">
            <summary>Legt die Shim von Father.SetPlayerName(Father this, Player player, String newName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetPlayerVelocityPlayerVector3">
            <summary>Legt die Shim von Father.SetPlayerVelocity(Father this, Player player, Vector3 velocity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetPlayerWeaponAmmoPlayerWeaponHashInt32">
            <summary>Legt die Shim von Father.SetPlayerWeaponAmmo(Father this, Player player, WeaponHash weaponHash, Int32 ammo) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetResourceSettingStringStringObject">
            <summary>Legt die Shim von Father.SetResourceSetting(Father this, String resource, String setting, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetSettingScriptStringObject">
            <summary>Legt die Shim von Father.SetSetting(Father this, Script scriptEngine, String settingName, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetTextLabelColorNetHandleInt32Int32Int32Int32">
            <summary>Legt die Shim von Father.SetTextLabelColor(Father this, NetHandle label, Int32 red, Int32 green, Int32 blue, Int32 alpha) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetTextLabelRangeNetHandleSingle">
            <summary>Legt die Shim von Father.SetTextLabelRange(Father this, NetHandle label, Single newRange) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetTextLabelSeethroughNetHandleBoolean">
            <summary>Legt die Shim von Father.SetTextLabelSeethrough(Father this, NetHandle label, Boolean seethrough) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetTextLabelTextNetHandleString">
            <summary>Legt die Shim von Father.SetTextLabelText(Father this, NetHandle label, String newText) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetTimeInt32Int32Int32">
            <summary>Legt die Shim von Father.SetTime(Father this, Int32 hours, Int32 minutes, Int32 seconds) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleBodyHealthNetHandleSingle">
            <summary>Legt die Shim von Father.SetVehicleBodyHealth(Father this, NetHandle vehicle, Single health) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleBulletproofTyresNetHandleBoolean">
            <summary>Legt die Shim von Father.SetVehicleBulletproofTyres(Father this, NetHandle vehicle, Boolean state) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleCustomPrimaryColorNetHandleInt32Int32Int32">
            <summary>Legt die Shim von Father.SetVehicleCustomPrimaryColor(Father this, NetHandle vehicle, Int32 red, Int32 green, Int32 blue) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleCustomSecondaryColorNetHandleInt32Int32Int32">
            <summary>Legt die Shim von Father.SetVehicleCustomSecondaryColor(Father this, NetHandle vehicle, Int32 red, Int32 green, Int32 blue) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleCustomTiresNetHandleBoolean">
            <summary>Legt die Shim von Father.SetVehicleCustomTires(Father this, NetHandle vehicle, Boolean toggle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleDashboardColorNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehicleDashboardColor(Father this, NetHandle vehicle, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleEngineHealthNetHandleSingle">
            <summary>Legt die Shim von Father.SetVehicleEngineHealth(Father this, NetHandle vehicle, Single health) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleEnginePowerMultiplierNetHandleSingle">
            <summary>Legt die Shim von Father.SetVehicleEnginePowerMultiplier(Father this, NetHandle vehicle, Single mult) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleEngineStatusNetHandleBoolean">
            <summary>Legt die Shim von Father.SetVehicleEngineStatus(Father this, NetHandle vehicle, Boolean turnedOn) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleEngineTorqueMultiplierNetHandleSingle">
            <summary>Legt die Shim von Father.SetVehicleEngineTorqueMultiplier(Father this, NetHandle vehicle, Single mult) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleExtraNetHandleInt32Boolean">
            <summary>Legt die Shim von Father.SetVehicleExtra(Father this, NetHandle vehicle, Int32 slot, Boolean enabled) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleHealthNetHandleSingle">
            <summary>Legt die Shim von Father.SetVehicleHealth(Father this, NetHandle vehicle, Single health) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleLiveryNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehicleLivery(Father this, NetHandle vehicle, Int32 livery) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleLockedNetHandleBoolean">
            <summary>Legt die Shim von Father.SetVehicleLocked(Father this, NetHandle vehicle, Boolean locked) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleModNetHandleInt32Int32">
            <summary>Legt die Shim von Father.SetVehicleMod(Father this, NetHandle vehicle, Int32 modType, Int32 mod) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleNeonColorNetHandleInt32Int32Int32">
            <summary>Legt die Shim von Father.SetVehicleNeonColor(Father this, NetHandle vehicle, Int32 r, Int32 g, Int32 b) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleNeonStateNetHandleBoolean">
            <summary>Legt die Shim von Father.SetVehicleNeonState(Father this, NetHandle vehicle, Boolean turnedOn) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleNumberPlateNetHandleString">
            <summary>Legt die Shim von Father.SetVehicleNumberPlate(Father this, NetHandle vehicle, String plate) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleNumberPlateStyleNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehicleNumberPlateStyle(Father this, NetHandle vehicle, Int32 style) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehiclePearlescentColorNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehiclePearlescentColor(Father this, NetHandle vehicle, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehiclePrimaryColorNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehiclePrimaryColor(Father this, NetHandle vehicle, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehiclePrimaryPaintNetHandleInt32Int32">
            <summary>Legt die Shim von Father.SetVehiclePrimaryPaint(Father this, NetHandle vehicle, Int32 paintType, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleSecondaryColorNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehicleSecondaryColor(Father this, NetHandle vehicle, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleSecondaryPaintNetHandleInt32Int32">
            <summary>Legt die Shim von Father.SetVehicleSecondaryPaint(Father this, NetHandle vehicle, Int32 paintType, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleSirenStateNetHandleBoolean">
            <summary>Legt die Shim von Father.SetVehicleSirenState(Father this, NetHandle vehicle, Boolean state) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleSpecialLightStatusNetHandleBoolean">
            <summary>Legt die Shim von Father.SetVehicleSpecialLightStatus(Father this, NetHandle vehicle, Boolean turnedOn) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleTrimColorNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehicleTrimColor(Father this, NetHandle vehicle, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleTyreSmokeColorNetHandleColor">
            <summary>Legt die Shim von Father.SetVehicleTyreSmokeColor(Father this, NetHandle vehicle, Color color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleWheelColorNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehicleWheelColor(Father this, NetHandle vehicle, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleWheelTypeNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehicleWheelType(Father this, NetHandle vehicle, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetVehicleWindowTintNetHandleInt32">
            <summary>Legt die Shim von Father.SetVehicleWindowTint(Father this, NetHandle vehicle, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetWeatherString">
            <summary>Legt die Shim von Father.SetWeather(Father this, String weather) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetWeatherWeather">
            <summary>Legt die Shim von Father.SetWeather(Father this, Weather weather) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetWorldDataStringObject">
            <summary>Legt die Shim von Father.SetWorldData(Father this, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SetWorldSharedDataStringObject">
            <summary>Legt die Shim von Father.SetWorldSharedData(Father this, String key, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SpawnPlayerPlayerVector3Single">
            <summary>Legt die Shim von Father.SpawnPlayer(Father this, Player player, Vector3 pos, Single heading) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.SpawnVehicleNetHandleVector3Single">
            <summary>Legt die Shim von Father.SpawnVehicle(Father this, NetHandle vehicle, Vector3 position, Single heading) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.StartResourceString">
            <summary>Legt die Shim von Father.StartResource(Father this, String resourceName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.StopPlayerAnimationPlayer">
            <summary>Legt die Shim von Father.StopPlayerAnimation(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.StopResourceString">
            <summary>Legt die Shim von Father.StopResource(Father this, String name) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.ToJsonObject">
            <summary>Legt die Shim von Father.ToJson(Father this, Object data) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.TriggerClientEventForAllStringObjectArray">
            <summary>Legt die Shim von Father.TriggerClientEventForAll(Father this, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.TriggerClientEventInDimensionUInt32StringObjectArray">
            <summary>Legt die Shim von Father.TriggerClientEventInDimension(Father this, UInt32 dimension, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.TriggerClientEventInRangeVector3SingleStringObjectArray">
            <summary>Legt die Shim von Father.TriggerClientEventInRange(Father this, Vector3 pos, Single range, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.TriggerClientEventPlayerStringObjectArray">
            <summary>Legt die Shim von Father.TriggerClientEvent(Father this, Player player, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.TriggerClientEventToPlayersPlayerArrayStringObjectArray">
            <summary>Legt die Shim von Father.TriggerClientEventToPlayers(Father this, Player[] players, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.UnregisterString">
            <summary>Legt die Shim von Father.Unregister(Father this, String eventName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.UpdatePlayerHeadBlendPlayerSingleSingleSingle">
            <summary>Legt die Shim von Father.UpdatePlayerHeadBlend(Father this, Player player, Single shapeMix, Single skinMix, Single thirdMix) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.VehicleNameToModelString">
            <summary>Legt die Shim von Father.VehicleNameToModel(Father this, String modelName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.WarpPlayerOutOfVehiclePlayer">
            <summary>Legt die Shim von Father.WarpPlayerOutOfVehicle(Father this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimFather.WeaponNameToModelString">
            <summary>Legt die Shim von Father.WeaponNameToModel(Father this, String modelName) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimLocalEvent">
            <summary>Shim-Typ von GTANetworkMethods.LocalEvent</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimLocalEvent.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimLocalEvent.#ctor(GTANetworkMethods.LocalEvent)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimLocalEvent.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimLocalEvent.AllInstances.RegisterMethodInfoStringObject">
            <summary>Legt die Shim von LocalEvent.Register(LocalEvent this, MethodInfo method, String eventName, Object classInstance) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimLocalEvent.AllInstances.TriggerEventStringObjectArray">
            <summary>Legt die Shim von LocalEvent.TriggerEvent(LocalEvent this, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimLocalEvent.AllInstances.UnregisterString">
            <summary>Legt die Shim von LocalEvent.Unregister(LocalEvent this, String eventName) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimLocalEvent.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimLocalEvent.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimLocalEvent.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimLocalEvent.Bind(GTANetworkMethods.ILocalEvent)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimLocalEvent.Constructor">
            <summary>Legt die Shim von LocalEvent.LocalEvent(LocalEvent this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimLocalEvent.RegisterMethodInfoStringObject">
            <summary>Legt die Shim von LocalEvent.Register(LocalEvent this, MethodInfo method, String eventName, Object classInstance) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimLocalEvent.TriggerEventStringObjectArray">
            <summary>Legt die Shim von LocalEvent.TriggerEvent(LocalEvent this, String eventName, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimLocalEvent.UnregisterString">
            <summary>Legt die Shim von LocalEvent.Unregister(LocalEvent this, String eventName) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimLog">
            <summary>Shim-Typ von GTANetworkMethods.Log</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimLog.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimLog.#ctor(GTANetworkMethods.Log)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimLog.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimLog.AllInstances.ExceptionString">
            <summary>Legt die Shim von Log.Exception(Log this, String exceptionText) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimLog.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimLog.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimLog.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimLog.Constructor">
            <summary>Legt die Shim von Log.Log(Log this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimLog.ExceptionString">
            <summary>Legt die Shim von Log.Exception(Log this, String exceptionText) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimMarker">
            <summary>Shim-Typ von GTANetworkMethods.Marker</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimMarker.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimMarker.#ctor(GTANetworkMethods.Marker)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimMarker.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.AllInstances.CreateMarkerInt32Vector3Vector3Vector3SingleColorBooleanUInt32">
            <summary>Legt die Shim von Marker.CreateMarker(Marker this, Int32 markerType, Vector3 pos, Vector3 dir, Vector3 rot, Single scale, Color color, Boolean bobUpAndDown, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.AllInstances.CreateMarkerInt32Vector3Vector3Vector3SingleInt32Int32Int32BooleanUInt32">
            <summary>Legt die Shim von Marker.CreateMarker(Marker this, Int32 markerType, Vector3 pos, Vector3 dir, Vector3 rot, Single scale, Int32 red, Int32 green, Int32 blue, Boolean bobUpAndDown, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.AllInstances.CreateMarkerMarkerTypeVector3Vector3Vector3SingleColorBooleanUInt32">
            <summary>Legt die Shim von Marker.CreateMarker(Marker this, MarkerType markerType, Vector3 pos, Vector3 dir, Vector3 rot, Single scale, Color color, Boolean bobUpAndDown, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.AllInstances.CreateMarkerUInt32Vector3Vector3Vector3SingleColorBooleanUInt32">
            <summary>Legt die Shim von Marker.CreateMarker(Marker this, UInt32 markerType, Vector3 pos, Vector3 dir, Vector3 rot, Single scale, Color color, Boolean bobUpAndDown, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.AllInstances.GetMarkerBobUpAndDownNetHandle">
            <summary>Legt die Shim von Marker.GetMarkerBobUpAndDown(Marker this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.AllInstances.GetMarkerColorNetHandle">
            <summary>Legt die Shim von Marker.GetMarkerColor(Marker this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.AllInstances.GetMarkerDirectionNetHandle">
            <summary>Legt die Shim von Marker.GetMarkerDirection(Marker this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.AllInstances.GetMarkerScaleNetHandle">
            <summary>Legt die Shim von Marker.GetMarkerScale(Marker this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.AllInstances.GetMarkerTypeNetHandle">
            <summary>Legt die Shim von Marker.GetMarkerType(Marker this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.AllInstances.SetMarkerBobUpAndDownNetHandleBoolean">
            <summary>Legt die Shim von Marker.SetMarkerBobUpAndDown(Marker this, NetHandle marker, Boolean state) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.AllInstances.SetMarkerColorNetHandleInt32Int32Int32Int32">
            <summary>Legt die Shim von Marker.SetMarkerColor(Marker this, NetHandle marker, Int32 alpha, Int32 red, Int32 green, Int32 blue) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.AllInstances.SetMarkerDirectionNetHandleVector3">
            <summary>Legt die Shim von Marker.SetMarkerDirection(Marker this, NetHandle marker, Vector3 dir) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.AllInstances.SetMarkerScaleNetHandleSingle">
            <summary>Legt die Shim von Marker.SetMarkerScale(Marker this, NetHandle marker, Single scale) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.AllInstances.SetMarkerTypeNetHandleInt32">
            <summary>Legt die Shim von Marker.SetMarkerType(Marker this, NetHandle marker, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.AllInstances.SetMarkerTypeNetHandleUInt32">
            <summary>Legt die Shim von Marker.SetMarkerType(Marker this, NetHandle marker, UInt32 type) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimMarker.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimMarker.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimMarker.Bind(GTANetworkMethods.IMarker)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.Constructor">
            <summary>Legt die Shim von Marker.Marker(Marker this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.CreateMarkerInt32Vector3Vector3Vector3SingleColorBooleanUInt32">
            <summary>Legt die Shim von Marker.CreateMarker(Marker this, Int32 markerType, Vector3 pos, Vector3 dir, Vector3 rot, Single scale, Color color, Boolean bobUpAndDown, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.CreateMarkerInt32Vector3Vector3Vector3SingleInt32Int32Int32BooleanUInt32">
            <summary>Legt die Shim von Marker.CreateMarker(Marker this, Int32 markerType, Vector3 pos, Vector3 dir, Vector3 rot, Single scale, Int32 red, Int32 green, Int32 blue, Boolean bobUpAndDown, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.CreateMarkerMarkerTypeVector3Vector3Vector3SingleColorBooleanUInt32">
            <summary>Legt die Shim von Marker.CreateMarker(Marker this, MarkerType markerType, Vector3 pos, Vector3 dir, Vector3 rot, Single scale, Color color, Boolean bobUpAndDown, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.CreateMarkerUInt32Vector3Vector3Vector3SingleColorBooleanUInt32">
            <summary>Legt die Shim von Marker.CreateMarker(Marker this, UInt32 markerType, Vector3 pos, Vector3 dir, Vector3 rot, Single scale, Color color, Boolean bobUpAndDown, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.GetMarkerBobUpAndDownNetHandle">
            <summary>Legt die Shim von Marker.GetMarkerBobUpAndDown(Marker this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.GetMarkerColorNetHandle">
            <summary>Legt die Shim von Marker.GetMarkerColor(Marker this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.GetMarkerDirectionNetHandle">
            <summary>Legt die Shim von Marker.GetMarkerDirection(Marker this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.GetMarkerScaleNetHandle">
            <summary>Legt die Shim von Marker.GetMarkerScale(Marker this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.GetMarkerTypeNetHandle">
            <summary>Legt die Shim von Marker.GetMarkerType(Marker this, NetHandle marker) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.SetMarkerBobUpAndDownNetHandleBoolean">
            <summary>Legt die Shim von Marker.SetMarkerBobUpAndDown(Marker this, NetHandle marker, Boolean state) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.SetMarkerColorNetHandleInt32Int32Int32Int32">
            <summary>Legt die Shim von Marker.SetMarkerColor(Marker this, NetHandle marker, Int32 alpha, Int32 red, Int32 green, Int32 blue) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.SetMarkerDirectionNetHandleVector3">
            <summary>Legt die Shim von Marker.SetMarkerDirection(Marker this, NetHandle marker, Vector3 dir) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.SetMarkerScaleNetHandleSingle">
            <summary>Legt die Shim von Marker.SetMarkerScale(Marker this, NetHandle marker, Single scale) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.SetMarkerTypeNetHandleInt32">
            <summary>Legt die Shim von Marker.SetMarkerType(Marker this, NetHandle marker, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimMarker.SetMarkerTypeNetHandleUInt32">
            <summary>Legt die Shim von Marker.SetMarkerType(Marker this, NetHandle marker, UInt32 type) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimNative">
            <summary>Shim-Typ von GTANetworkMethods.Native</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimNative.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimNative.#ctor(GTANetworkMethods.Native)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimNative.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimNative.AllInstances.FetchNativeFromPlayerOf1PlayerHashObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkMethods.Native,GTANetworkAPI.Player,GTANetworkAPI.Hash,System.Object[],``0})">
            <summary>Legt die Shim von Native.FetchNativeFromPlayer(Native this, Player player, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimNative.AllInstances.FetchNativeFromPlayerOf1PlayerUInt64ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkMethods.Native,GTANetworkAPI.Player,System.UInt64,System.Object[],``0})">
            <summary>Legt die Shim von Native.FetchNativeFromPlayer(Native this, Player player, UInt64 longHash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.AllInstances.SendNativeToAllPlayersHashObjectArray">
            <summary>Legt die Shim von Native.SendNativeToAllPlayers(Native this, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.AllInstances.SendNativeToAllPlayersUInt64ObjectArray">
            <summary>Legt die Shim von Native.SendNativeToAllPlayers(Native this, UInt64 longHash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.AllInstances.SendNativeToPlayerPlayerHashObjectArray">
            <summary>Legt die Shim von Native.SendNativeToPlayer(Native this, Player player, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.AllInstances.SendNativeToPlayerPlayerUInt64ObjectArray">
            <summary>Legt die Shim von Native.SendNativeToPlayer(Native this, Player player, UInt64 longHash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.AllInstances.SendNativeToPlayersInDimensionUInt32HashObjectArray">
            <summary>Legt die Shim von Native.SendNativeToPlayersInDimension(Native this, UInt32 dimension, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.AllInstances.SendNativeToPlayersInDimensionUInt32UInt64ObjectArray">
            <summary>Legt die Shim von Native.SendNativeToPlayersInDimension(Native this, UInt32 dimension, UInt64 hash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.AllInstances.SendNativeToPlayersInRangeInDimensionVector3SingleUInt32HashObjectArray">
            <summary>Legt die Shim von Native.SendNativeToPlayersInRangeInDimension(Native this, Vector3 pos, Single range, UInt32 dimension, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.AllInstances.SendNativeToPlayersInRangeInDimensionVector3SingleUInt32UInt64ObjectArray">
            <summary>Legt die Shim von Native.SendNativeToPlayersInRangeInDimension(Native this, Vector3 pos, Single range, UInt32 dimension, UInt64 hash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.AllInstances.SendNativeToPlayersInRangeVector3SingleHashObjectArray">
            <summary>Legt die Shim von Native.SendNativeToPlayersInRange(Native this, Vector3 pos, Single range, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.AllInstances.SendNativeToPlayersInRangeVector3SingleUInt64ObjectArray">
            <summary>Legt die Shim von Native.SendNativeToPlayersInRange(Native this, Vector3 pos, Single range, UInt64 hash, Object[] args) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimNative.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimNative.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimNative.Bind(GTANetworkMethods.INative)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.Constructor">
            <summary>Legt die Shim von Native.Native(Native this) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimNative.FetchNativeFromPlayerOf1PlayerHashObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkAPI.Player,GTANetworkAPI.Hash,System.Object[],``0})">
            <summary>Legt die Shim von Native.FetchNativeFromPlayer(Native this, Player player, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimNative.FetchNativeFromPlayerOf1PlayerUInt64ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkAPI.Player,System.UInt64,System.Object[],``0})">
            <summary>Legt die Shim von Native.FetchNativeFromPlayer(Native this, Player player, UInt64 longHash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.SendNativeToAllPlayersHashObjectArray">
            <summary>Legt die Shim von Native.SendNativeToAllPlayers(Native this, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.SendNativeToAllPlayersUInt64ObjectArray">
            <summary>Legt die Shim von Native.SendNativeToAllPlayers(Native this, UInt64 longHash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.SendNativeToPlayerPlayerHashObjectArray">
            <summary>Legt die Shim von Native.SendNativeToPlayer(Native this, Player player, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.SendNativeToPlayerPlayerUInt64ObjectArray">
            <summary>Legt die Shim von Native.SendNativeToPlayer(Native this, Player player, UInt64 longHash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.SendNativeToPlayersInDimensionUInt32HashObjectArray">
            <summary>Legt die Shim von Native.SendNativeToPlayersInDimension(Native this, UInt32 dimension, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.SendNativeToPlayersInDimensionUInt32UInt64ObjectArray">
            <summary>Legt die Shim von Native.SendNativeToPlayersInDimension(Native this, UInt32 dimension, UInt64 hash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.SendNativeToPlayersInRangeInDimensionVector3SingleUInt32HashObjectArray">
            <summary>Legt die Shim von Native.SendNativeToPlayersInRangeInDimension(Native this, Vector3 pos, Single range, UInt32 dimension, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.SendNativeToPlayersInRangeInDimensionVector3SingleUInt32UInt64ObjectArray">
            <summary>Legt die Shim von Native.SendNativeToPlayersInRangeInDimension(Native this, Vector3 pos, Single range, UInt32 dimension, UInt64 hash, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.SendNativeToPlayersInRangeVector3SingleHashObjectArray">
            <summary>Legt die Shim von Native.SendNativeToPlayersInRange(Native this, Vector3 pos, Single range, Hash native, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNative.SendNativeToPlayersInRangeVector3SingleUInt64ObjectArray">
            <summary>Legt die Shim von Native.SendNativeToPlayersInRange(Native this, Vector3 pos, Single range, UInt64 hash, Object[] args) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimNotification">
            <summary>Shim-Typ von GTANetworkMethods.Notification</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimNotification.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimNotification.#ctor(GTANetworkMethods.Notification)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimNotification.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNotification.AllInstances.SendNotificationToAllStringBoolean">
            <summary>Legt die Shim von Notification.SendNotificationToAll(Notification this, String message, Boolean flashing) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNotification.AllInstances.SendNotificationToPlayerPlayerStringBoolean">
            <summary>Legt die Shim von Notification.SendNotificationToPlayer(Notification this, Player player, String message, Boolean flashing) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNotification.AllInstances.SendPictureNotificationToAllStringStringInt32Int32StringString">
            <summary>Legt die Shim von Notification.SendPictureNotificationToAll(Notification this, String body, String pic, Int32 flash, Int32 iconType, String sender, String subject) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNotification.AllInstances.SendPictureNotificationToPlayerPlayerStringStringInt32Int32StringString">
            <summary>Legt die Shim von Notification.SendPictureNotificationToPlayer(Notification this, Player player, String body, String pic, Int32 flash, Int32 iconType, String sender, String subject) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimNotification.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimNotification.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNotification.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimNotification.Bind(GTANetworkMethods.INotification)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNotification.Constructor">
            <summary>Legt die Shim von Notification.Notification(Notification this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNotification.SendNotificationToAllStringBoolean">
            <summary>Legt die Shim von Notification.SendNotificationToAll(Notification this, String message, Boolean flashing) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNotification.SendNotificationToPlayerPlayerStringBoolean">
            <summary>Legt die Shim von Notification.SendNotificationToPlayer(Notification this, Player player, String message, Boolean flashing) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNotification.SendPictureNotificationToAllStringStringInt32Int32StringString">
            <summary>Legt die Shim von Notification.SendPictureNotificationToAll(Notification this, String body, String pic, Int32 flash, Int32 iconType, String sender, String subject) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimNotification.SendPictureNotificationToPlayerPlayerStringStringInt32Int32StringString">
            <summary>Legt die Shim von Notification.SendPictureNotificationToPlayer(Notification this, Player player, String body, String pic, Int32 flash, Int32 iconType, String sender, String subject) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimObject">
            <summary>Shim-Typ von GTANetworkMethods.Object</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimObject.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimObject.#ctor(GTANetworkMethods.Object)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimObject.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimObject.AllInstances.CreateObjectInt32Vector3QuaternionUInt32">
            <summary>Legt die Shim von Object.CreateObject(Object this, Int32 model, Vector3 pos, Quaternion rot, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimObject.AllInstances.CreateObjectInt32Vector3Vector3ByteUInt32">
            <summary>Legt die Shim von Object.CreateObject(Object this, Int32 model, Vector3 pos, Vector3 rot, Byte alpha, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimObject.AllInstances.CreateObjectUInt32Vector3QuaternionUInt32">
            <summary>Legt die Shim von Object.CreateObject(Object this, UInt32 model, Vector3 pos, Quaternion rot, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimObject.AllInstances.CreateObjectUInt32Vector3Vector3ByteUInt32">
            <summary>Legt die Shim von Object.CreateObject(Object this, UInt32 model, Vector3 pos, Vector3 rot, Byte alpha, UInt32 dimension) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimObject.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimObject.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimObject.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimObject.Bind(GTANetworkMethods.IObject)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimObject.Constructor">
            <summary>Legt die Shim von Object.Object(Object this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimObject.CreateObjectInt32Vector3QuaternionUInt32">
            <summary>Legt die Shim von Object.CreateObject(Object this, Int32 model, Vector3 pos, Quaternion rot, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimObject.CreateObjectInt32Vector3Vector3ByteUInt32">
            <summary>Legt die Shim von Object.CreateObject(Object this, Int32 model, Vector3 pos, Vector3 rot, Byte alpha, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimObject.CreateObjectUInt32Vector3QuaternionUInt32">
            <summary>Legt die Shim von Object.CreateObject(Object this, UInt32 model, Vector3 pos, Quaternion rot, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimObject.CreateObjectUInt32Vector3Vector3ByteUInt32">
            <summary>Legt die Shim von Object.CreateObject(Object this, UInt32 model, Vector3 pos, Vector3 rot, Byte alpha, UInt32 dimension) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimParticle">
            <summary>Shim-Typ von GTANetworkMethods.Particle</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimParticle.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimParticle.#ctor(GTANetworkMethods.Particle)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimParticle.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimParticle.AllInstances.CreateLoopedParticleEffectOnEntityStringStringNetHandleVector3Vector3SingleInt32UInt32">
            <summary>Legt die Shim von Particle.CreateLoopedParticleEffectOnEntity(Particle this, String ptfxLib, String ptfxName, NetHandle entity, Vector3 offset, Vector3 rotation, Single scale, Int32 bone, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimParticle.AllInstances.CreateLoopedParticleEffectOnPositionStringStringVector3Vector3SingleUInt32">
            <summary>Legt die Shim von Particle.CreateLoopedParticleEffectOnPosition(Particle this, String ptfxLib, String ptfxName, Vector3 position, Vector3 rotation, Single scale, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimParticle.AllInstances.CreateParticleEffectOnEntityStringStringNetHandleVector3Vector3SingleInt32UInt32">
            <summary>Legt die Shim von Particle.CreateParticleEffectOnEntity(Particle this, String ptfxLibrary, String ptfxName, NetHandle entity, Vector3 offset, Vector3 rotation, Single scale, Int32 boneIndex, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimParticle.AllInstances.CreateParticleEffectOnPositionStringStringVector3Vector3SingleUInt32">
            <summary>Legt die Shim von Particle.CreateParticleEffectOnPosition(Particle this, String ptfxLibrary, String ptfxName, Vector3 position, Vector3 rotation, Single scale, UInt32 dimension) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimParticle.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimParticle.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimParticle.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimParticle.Bind(GTANetworkMethods.IParticle)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimParticle.Constructor">
            <summary>Legt die Shim von Particle.Particle(Particle this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimParticle.CreateLoopedParticleEffectOnEntityStringStringNetHandleVector3Vector3SingleInt32UInt32">
            <summary>Legt die Shim von Particle.CreateLoopedParticleEffectOnEntity(Particle this, String ptfxLib, String ptfxName, NetHandle entity, Vector3 offset, Vector3 rotation, Single scale, Int32 bone, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimParticle.CreateLoopedParticleEffectOnPositionStringStringVector3Vector3SingleUInt32">
            <summary>Legt die Shim von Particle.CreateLoopedParticleEffectOnPosition(Particle this, String ptfxLib, String ptfxName, Vector3 position, Vector3 rotation, Single scale, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimParticle.CreateParticleEffectOnEntityStringStringNetHandleVector3Vector3SingleInt32UInt32">
            <summary>Legt die Shim von Particle.CreateParticleEffectOnEntity(Particle this, String ptfxLibrary, String ptfxName, NetHandle entity, Vector3 offset, Vector3 rotation, Single scale, Int32 boneIndex, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimParticle.CreateParticleEffectOnPositionStringStringVector3Vector3SingleUInt32">
            <summary>Legt die Shim von Particle.CreateParticleEffectOnPosition(Particle this, String ptfxLibrary, String ptfxName, Vector3 position, Vector3 rotation, Single scale, UInt32 dimension) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimPed">
            <summary>Shim-Typ von GTANetworkMethods.Ped</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPed.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPed.#ctor(GTANetworkMethods.Ped)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimPed.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPed.AllInstances.ClearPedTasksPed">
            <summary>Legt die Shim von Ped.ClearPedTasks(Ped this, Ped ped) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPed.AllInstances.CreatePedPedHashVector3SingleUInt32">
            <summary>Legt die Shim von Ped.CreatePed(Ped this, PedHash model, Vector3 pos, Single heading, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPed.AllInstances.CreatePedUInt32Vector3SingleBooleanBooleanBooleanBooleanUInt32">
            <summary>Legt die Shim von Ped.CreatePed(Ped this, UInt32 model, Vector3 pos, Single heading, Boolean dynamic, Boolean invincible, Boolean frozen, Boolean controlLocked, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPed.AllInstances.CreatePedUInt32Vector3SingleUInt32">
            <summary>Legt die Shim von Ped.CreatePed(Ped this, UInt32 model, Vector3 pos, Single heading, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPed.AllInstances.PlayPedAnimationPedBooleanStringString">
            <summary>Legt die Shim von Ped.PlayPedAnimation(Ped this, Ped ped, Boolean looped, String dictionary, String name) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPed.AllInstances.PlayPedScenarioPedString">
            <summary>Legt die Shim von Ped.PlayPedScenario(Ped this, Ped ped, String scenario) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPed.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPed.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPed.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPed.Bind(GTANetworkMethods.IPed)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPed.ClearPedTasksPed">
            <summary>Legt die Shim von Ped.ClearPedTasks(Ped this, Ped ped) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPed.Constructor">
            <summary>Legt die Shim von Ped.Ped(Ped this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPed.CreatePedPedHashVector3SingleUInt32">
            <summary>Legt die Shim von Ped.CreatePed(Ped this, PedHash model, Vector3 pos, Single heading, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPed.CreatePedUInt32Vector3SingleBooleanBooleanBooleanBooleanUInt32">
            <summary>Legt die Shim von Ped.CreatePed(Ped this, UInt32 model, Vector3 pos, Single heading, Boolean dynamic, Boolean invincible, Boolean frozen, Boolean controlLocked, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPed.CreatePedUInt32Vector3SingleUInt32">
            <summary>Legt die Shim von Ped.CreatePed(Ped this, UInt32 model, Vector3 pos, Single heading, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPed.PlayPedAnimationPedBooleanStringString">
            <summary>Legt die Shim von Ped.PlayPedAnimation(Ped this, Ped ped, Boolean looped, String dictionary, String name) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPed.PlayPedScenarioPedString">
            <summary>Legt die Shim von Ped.PlayPedScenario(Ped this, Ped ped, String scenario) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimPickup">
            <summary>Shim-Typ von GTANetworkMethods.Pickup</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPickup.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPickup.#ctor(GTANetworkMethods.Pickup)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimPickup.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPickup.AllInstances.CreatePickupInt32Vector3Vector3BooleanUInt32UInt32">
            <summary>Legt die Shim von Pickup.CreatePickup(Pickup this, Int32 model, Vector3 pos, Vector3 rot, Boolean vehicle, UInt32 respawnTime, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPickup.AllInstances.CreatePickupPickupHashVector3Vector3Int32UInt32UInt32">
            <summary>Legt die Shim von Pickup.CreatePickup(Pickup this, PickupHash pickupHash, Vector3 pos, Vector3 rot, Int32 amount, UInt32 respawnTime, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPickup.AllInstances.CreatePickupUInt32Vector3Vector3BooleanUInt32UInt32">
            <summary>Legt die Shim von Pickup.CreatePickup(Pickup this, UInt32 model, Vector3 pos, Vector3 rot, Boolean vehicle, UInt32 respawnTime, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPickup.AllInstances.GetPickupAmountNetHandle">
            <summary>Legt die Shim von Pickup.GetPickupAmount(Pickup this, NetHandle pickup) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPickup.AllInstances.GetPickupCustomModelNetHandle">
            <summary>Legt die Shim von Pickup.GetPickupCustomModel(Pickup this, NetHandle pickup) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPickup.AllInstances.GetPickupPickedUpNetHandle">
            <summary>Legt die Shim von Pickup.GetPickupPickedUp(Pickup this, NetHandle pickup) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPickup.AllInstances.RespawnPickupNetHandle">
            <summary>Legt die Shim von Pickup.RespawnPickup(Pickup this, NetHandle pickup) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPickup.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPickup.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPickup.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPickup.Bind(GTANetworkMethods.IPickup)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPickup.Constructor">
            <summary>Legt die Shim von Pickup.Pickup(Pickup this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPickup.CreatePickupInt32Vector3Vector3BooleanUInt32UInt32">
            <summary>Legt die Shim von Pickup.CreatePickup(Pickup this, Int32 model, Vector3 pos, Vector3 rot, Boolean vehicle, UInt32 respawnTime, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPickup.CreatePickupPickupHashVector3Vector3Int32UInt32UInt32">
            <summary>Legt die Shim von Pickup.CreatePickup(Pickup this, PickupHash pickupHash, Vector3 pos, Vector3 rot, Int32 amount, UInt32 respawnTime, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPickup.CreatePickupUInt32Vector3Vector3BooleanUInt32UInt32">
            <summary>Legt die Shim von Pickup.CreatePickup(Pickup this, UInt32 model, Vector3 pos, Vector3 rot, Boolean vehicle, UInt32 respawnTime, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPickup.GetPickupAmountNetHandle">
            <summary>Legt die Shim von Pickup.GetPickupAmount(Pickup this, NetHandle pickup) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPickup.GetPickupCustomModelNetHandle">
            <summary>Legt die Shim von Pickup.GetPickupCustomModel(Pickup this, NetHandle pickup) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPickup.GetPickupPickedUpNetHandle">
            <summary>Legt die Shim von Pickup.GetPickupPickedUp(Pickup this, NetHandle pickup) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPickup.RespawnPickupNetHandle">
            <summary>Legt die Shim von Pickup.RespawnPickup(Pickup this, NetHandle pickup) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimPlayer">
            <summary>Shim-Typ von GTANetworkMethods.Player</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPlayer.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPlayer.#ctor(GTANetworkMethods.Player)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimPlayer.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.BanPlayerPlayer">
            <summary>Legt die Shim von Player.BanPlayer(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.BanPlayerPlayerString">
            <summary>Legt die Shim von Player.BanPlayer(Player this, Player player, String reason) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.ClearPlayerAccessoryPlayerInt32">
            <summary>Legt die Shim von Player.ClearPlayerAccessory(Player this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.ClearPlayerDecorationsPlayer">
            <summary>Legt die Shim von Player.ClearPlayerDecorations(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.ClearPlayerTasksPlayer">
            <summary>Legt die Shim von Player.ClearPlayerTasks(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.DeletePlayerWorldPropPlayerInt32Vector3Single">
            <summary>Legt die Shim von Player.DeletePlayerWorldProp(Player this, Player player, Int32 modelHash, Vector3 position, Single radius) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.DeletePlayerWorldPropPlayerUInt32Vector3Single">
            <summary>Legt die Shim von Player.DeletePlayerWorldProp(Player this, Player player, UInt32 modelHash, Vector3 position, Single radius) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.DisablePlayerVoiceToPlayerPlayer">
            <summary>Legt die Shim von Player.DisablePlayerVoiceTo(Player this, Player player, Player target) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.EnablePlayerVoiceToPlayerPlayer">
            <summary>Legt die Shim von Player.EnablePlayerVoiceTo(Player this, Player player, Player target) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.EvalPlayerString">
            <summary>Legt die Shim von Player.Eval(Player this, Player player, String code) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.FreezePlayerTimePlayerBoolean">
            <summary>Legt die Shim von Player.FreezePlayerTime(Player this, Player client, Boolean freeze) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerAccessoryDrawablePlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerAccessoryDrawable(Player this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerAccessoryPlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerAccessory(Player this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerAccessoryTexturePlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerAccessoryTexture(Player this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerAddressPlayer">
            <summary>Legt die Shim von Player.GetPlayerAddress(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerAimingPointPlayer">
            <summary>Legt die Shim von Player.GetPlayerAimingPoint(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerArmorPlayer">
            <summary>Legt die Shim von Player.GetPlayerArmor(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerClothesDrawablePlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerClothesDrawable(Player this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerClothesPlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerClothes(Player this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerClothesTexturePlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerClothesTexture(Player this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerCurrentWeaponAmmoPlayer">
            <summary>Legt die Shim von Player.GetPlayerCurrentWeaponAmmo(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerCurrentWeaponPlayer">
            <summary>Legt die Shim von Player.GetPlayerCurrentWeapon(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerEyeColorPlayer">
            <summary>Legt die Shim von Player.GetPlayerEyeColor(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerFaceFeaturePlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerFaceFeature(Player this, Player player, Int32 id) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerFromHandleNetHandle">
            <summary>Legt die Shim von Player.GetPlayerFromHandle(Player this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerFromNameString">
            <summary>Legt die Shim von Player.GetPlayerFromName(Player this, String name) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerGameTypePlayer">
            <summary>Legt die Shim von Player.GetPlayerGameType(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerHairColorPlayer">
            <summary>Legt die Shim von Player.GetPlayerHairColor(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerHeadBlendPaletteColorPlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerHeadBlendPaletteColor(Player this, Player player, Int32 id) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerHeadBlendPlayer">
            <summary>Legt die Shim von Player.GetPlayerHeadBlend(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerHeadOverlayPlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerHeadOverlay(Player this, Player player, Int32 overlayId) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerHealthPlayer">
            <summary>Legt die Shim von Player.GetPlayerHealth(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerNamePlayer">
            <summary>Legt die Shim von Player.GetPlayerName(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerNametagPlayer">
            <summary>Legt die Shim von Player.GetPlayerNametag(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerPingPlayer">
            <summary>Legt die Shim von Player.GetPlayerPing(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerSerialPlayer">
            <summary>Legt die Shim von Player.GetPlayerSerial(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerSocialClubIdPlayer">
            <summary>Legt die Shim von Player.GetPlayerSocialClubId(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerSocialClubNamePlayer">
            <summary>Legt die Shim von Player.GetPlayerSocialClubName(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerVehiclePlayer">
            <summary>Legt die Shim von Player.GetPlayerVehicle(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerVehicleSeatPlayer">
            <summary>Legt die Shim von Player.GetPlayerVehicleSeat(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerVelocityPlayer">
            <summary>Legt die Shim von Player.GetPlayerVelocity(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerWeaponAmmoPlayerUInt32">
            <summary>Legt die Shim von Player.GetPlayerWeaponAmmo(Player this, Player player, UInt32 weaponHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerWeaponAmmoPlayerWeaponHash">
            <summary>Legt die Shim von Player.GetPlayerWeaponAmmo(Player this, Player player, WeaponHash weaponHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayerWeaponsPlayer">
            <summary>Legt die Shim von Player.GetPlayerWeapons(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayersInRadiusOfPlayerDoublePlayer">
            <summary>Legt die Shim von Player.GetPlayersInRadiusOfPlayer(Player this, Double radius, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GetPlayersInRadiusOfPositionDoubleVector3">
            <summary>Legt die Shim von Player.GetPlayersInRadiusOfPosition(Player this, Double radius, Vector3 position) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GivePlayerWeaponPlayerUInt32Int32">
            <summary>Legt die Shim von Player.GivePlayerWeapon(Player this, Player player, UInt32 weaponHash, Int32 ammo) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.GivePlayerWeaponPlayerWeaponHashInt32">
            <summary>Legt die Shim von Player.GivePlayerWeapon(Player this, Player player, WeaponHash weaponHash, Int32 ammo) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.IsCefEnabledPlayer">
            <summary>Legt die Shim von Player.IsCefEnabled(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.IsMediaStreamEnabledPlayer">
            <summary>Legt die Shim von Player.IsMediaStreamEnabled(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.IsPlayerAimingPlayer">
            <summary>Legt die Shim von Player.IsPlayerAiming(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.IsPlayerConnectedPlayer">
            <summary>Legt die Shim von Player.IsPlayerConnected(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.IsPlayerDeadPlayer">
            <summary>Legt die Shim von Player.IsPlayerDead(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.IsPlayerInAnyVehiclePlayer">
            <summary>Legt die Shim von Player.IsPlayerInAnyVehicle(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.IsPlayerInCoverPlayer">
            <summary>Legt die Shim von Player.IsPlayerInCover(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.IsPlayerOnLadderPlayer">
            <summary>Legt die Shim von Player.IsPlayerOnLadder(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.IsPlayerReloadingPlayer">
            <summary>Legt die Shim von Player.IsPlayerReloading(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.IsPlayerRespawningPlayer">
            <summary>Legt die Shim von Player.IsPlayerRespawning(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.IsPlayerShootingPlayer">
            <summary>Legt die Shim von Player.IsPlayerShooting(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.KickPlayerPlayer">
            <summary>Legt die Shim von Player.KickPlayer(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.KickPlayerPlayerString">
            <summary>Legt die Shim von Player.KickPlayer(Player this, Player player, String reason) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.KickPlayerSilentPlayer">
            <summary>Legt die Shim von Player.KickPlayerSilent(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.KickPlayerSilentPlayerString">
            <summary>Legt die Shim von Player.KickPlayerSilent(Player this, Player player, String reason) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.PlayPlayerAnimationPlayerInt32StringStringSingle">
            <summary>Legt die Shim von Player.PlayPlayerAnimation(Player this, Player player, Int32 flag, String animDict, String animName, Single speed) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.PlayPlayerScenarioPlayerString">
            <summary>Legt die Shim von Player.PlayPlayerScenario(Player this, Player player, String scenarioName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.RemoveAllPlayerWeaponsPlayer">
            <summary>Legt die Shim von Player.RemoveAllPlayerWeapons(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.RemovePlayerDecorationPlayerDecoration">
            <summary>Legt die Shim von Player.RemovePlayerDecoration(Player this, Player player, Decoration decoration) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.RemovePlayerHeadBlendPaletteColorPlayerInt32">
            <summary>Legt die Shim von Player.RemovePlayerHeadBlendPaletteColor(Player this, Player player, Int32 id) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.RemovePlayerWeaponPlayerUInt32">
            <summary>Legt die Shim von Player.RemovePlayerWeapon(Player this, Player player, UInt32 weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.RemovePlayerWeaponPlayerWeaponHash">
            <summary>Legt die Shim von Player.RemovePlayerWeapon(Player this, Player player, WeaponHash weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.ResetPlayerNametagPlayer">
            <summary>Legt die Shim von Player.ResetPlayerNametag(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerAccessoryPlayerInt32Int32Int32">
            <summary>Legt die Shim von Player.SetPlayerAccessory(Player this, Player player, Int32 slot, Int32 drawable, Int32 texture) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerArmorPlayerInt32">
            <summary>Legt die Shim von Player.SetPlayerArmor(Player this, Player player, Int32 armor) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerClothesPlayerDictionaryOfInt32ComponentVariation">
            <summary>Legt die Shim von Player.SetPlayerClothes(Player this, Player player, Dictionary`2 clothes) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerClothesPlayerInt32Int32Int32">
            <summary>Legt die Shim von Player.SetPlayerClothes(Player this, Player player, Int32 slot, Int32 drawable, Int32 texture) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerCurrentWeaponAmmoPlayerInt32">
            <summary>Legt die Shim von Player.SetPlayerCurrentWeaponAmmo(Player this, Player player, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerCurrentWeaponPlayerUInt32">
            <summary>Legt die Shim von Player.SetPlayerCurrentWeapon(Player this, Player player, UInt32 weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerCurrentWeaponPlayerWeaponHash">
            <summary>Legt die Shim von Player.SetPlayerCurrentWeapon(Player this, Player player, WeaponHash weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerCustomizationPlayerBooleanHeadBlendByteByteByteSingleArrayDictionaryOfInt32HeadOverlayDecorationArray">
            <summary>Legt die Shim von Player.SetPlayerCustomization(Player this, Player player, Boolean gender, HeadBlend headblend, Byte eyeColor, Byte hairColor, Byte highlightColor, Single[] faceFeatures, Dictionary`2 headOverlays, Decoration[] decorations) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerDecorationPlayerDecoration">
            <summary>Legt die Shim von Player.SetPlayerDecoration(Player this, Player player, Decoration decoration) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerDecorationPlayerDecorationArray">
            <summary>Legt die Shim von Player.SetPlayerDecoration(Player this, Player player, Decoration[] decoration) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerEyeColorPlayerByte">
            <summary>Legt die Shim von Player.SetPlayerEyeColor(Player this, Player player, Byte color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerFaceFeaturePlayerInt32Single">
            <summary>Legt die Shim von Player.SetPlayerFaceFeature(Player this, Player player, Int32 id, Single scale) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerHairColorPlayerByteByte">
            <summary>Legt die Shim von Player.SetPlayerHairColor(Player this, Player player, Byte color, Byte highlightColor) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerHeadBlendPaletteColorPlayerInt32Color">
            <summary>Legt die Shim von Player.SetPlayerHeadBlendPaletteColor(Player this, Player player, Int32 id, Color color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerHeadBlendPlayerHeadBlend">
            <summary>Legt die Shim von Player.SetPlayerHeadBlend(Player this, Player player, HeadBlend headblend) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerHeadOverlayPlayerInt32HeadOverlay">
            <summary>Legt die Shim von Player.SetPlayerHeadOverlay(Player this, Player player, Int32 overlayId, HeadOverlay headOverlay) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerHealthPlayerInt32">
            <summary>Legt die Shim von Player.SetPlayerHealth(Player this, Player player, Int32 health) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerIntoVehiclePlayerNetHandleInt32">
            <summary>Legt die Shim von Player.SetPlayerIntoVehicle(Player this, Player player, NetHandle vehicle, Int32 seat) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerNamePlayerString">
            <summary>Legt die Shim von Player.SetPlayerName(Player this, Player player, String newName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerNametagPlayerString">
            <summary>Legt die Shim von Player.SetPlayerNametag(Player this, Player player, String text) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerSkinPlayerPedHash">
            <summary>Legt die Shim von Player.SetPlayerSkin(Player this, Player player, PedHash modelHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerSkinPlayerUInt32">
            <summary>Legt die Shim von Player.SetPlayerSkin(Player this, Player player, UInt32 modelHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerVelocityPlayerVector3">
            <summary>Legt die Shim von Player.SetPlayerVelocity(Player this, Player player, Vector3 velocity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerWeaponAmmoPlayerUInt32Int32">
            <summary>Legt die Shim von Player.SetPlayerWeaponAmmo(Player this, Player player, UInt32 weaponHash, Int32 ammo) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SetPlayerWeaponAmmoPlayerWeaponHashInt32">
            <summary>Legt die Shim von Player.SetPlayerWeaponAmmo(Player this, Player player, WeaponHash weaponHash, Int32 ammo) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.SpawnPlayerPlayerVector3Single">
            <summary>Legt die Shim von Player.SpawnPlayer(Player this, Player player, Vector3 pos, Single heading) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.StopPlayerAnimationPlayer">
            <summary>Legt die Shim von Player.StopPlayerAnimation(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.UpdatePlayerHeadBlendPlayerSingleSingleSingle">
            <summary>Legt die Shim von Player.UpdatePlayerHeadBlend(Player this, Player player, Single shapeMix, Single skinMix, Single thirdMix) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.AllInstances.WarpPlayerOutOfVehiclePlayer">
            <summary>Legt die Shim von Player.WarpPlayerOutOfVehicle(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.BanPlayerPlayer">
            <summary>Legt die Shim von Player.BanPlayer(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.BanPlayerPlayerString">
            <summary>Legt die Shim von Player.BanPlayer(Player this, Player player, String reason) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPlayer.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPlayer.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPlayer.Bind(GTANetworkMethods.IPlayer)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.ClearPlayerAccessoryPlayerInt32">
            <summary>Legt die Shim von Player.ClearPlayerAccessory(Player this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.ClearPlayerDecorationsPlayer">
            <summary>Legt die Shim von Player.ClearPlayerDecorations(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.ClearPlayerTasksPlayer">
            <summary>Legt die Shim von Player.ClearPlayerTasks(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.Constructor">
            <summary>Legt die Shim von Player.Player(Player this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.DeletePlayerWorldPropPlayerInt32Vector3Single">
            <summary>Legt die Shim von Player.DeletePlayerWorldProp(Player this, Player player, Int32 modelHash, Vector3 position, Single radius) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.DeletePlayerWorldPropPlayerUInt32Vector3Single">
            <summary>Legt die Shim von Player.DeletePlayerWorldProp(Player this, Player player, UInt32 modelHash, Vector3 position, Single radius) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.DisablePlayerVoiceToPlayerPlayer">
            <summary>Legt die Shim von Player.DisablePlayerVoiceTo(Player this, Player player, Player target) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.EnablePlayerVoiceToPlayerPlayer">
            <summary>Legt die Shim von Player.EnablePlayerVoiceTo(Player this, Player player, Player target) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.EvalPlayerString">
            <summary>Legt die Shim von Player.Eval(Player this, Player player, String code) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.FreezePlayerTimePlayerBoolean">
            <summary>Legt die Shim von Player.FreezePlayerTime(Player this, Player client, Boolean freeze) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerAccessoryDrawablePlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerAccessoryDrawable(Player this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerAccessoryPlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerAccessory(Player this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerAccessoryTexturePlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerAccessoryTexture(Player this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerAddressPlayer">
            <summary>Legt die Shim von Player.GetPlayerAddress(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerAimingPointPlayer">
            <summary>Legt die Shim von Player.GetPlayerAimingPoint(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerArmorPlayer">
            <summary>Legt die Shim von Player.GetPlayerArmor(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerClothesDrawablePlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerClothesDrawable(Player this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerClothesPlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerClothes(Player this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerClothesTexturePlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerClothesTexture(Player this, Player player, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerCurrentWeaponAmmoPlayer">
            <summary>Legt die Shim von Player.GetPlayerCurrentWeaponAmmo(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerCurrentWeaponPlayer">
            <summary>Legt die Shim von Player.GetPlayerCurrentWeapon(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerEyeColorPlayer">
            <summary>Legt die Shim von Player.GetPlayerEyeColor(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerFaceFeaturePlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerFaceFeature(Player this, Player player, Int32 id) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerFromHandleNetHandle">
            <summary>Legt die Shim von Player.GetPlayerFromHandle(Player this, NetHandle handle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerFromNameString">
            <summary>Legt die Shim von Player.GetPlayerFromName(Player this, String name) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerGameTypePlayer">
            <summary>Legt die Shim von Player.GetPlayerGameType(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerHairColorPlayer">
            <summary>Legt die Shim von Player.GetPlayerHairColor(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerHeadBlendPaletteColorPlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerHeadBlendPaletteColor(Player this, Player player, Int32 id) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerHeadBlendPlayer">
            <summary>Legt die Shim von Player.GetPlayerHeadBlend(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerHeadOverlayPlayerInt32">
            <summary>Legt die Shim von Player.GetPlayerHeadOverlay(Player this, Player player, Int32 overlayId) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerHealthPlayer">
            <summary>Legt die Shim von Player.GetPlayerHealth(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerNamePlayer">
            <summary>Legt die Shim von Player.GetPlayerName(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerNametagPlayer">
            <summary>Legt die Shim von Player.GetPlayerNametag(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerPingPlayer">
            <summary>Legt die Shim von Player.GetPlayerPing(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerSerialPlayer">
            <summary>Legt die Shim von Player.GetPlayerSerial(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerSocialClubIdPlayer">
            <summary>Legt die Shim von Player.GetPlayerSocialClubId(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerSocialClubNamePlayer">
            <summary>Legt die Shim von Player.GetPlayerSocialClubName(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerVehiclePlayer">
            <summary>Legt die Shim von Player.GetPlayerVehicle(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerVehicleSeatPlayer">
            <summary>Legt die Shim von Player.GetPlayerVehicleSeat(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerVelocityPlayer">
            <summary>Legt die Shim von Player.GetPlayerVelocity(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerWeaponAmmoPlayerUInt32">
            <summary>Legt die Shim von Player.GetPlayerWeaponAmmo(Player this, Player player, UInt32 weaponHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerWeaponAmmoPlayerWeaponHash">
            <summary>Legt die Shim von Player.GetPlayerWeaponAmmo(Player this, Player player, WeaponHash weaponHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayerWeaponsPlayer">
            <summary>Legt die Shim von Player.GetPlayerWeapons(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayersInRadiusOfPlayerDoublePlayer">
            <summary>Legt die Shim von Player.GetPlayersInRadiusOfPlayer(Player this, Double radius, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GetPlayersInRadiusOfPositionDoubleVector3">
            <summary>Legt die Shim von Player.GetPlayersInRadiusOfPosition(Player this, Double radius, Vector3 position) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GivePlayerWeaponPlayerUInt32Int32">
            <summary>Legt die Shim von Player.GivePlayerWeapon(Player this, Player player, UInt32 weaponHash, Int32 ammo) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.GivePlayerWeaponPlayerWeaponHashInt32">
            <summary>Legt die Shim von Player.GivePlayerWeapon(Player this, Player player, WeaponHash weaponHash, Int32 ammo) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.IsCefEnabledPlayer">
            <summary>Legt die Shim von Player.IsCefEnabled(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.IsMediaStreamEnabledPlayer">
            <summary>Legt die Shim von Player.IsMediaStreamEnabled(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.IsPlayerAimingPlayer">
            <summary>Legt die Shim von Player.IsPlayerAiming(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.IsPlayerConnectedPlayer">
            <summary>Legt die Shim von Player.IsPlayerConnected(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.IsPlayerDeadPlayer">
            <summary>Legt die Shim von Player.IsPlayerDead(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.IsPlayerInAnyVehiclePlayer">
            <summary>Legt die Shim von Player.IsPlayerInAnyVehicle(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.IsPlayerInCoverPlayer">
            <summary>Legt die Shim von Player.IsPlayerInCover(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.IsPlayerOnLadderPlayer">
            <summary>Legt die Shim von Player.IsPlayerOnLadder(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.IsPlayerReloadingPlayer">
            <summary>Legt die Shim von Player.IsPlayerReloading(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.IsPlayerRespawningPlayer">
            <summary>Legt die Shim von Player.IsPlayerRespawning(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.IsPlayerShootingPlayer">
            <summary>Legt die Shim von Player.IsPlayerShooting(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.KickPlayerPlayer">
            <summary>Legt die Shim von Player.KickPlayer(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.KickPlayerPlayerString">
            <summary>Legt die Shim von Player.KickPlayer(Player this, Player player, String reason) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.KickPlayerSilentPlayer">
            <summary>Legt die Shim von Player.KickPlayerSilent(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.KickPlayerSilentPlayerString">
            <summary>Legt die Shim von Player.KickPlayerSilent(Player this, Player player, String reason) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.PlayPlayerAnimationPlayerInt32StringStringSingle">
            <summary>Legt die Shim von Player.PlayPlayerAnimation(Player this, Player player, Int32 flag, String animDict, String animName, Single speed) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.PlayPlayerScenarioPlayerString">
            <summary>Legt die Shim von Player.PlayPlayerScenario(Player this, Player player, String scenarioName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.RemoveAllPlayerWeaponsPlayer">
            <summary>Legt die Shim von Player.RemoveAllPlayerWeapons(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.RemovePlayerDecorationPlayerDecoration">
            <summary>Legt die Shim von Player.RemovePlayerDecoration(Player this, Player player, Decoration decoration) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.RemovePlayerHeadBlendPaletteColorPlayerInt32">
            <summary>Legt die Shim von Player.RemovePlayerHeadBlendPaletteColor(Player this, Player player, Int32 id) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.RemovePlayerWeaponPlayerUInt32">
            <summary>Legt die Shim von Player.RemovePlayerWeapon(Player this, Player player, UInt32 weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.RemovePlayerWeaponPlayerWeaponHash">
            <summary>Legt die Shim von Player.RemovePlayerWeapon(Player this, Player player, WeaponHash weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.ResetPlayerNametagPlayer">
            <summary>Legt die Shim von Player.ResetPlayerNametag(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerAccessoryPlayerInt32Int32Int32">
            <summary>Legt die Shim von Player.SetPlayerAccessory(Player this, Player player, Int32 slot, Int32 drawable, Int32 texture) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerArmorPlayerInt32">
            <summary>Legt die Shim von Player.SetPlayerArmor(Player this, Player player, Int32 armor) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerClothesPlayerDictionaryOfInt32ComponentVariation">
            <summary>Legt die Shim von Player.SetPlayerClothes(Player this, Player player, Dictionary`2 clothes) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerClothesPlayerInt32Int32Int32">
            <summary>Legt die Shim von Player.SetPlayerClothes(Player this, Player player, Int32 slot, Int32 drawable, Int32 texture) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerCurrentWeaponAmmoPlayerInt32">
            <summary>Legt die Shim von Player.SetPlayerCurrentWeaponAmmo(Player this, Player player, Int32 value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerCurrentWeaponPlayerUInt32">
            <summary>Legt die Shim von Player.SetPlayerCurrentWeapon(Player this, Player player, UInt32 weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerCurrentWeaponPlayerWeaponHash">
            <summary>Legt die Shim von Player.SetPlayerCurrentWeapon(Player this, Player player, WeaponHash weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerCustomizationPlayerBooleanHeadBlendByteByteByteSingleArrayDictionaryOfInt32HeadOverlayDecorationArray">
            <summary>Legt die Shim von Player.SetPlayerCustomization(Player this, Player player, Boolean gender, HeadBlend headblend, Byte eyeColor, Byte hairColor, Byte highlightColor, Single[] faceFeatures, Dictionary`2 headOverlays, Decoration[] decorations) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerDecorationPlayerDecoration">
            <summary>Legt die Shim von Player.SetPlayerDecoration(Player this, Player player, Decoration decoration) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerDecorationPlayerDecorationArray">
            <summary>Legt die Shim von Player.SetPlayerDecoration(Player this, Player player, Decoration[] decoration) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerEyeColorPlayerByte">
            <summary>Legt die Shim von Player.SetPlayerEyeColor(Player this, Player player, Byte color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerFaceFeaturePlayerInt32Single">
            <summary>Legt die Shim von Player.SetPlayerFaceFeature(Player this, Player player, Int32 id, Single scale) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerHairColorPlayerByteByte">
            <summary>Legt die Shim von Player.SetPlayerHairColor(Player this, Player player, Byte color, Byte highlightColor) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerHeadBlendPaletteColorPlayerInt32Color">
            <summary>Legt die Shim von Player.SetPlayerHeadBlendPaletteColor(Player this, Player player, Int32 id, Color color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerHeadBlendPlayerHeadBlend">
            <summary>Legt die Shim von Player.SetPlayerHeadBlend(Player this, Player player, HeadBlend headblend) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerHeadOverlayPlayerInt32HeadOverlay">
            <summary>Legt die Shim von Player.SetPlayerHeadOverlay(Player this, Player player, Int32 overlayId, HeadOverlay headOverlay) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerHealthPlayerInt32">
            <summary>Legt die Shim von Player.SetPlayerHealth(Player this, Player player, Int32 health) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerIntoVehiclePlayerNetHandleInt32">
            <summary>Legt die Shim von Player.SetPlayerIntoVehicle(Player this, Player player, NetHandle vehicle, Int32 seat) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerNamePlayerString">
            <summary>Legt die Shim von Player.SetPlayerName(Player this, Player player, String newName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerNametagPlayerString">
            <summary>Legt die Shim von Player.SetPlayerNametag(Player this, Player player, String text) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerSkinPlayerPedHash">
            <summary>Legt die Shim von Player.SetPlayerSkin(Player this, Player player, PedHash modelHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerSkinPlayerUInt32">
            <summary>Legt die Shim von Player.SetPlayerSkin(Player this, Player player, UInt32 modelHash) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerVelocityPlayerVector3">
            <summary>Legt die Shim von Player.SetPlayerVelocity(Player this, Player player, Vector3 velocity) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerWeaponAmmoPlayerUInt32Int32">
            <summary>Legt die Shim von Player.SetPlayerWeaponAmmo(Player this, Player player, UInt32 weaponHash, Int32 ammo) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SetPlayerWeaponAmmoPlayerWeaponHashInt32">
            <summary>Legt die Shim von Player.SetPlayerWeaponAmmo(Player this, Player player, WeaponHash weaponHash, Int32 ammo) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.SpawnPlayerPlayerVector3Single">
            <summary>Legt die Shim von Player.SpawnPlayer(Player this, Player player, Vector3 pos, Single heading) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.StopPlayerAnimationPlayer">
            <summary>Legt die Shim von Player.StopPlayerAnimation(Player this, Player player) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.UpdatePlayerHeadBlendPlayerSingleSingleSingle">
            <summary>Legt die Shim von Player.UpdatePlayerHeadBlend(Player this, Player player, Single shapeMix, Single skinMix, Single thirdMix) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPlayer.WarpPlayerOutOfVehiclePlayer">
            <summary>Legt die Shim von Player.WarpPlayerOutOfVehicle(Player this, Player player) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimPools">
            <summary>Shim-Typ von GTANetworkMethods.Pools</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPools.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPools.#ctor(GTANetworkMethods.Pools)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimPools.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.AllInstances.GetAllBlips">
            <summary>Legt die Shim von Pools.GetAllBlips(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.AllInstances.GetAllCheckpoints">
            <summary>Legt die Shim von Pools.GetAllCheckpoints(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.AllInstances.GetAllColShapes">
            <summary>Legt die Shim von Pools.GetAllColShapes(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.AllInstances.GetAllDummyEntities">
            <summary>Legt die Shim von Pools.GetAllDummyEntities(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.AllInstances.GetAllMarkers">
            <summary>Legt die Shim von Pools.GetAllMarkers(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.AllInstances.GetAllObjects">
            <summary>Legt die Shim von Pools.GetAllObjects(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.AllInstances.GetAllPeds">
            <summary>Legt die Shim von Pools.GetAllPeds(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.AllInstances.GetAllPickups">
            <summary>Legt die Shim von Pools.GetAllPickups(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.AllInstances.GetAllPlayers">
            <summary>Legt die Shim von Pools.GetAllPlayers(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.AllInstances.GetAllTextLabels">
            <summary>Legt die Shim von Pools.GetAllTextLabels(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.AllInstances.GetAllVehicles">
            <summary>Legt die Shim von Pools.GetAllVehicles(Pools this) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPools.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPools.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimPools.Bind(GTANetworkMethods.IPools)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.Constructor">
            <summary>Legt die Shim von Pools.Pools(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.GetAllBlips">
            <summary>Legt die Shim von Pools.GetAllBlips(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.GetAllCheckpoints">
            <summary>Legt die Shim von Pools.GetAllCheckpoints(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.GetAllColShapes">
            <summary>Legt die Shim von Pools.GetAllColShapes(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.GetAllDummyEntities">
            <summary>Legt die Shim von Pools.GetAllDummyEntities(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.GetAllMarkers">
            <summary>Legt die Shim von Pools.GetAllMarkers(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.GetAllObjects">
            <summary>Legt die Shim von Pools.GetAllObjects(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.GetAllPeds">
            <summary>Legt die Shim von Pools.GetAllPeds(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.GetAllPickups">
            <summary>Legt die Shim von Pools.GetAllPickups(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.GetAllPlayers">
            <summary>Legt die Shim von Pools.GetAllPlayers(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.GetAllTextLabels">
            <summary>Legt die Shim von Pools.GetAllTextLabels(Pools this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimPools.GetAllVehicles">
            <summary>Legt die Shim von Pools.GetAllVehicles(Pools this) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimResource">
            <summary>Shim-Typ von GTANetworkMethods.Resource</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimResource.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimResource.#ctor(GTANetworkMethods.Resource)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimResource.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.CallScriptStringStringObjectArray">
            <summary>Legt die Shim von Resource.Call(Resource this, Script scriptEngine, String className, String methodName, Object[] arguments) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.DoesConfigExistScriptString">
            <summary>Legt die Shim von Resource.DoesConfigExist(Resource this, Script scriptEngine, String configName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.DoesResourceExistString">
            <summary>Legt die Shim von Resource.DoesResourceExist(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetAllResources">
            <summary>Legt die Shim von Resource.GetAllResources(Resource this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetCurrentGamemode">
            <summary>Legt die Shim von Resource.GetCurrentGamemode(Resource this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetMapGamemodesString">
            <summary>Legt die Shim von Resource.GetMapGamemodes(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetMapsForGamemodeString">
            <summary>Legt die Shim von Resource.GetMapsForGamemode(Resource this, String gamemode) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetResourceAuthorString">
            <summary>Legt die Shim von Resource.GetResourceAuthor(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetResourceCommandInfoStringString">
            <summary>Legt die Shim von Resource.GetResourceCommandInfo(Resource this, String resource, String command) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetResourceCommandInfosString">
            <summary>Legt die Shim von Resource.GetResourceCommandInfos(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetResourceCommandsString">
            <summary>Legt die Shim von Resource.GetResourceCommands(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetResourceDescriptionString">
            <summary>Legt die Shim von Resource.GetResourceDescription(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetResourceFolderScript">
            <summary>Legt die Shim von Resource.GetResourceFolder(Resource this, Script scriptEngine) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetResourceNameString">
            <summary>Legt die Shim von Resource.GetResourceName(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetResourceSettingDescriptionStringString">
            <summary>Legt die Shim von Resource.GetResourceSettingDescription(Resource this, String resource, String setting) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetResourceSettingOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkMethods.Resource,System.String,System.String,``0})">
            <summary>Legt die Shim von Resource.GetResourceSetting(Resource this, String resource, String setting) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetResourceSettingsString">
            <summary>Legt die Shim von Resource.GetResourceSettings(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetResourceTypeString">
            <summary>Legt die Shim von Resource.GetResourceType(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetResourceVersionString">
            <summary>Legt die Shim von Resource.GetResourceVersion(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetRunningResources">
            <summary>Legt die Shim von Resource.GetRunningResources(Resource this) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetSettingOf1ScriptString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkMethods.Resource,GTANetworkAPI.Script,System.String,``0})">
            <summary>Legt die Shim von Resource.GetSetting(Resource this, Script scriptEngine, String settingName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.GetThisResourceScript">
            <summary>Legt die Shim von Resource.GetThisResource(Resource this, Script scriptEngine) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.HasResourceSettingStringString">
            <summary>Legt die Shim von Resource.HasResourceSetting(Resource this, String resource, String settingName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.HasSettingScriptString">
            <summary>Legt die Shim von Resource.HasSetting(Resource this, Script scriptEngine, String settingName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.IsResourceRunningString">
            <summary>Legt die Shim von Resource.IsResourceRunning(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.LoadConfigScriptString">
            <summary>Legt die Shim von Resource.LoadConfig(Resource this, Script scriptEngine, String configName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.LoadXmlString">
            <summary>Legt die Shim von Resource.LoadXml(Resource this, String path) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.SetResourceSettingStringStringObject">
            <summary>Legt die Shim von Resource.SetResourceSetting(Resource this, String resource, String setting, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.SetSettingScriptStringObject">
            <summary>Legt die Shim von Resource.SetSetting(Resource this, Script scriptEngine, String settingName, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.StartResourceString">
            <summary>Legt die Shim von Resource.StartResource(Resource this, String resourceName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.AllInstances.StopResourceString">
            <summary>Legt die Shim von Resource.StopResource(Resource this, String name) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimResource.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimResource.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimResource.Bind(GTANetworkMethods.IResource)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.CallScriptStringStringObjectArray">
            <summary>Legt die Shim von Resource.Call(Resource this, Script scriptEngine, String className, String methodName, Object[] arguments) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.Constructor">
            <summary>Legt die Shim von Resource.Resource(Resource this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.DoesConfigExistScriptString">
            <summary>Legt die Shim von Resource.DoesConfigExist(Resource this, Script scriptEngine, String configName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.DoesResourceExistString">
            <summary>Legt die Shim von Resource.DoesResourceExist(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetAllResources">
            <summary>Legt die Shim von Resource.GetAllResources(Resource this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetCurrentGamemode">
            <summary>Legt die Shim von Resource.GetCurrentGamemode(Resource this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetMapGamemodesString">
            <summary>Legt die Shim von Resource.GetMapGamemodes(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetMapsForGamemodeString">
            <summary>Legt die Shim von Resource.GetMapsForGamemode(Resource this, String gamemode) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetResourceAuthorString">
            <summary>Legt die Shim von Resource.GetResourceAuthor(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetResourceCommandInfoStringString">
            <summary>Legt die Shim von Resource.GetResourceCommandInfo(Resource this, String resource, String command) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetResourceCommandInfosString">
            <summary>Legt die Shim von Resource.GetResourceCommandInfos(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetResourceCommandsString">
            <summary>Legt die Shim von Resource.GetResourceCommands(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetResourceDescriptionString">
            <summary>Legt die Shim von Resource.GetResourceDescription(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetResourceFolderScript">
            <summary>Legt die Shim von Resource.GetResourceFolder(Resource this, Script scriptEngine) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetResourceNameString">
            <summary>Legt die Shim von Resource.GetResourceName(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetResourceSettingDescriptionStringString">
            <summary>Legt die Shim von Resource.GetResourceSettingDescription(Resource this, String resource, String setting) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimResource.GetResourceSettingOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,``0})">
            <summary>Legt die Shim von Resource.GetResourceSetting(Resource this, String resource, String setting) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetResourceSettingsString">
            <summary>Legt die Shim von Resource.GetResourceSettings(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetResourceTypeString">
            <summary>Legt die Shim von Resource.GetResourceType(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetResourceVersionString">
            <summary>Legt die Shim von Resource.GetResourceVersion(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetRunningResources">
            <summary>Legt die Shim von Resource.GetRunningResources(Resource this) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimResource.GetSettingOf1ScriptString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkAPI.Script,System.String,``0})">
            <summary>Legt die Shim von Resource.GetSetting(Resource this, Script scriptEngine, String settingName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.GetThisResourceScript">
            <summary>Legt die Shim von Resource.GetThisResource(Resource this, Script scriptEngine) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.HasResourceSettingStringString">
            <summary>Legt die Shim von Resource.HasResourceSetting(Resource this, String resource, String settingName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.HasSettingScriptString">
            <summary>Legt die Shim von Resource.HasSetting(Resource this, Script scriptEngine, String settingName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.IsResourceRunningString">
            <summary>Legt die Shim von Resource.IsResourceRunning(Resource this, String resource) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.LoadConfigScriptString">
            <summary>Legt die Shim von Resource.LoadConfig(Resource this, Script scriptEngine, String configName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.LoadXmlString">
            <summary>Legt die Shim von Resource.LoadXml(Resource this, String path) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.SetResourceSettingStringStringObject">
            <summary>Legt die Shim von Resource.SetResourceSetting(Resource this, String resource, String setting, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.SetSettingScriptStringObject">
            <summary>Legt die Shim von Resource.SetSetting(Resource this, Script scriptEngine, String settingName, Object value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.StartResourceString">
            <summary>Legt die Shim von Resource.StartResource(Resource this, String resourceName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimResource.StopResourceString">
            <summary>Legt die Shim von Resource.StopResource(Resource this, String name) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimServer">
            <summary>Shim-Typ von GTANetworkMethods.Server</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimServer.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimServer.#ctor(GTANetworkMethods.Server)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimServer.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.AllInstances.EndBatch">
            <summary>Legt die Shim von Server.EndBatch(Server this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.AllInstances.GetGamemodeName">
            <summary>Legt die Shim von Server.GetGamemodeName(Server this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.AllInstances.GetMaxPlayers">
            <summary>Legt die Shim von Server.GetMaxPlayers(Server this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.AllInstances.GetServerName">
            <summary>Legt die Shim von Server.GetServerName(Server this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.AllInstances.GetServerPort">
            <summary>Legt die Shim von Server.GetServerPort(Server this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.AllInstances.IsPasswordProtected">
            <summary>Legt die Shim von Server.IsPasswordProtected(Server this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.AllInstances.SetAutoRespawnAfterDeathBoolean">
            <summary>Legt die Shim von Server.SetAutoRespawnAfterDeath(Server this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.AllInstances.SetAutoSpawnOnConnectBoolean">
            <summary>Legt die Shim von Server.SetAutoSpawnOnConnect(Server this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.AllInstances.SetCommandErrorMessageString">
            <summary>Legt die Shim von Server.SetCommandErrorMessage(Server this, String msg) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.AllInstances.SetDefaultSpawnLocationVector3Single">
            <summary>Legt die Shim von Server.SetDefaultSpawnLocation(Server this, Vector3 location, Single heading) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.AllInstances.SetGamemodeNameString">
            <summary>Legt die Shim von Server.SetGamemodeName(Server this, String newName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.AllInstances.SetGlobalDefaultCommandMessagesBoolean">
            <summary>Legt die Shim von Server.SetGlobalDefaultCommandMessages(Server this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.AllInstances.SetGlobalServerChatBoolean">
            <summary>Legt die Shim von Server.SetGlobalServerChat(Server this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.AllInstances.SetLogCommandParamParserExceptionsBoolean">
            <summary>Legt die Shim von Server.SetLogCommandParamParserExceptions(Server this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.AllInstances.SetLogRemoteEventParamParserExceptionsBoolean">
            <summary>Legt die Shim von Server.SetLogRemoteEventParamParserExceptions(Server this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.AllInstances.StartBatch">
            <summary>Legt die Shim von Server.StartBatch(Server this) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimServer.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimServer.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimServer.Bind(GTANetworkMethods.IServer)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.Constructor">
            <summary>Legt die Shim von Server.Server(Server this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.EndBatch">
            <summary>Legt die Shim von Server.EndBatch(Server this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.GetGamemodeName">
            <summary>Legt die Shim von Server.GetGamemodeName(Server this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.GetMaxPlayers">
            <summary>Legt die Shim von Server.GetMaxPlayers(Server this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.GetServerName">
            <summary>Legt die Shim von Server.GetServerName(Server this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.GetServerPort">
            <summary>Legt die Shim von Server.GetServerPort(Server this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.IsPasswordProtected">
            <summary>Legt die Shim von Server.IsPasswordProtected(Server this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.SetAutoRespawnAfterDeathBoolean">
            <summary>Legt die Shim von Server.SetAutoRespawnAfterDeath(Server this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.SetAutoSpawnOnConnectBoolean">
            <summary>Legt die Shim von Server.SetAutoSpawnOnConnect(Server this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.SetCommandErrorMessageString">
            <summary>Legt die Shim von Server.SetCommandErrorMessage(Server this, String msg) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.SetDefaultSpawnLocationVector3Single">
            <summary>Legt die Shim von Server.SetDefaultSpawnLocation(Server this, Vector3 location, Single heading) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.SetGamemodeNameString">
            <summary>Legt die Shim von Server.SetGamemodeName(Server this, String newName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.SetGlobalDefaultCommandMessagesBoolean">
            <summary>Legt die Shim von Server.SetGlobalDefaultCommandMessages(Server this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.SetGlobalServerChatBoolean">
            <summary>Legt die Shim von Server.SetGlobalServerChat(Server this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.SetLogCommandParamParserExceptionsBoolean">
            <summary>Legt die Shim von Server.SetLogCommandParamParserExceptions(Server this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.SetLogRemoteEventParamParserExceptionsBoolean">
            <summary>Legt die Shim von Server.SetLogRemoteEventParamParserExceptions(Server this, Boolean value) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimServer.StartBatch">
            <summary>Legt die Shim von Server.StartBatch(Server this) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimTask">
            <summary>Shim-Typ von GTANetworkMethods.Task</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimTask.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimTask.#ctor(GTANetworkMethods.Task)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimTask.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTask.AllInstances.RunActionInt64">
            <summary>Legt die Shim von Task.Run(Task this, Action task, Int64 delayTime) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTask.AllInstances.WaitForMainThreadInt64">
            <summary>Legt die Shim von Task.WaitForMainThread(Task this, Int64 delayTime) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimTask.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimTask.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTask.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTask.Constructor">
            <summary>Legt die Shim von Task.Task(Task this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTask.RunActionInt64">
            <summary>Legt die Shim von Task.Run(Task this, Action task, Int64 delayTime) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTask.WaitForMainThreadInt64">
            <summary>Legt die Shim von Task.WaitForMainThread(Task this, Int64 delayTime) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimTextLabel">
            <summary>Shim-Typ von GTANetworkMethods.TextLabel</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimTextLabel.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimTextLabel.#ctor(GTANetworkMethods.TextLabel)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimTextLabel.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.AllInstances.CreateTextLabelStringVector3SingleSingleInt32ColorBooleanUInt32">
            <summary>Legt die Shim von TextLabel.CreateTextLabel(TextLabel this, String text, Vector3 pos, Single range, Single size, Int32 font, Color color, Boolean entitySeethrough, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.AllInstances.GetTextLabelColorNetHandle">
            <summary>Legt die Shim von TextLabel.GetTextLabelColor(TextLabel this, NetHandle label) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.AllInstances.GetTextLabelRangeNetHandle">
            <summary>Legt die Shim von TextLabel.GetTextLabelRange(TextLabel this, NetHandle label) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.AllInstances.GetTextLabelSeethroughNetHandle">
            <summary>Legt die Shim von TextLabel.GetTextLabelSeethrough(TextLabel this, NetHandle label) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.AllInstances.GetTextLabelTextNetHandle">
            <summary>Legt die Shim von TextLabel.GetTextLabelText(TextLabel this, NetHandle label) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.AllInstances.SetTextLabelColorNetHandleInt32Int32Int32Int32">
            <summary>Legt die Shim von TextLabel.SetTextLabelColor(TextLabel this, NetHandle label, Int32 red, Int32 green, Int32 blue, Int32 alpha) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.AllInstances.SetTextLabelRangeNetHandleSingle">
            <summary>Legt die Shim von TextLabel.SetTextLabelRange(TextLabel this, NetHandle label, Single newRange) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.AllInstances.SetTextLabelSeethroughNetHandleBoolean">
            <summary>Legt die Shim von TextLabel.SetTextLabelSeethrough(TextLabel this, NetHandle label, Boolean seethrough) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.AllInstances.SetTextLabelTextNetHandleString">
            <summary>Legt die Shim von TextLabel.SetTextLabelText(TextLabel this, NetHandle label, String newText) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimTextLabel.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimTextLabel.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimTextLabel.Bind(GTANetworkMethods.ITextLabel)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.Constructor">
            <summary>Legt die Shim von TextLabel.TextLabel(TextLabel this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.CreateTextLabelStringVector3SingleSingleInt32ColorBooleanUInt32">
            <summary>Legt die Shim von TextLabel.CreateTextLabel(TextLabel this, String text, Vector3 pos, Single range, Single size, Int32 font, Color color, Boolean entitySeethrough, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.GetTextLabelColorNetHandle">
            <summary>Legt die Shim von TextLabel.GetTextLabelColor(TextLabel this, NetHandle label) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.GetTextLabelRangeNetHandle">
            <summary>Legt die Shim von TextLabel.GetTextLabelRange(TextLabel this, NetHandle label) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.GetTextLabelSeethroughNetHandle">
            <summary>Legt die Shim von TextLabel.GetTextLabelSeethrough(TextLabel this, NetHandle label) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.GetTextLabelTextNetHandle">
            <summary>Legt die Shim von TextLabel.GetTextLabelText(TextLabel this, NetHandle label) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.SetTextLabelColorNetHandleInt32Int32Int32Int32">
            <summary>Legt die Shim von TextLabel.SetTextLabelColor(TextLabel this, NetHandle label, Int32 red, Int32 green, Int32 blue, Int32 alpha) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.SetTextLabelRangeNetHandleSingle">
            <summary>Legt die Shim von TextLabel.SetTextLabelRange(TextLabel this, NetHandle label, Single newRange) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.SetTextLabelSeethroughNetHandleBoolean">
            <summary>Legt die Shim von TextLabel.SetTextLabelSeethrough(TextLabel this, NetHandle label, Boolean seethrough) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimTextLabel.SetTextLabelTextNetHandleString">
            <summary>Legt die Shim von TextLabel.SetTextLabelText(TextLabel this, NetHandle label, String newText) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimUtil">
            <summary>Shim-Typ von GTANetworkMethods.Util</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimUtil.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimUtil.#ctor(GTANetworkMethods.Util)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimUtil.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.AllInstances.ConsoleOutputString">
            <summary>Legt die Shim von Util.ConsoleOutput(Util this, String text) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.AllInstances.ConsoleOutputStringObjectArray">
            <summary>Legt die Shim von Util.ConsoleOutput(Util this, String text, Object[] args) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimUtil.AllInstances.FromJsonOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkMethods.Util,System.Object,``0})">
            <summary>Legt die Shim von Util.FromJson(Util this, Object json) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimUtil.AllInstances.FromJsonOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{GTANetworkMethods.Util,System.String,``0})">
            <summary>Legt die Shim von Util.FromJson(Util this, String json) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.AllInstances.GetAllWeaponComponentsWeaponHash">
            <summary>Legt die Shim von Util.GetAllWeaponComponents(Util this, WeaponHash weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.AllInstances.GetHashKeyString">
            <summary>Legt die Shim von Util.GetHashKey(Util this, String input) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.AllInstances.GetHashSha256String">
            <summary>Legt die Shim von Util.GetHashSha256(Util this, String input) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.AllInstances.PedNameToModelString">
            <summary>Legt die Shim von Util.PedNameToModel(Util this, String modelName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.AllInstances.PickupNameToModelString">
            <summary>Legt die Shim von Util.PickupNameToModel(Util this, String modelName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.AllInstances.ToJsonObject">
            <summary>Legt die Shim von Util.ToJson(Util this, Object data) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.AllInstances.VehicleNameToModelString">
            <summary>Legt die Shim von Util.VehicleNameToModel(Util this, String modelName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.AllInstances.WeaponNameToModelString">
            <summary>Legt die Shim von Util.WeaponNameToModel(Util this, String modelName) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimUtil.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimUtil.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimUtil.Bind(GTANetworkMethods.IUtil)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.ConsoleOutputString">
            <summary>Legt die Shim von Util.ConsoleOutput(Util this, String text) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.ConsoleOutputStringObjectArray">
            <summary>Legt die Shim von Util.ConsoleOutput(Util this, String text, Object[] args) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.Constructor">
            <summary>Legt die Shim von Util.Util(Util this) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimUtil.FromJsonOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Legt die Shim von Util.FromJson(Util this, Object json) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimUtil.FromJsonOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Legt die Shim von Util.FromJson(Util this, String json) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.GetAllWeaponComponentsWeaponHash">
            <summary>Legt die Shim von Util.GetAllWeaponComponents(Util this, WeaponHash weapon) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.GetHashKeyString">
            <summary>Legt die Shim von Util.GetHashKey(Util this, String input) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.GetHashSha256String">
            <summary>Legt die Shim von Util.GetHashSha256(Util this, String input) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.PedNameToModelString">
            <summary>Legt die Shim von Util.PedNameToModel(Util this, String modelName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.PickupNameToModelString">
            <summary>Legt die Shim von Util.PickupNameToModel(Util this, String modelName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.ToJsonObject">
            <summary>Legt die Shim von Util.ToJson(Util this, Object data) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.VehicleNameToModelString">
            <summary>Legt die Shim von Util.VehicleNameToModel(Util this, String modelName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimUtil.WeaponNameToModelString">
            <summary>Legt die Shim von Util.WeaponNameToModel(Util this, String modelName) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimVehicle">
            <summary>Shim-Typ von GTANetworkMethods.Vehicle</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimVehicle.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimVehicle.#ctor(GTANetworkMethods.Vehicle)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimVehicle.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.CreateVehicleInt32Vector3SingleInt32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Vehicle.CreateVehicle(Vehicle this, Int32 model, Vector3 pos, Single rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.CreateVehicleInt32Vector3Vector3Int32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Vehicle.CreateVehicle(Vehicle this, Int32 model, Vector3 pos, Vector3 rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.CreateVehicleUInt32Vector3SingleInt32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Vehicle.CreateVehicle(Vehicle this, UInt32 model, Vector3 pos, Single rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.CreateVehicleVehicleHashVector3SingleColorColorStringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Vehicle.CreateVehicle(Vehicle this, VehicleHash model, Vector3 pos, Single rot, Color color1, Color color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.CreateVehicleVehicleHashVector3SingleInt32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Vehicle.CreateVehicle(Vehicle this, VehicleHash model, Vector3 pos, Single rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.CreateVehicleVehicleHashVector3Vector3Int32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Vehicle.CreateVehicle(Vehicle this, VehicleHash model, Vector3 pos, Vector3 rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.ExplodeVehicleVehicle">
            <summary>Legt die Shim von Vehicle.ExplodeVehicle(Vehicle this, Vehicle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleBodyHealthNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleBodyHealth(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleBulletproofTyresNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleBulletproofTyres(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleClassNameInt32">
            <summary>Legt die Shim von Vehicle.GetVehicleClassName(Vehicle this, Int32 classId) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleClassVehicleHash">
            <summary>Legt die Shim von Vehicle.GetVehicleClass(Vehicle this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleCustomPrimaryColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleCustomPrimaryColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleCustomSecondaryColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleCustomSecondaryColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleCustomTiresNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleCustomTires(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleDashboardColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleDashboardColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleDisplayNameVehicleHash">
            <summary>Legt die Shim von Vehicle.GetVehicleDisplayName(Vehicle this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleDriverNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleDriver(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleEngineHealthNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleEngineHealth(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleEnginePowerMultiplierNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleEnginePowerMultiplier(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleEngineStatusNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleEngineStatus(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleEngineTorqueMultiplierNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleEngineTorqueMultiplier(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleExtraNetHandleInt32">
            <summary>Legt die Shim von Vehicle.GetVehicleExtra(Vehicle this, NetHandle vehicle, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleHealthNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleHealth(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleLiveryNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleLivery(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleLockedNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleLocked(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleMaxAccelerationVehicleHash">
            <summary>Legt die Shim von Vehicle.GetVehicleMaxAcceleration(Vehicle this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleMaxBrakingVehicleHash">
            <summary>Legt die Shim von Vehicle.GetVehicleMaxBraking(Vehicle this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleMaxOccupantsVehicleHash">
            <summary>Legt die Shim von Vehicle.GetVehicleMaxOccupants(Vehicle this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleMaxPassengersVehicleHash">
            <summary>Legt die Shim von Vehicle.GetVehicleMaxPassengers(Vehicle this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleMaxSpeedVehicleHash">
            <summary>Legt die Shim von Vehicle.GetVehicleMaxSpeed(Vehicle this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleMaxTractionVehicleHash">
            <summary>Legt die Shim von Vehicle.GetVehicleMaxTraction(Vehicle this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleModNetHandleInt32">
            <summary>Legt die Shim von Vehicle.GetVehicleMod(Vehicle this, NetHandle vehicle, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleNeonColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleNeonColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleNeonStateNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleNeonState(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleNumberPlateNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleNumberPlate(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleNumberPlateStyleNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleNumberPlateStyle(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleOccupantsNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleOccupants(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleOccupantsNetHandleInt32">
            <summary>Legt die Shim von Vehicle.GetVehicleOccupants(Vehicle this, NetHandle vehicle, Int32 maxOccupants) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehiclePearlescentColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehiclePearlescentColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehiclePrimaryColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehiclePrimaryColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehiclePrimaryPaintNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehiclePrimaryPaint(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleSecondaryColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleSecondaryColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleSecondaryPaintNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleSecondaryPaint(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleSirenStateNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleSirenState(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleSpecialLightStatusNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleSpecialLightStatus(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleTrailerNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleTrailer(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleTraileredByNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleTraileredBy(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleTrimColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleTrimColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleTyreSmokeColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleTyreSmokeColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleWheelColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleWheelColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleWheelTypeNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleWheelType(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.GetVehicleWindowTintNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleWindowTint(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.RemoveVehicleModNetHandleInt32">
            <summary>Legt die Shim von Vehicle.RemoveVehicleMod(Vehicle this, NetHandle vehicle, Int32 modType) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.RepairVehicleNetHandle">
            <summary>Legt die Shim von Vehicle.RepairVehicle(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleBodyHealthNetHandleSingle">
            <summary>Legt die Shim von Vehicle.SetVehicleBodyHealth(Vehicle this, NetHandle vehicle, Single health) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleBulletproofTyresNetHandleBoolean">
            <summary>Legt die Shim von Vehicle.SetVehicleBulletproofTyres(Vehicle this, NetHandle vehicle, Boolean state) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleCustomPrimaryColorNetHandleInt32Int32Int32">
            <summary>Legt die Shim von Vehicle.SetVehicleCustomPrimaryColor(Vehicle this, NetHandle vehicle, Int32 red, Int32 green, Int32 blue) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleCustomSecondaryColorNetHandleInt32Int32Int32">
            <summary>Legt die Shim von Vehicle.SetVehicleCustomSecondaryColor(Vehicle this, NetHandle vehicle, Int32 red, Int32 green, Int32 blue) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleCustomTiresNetHandleBoolean">
            <summary>Legt die Shim von Vehicle.SetVehicleCustomTires(Vehicle this, NetHandle vehicle, Boolean enable) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleDashboardColorNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehicleDashboardColor(Vehicle this, NetHandle vehicle, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleEngineHealthNetHandleSingle">
            <summary>Legt die Shim von Vehicle.SetVehicleEngineHealth(Vehicle this, NetHandle vehicle, Single health) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleEnginePowerMultiplierNetHandleSingle">
            <summary>Legt die Shim von Vehicle.SetVehicleEnginePowerMultiplier(Vehicle this, NetHandle vehicle, Single mult) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleEngineStatusNetHandleBoolean">
            <summary>Legt die Shim von Vehicle.SetVehicleEngineStatus(Vehicle this, NetHandle vehicle, Boolean state) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleEngineTorqueMultiplierNetHandleSingle">
            <summary>Legt die Shim von Vehicle.SetVehicleEngineTorqueMultiplier(Vehicle this, NetHandle vehicle, Single mult) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleExtraNetHandleInt32Boolean">
            <summary>Legt die Shim von Vehicle.SetVehicleExtra(Vehicle this, NetHandle vehicle, Int32 slot, Boolean enabled) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleHealthNetHandleSingle">
            <summary>Legt die Shim von Vehicle.SetVehicleHealth(Vehicle this, NetHandle vehicle, Single health) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleLiveryNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehicleLivery(Vehicle this, NetHandle vehicle, Int32 livery) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleLockedNetHandleBoolean">
            <summary>Legt die Shim von Vehicle.SetVehicleLocked(Vehicle this, NetHandle vehicle, Boolean locked) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleModNetHandleInt32Int32">
            <summary>Legt die Shim von Vehicle.SetVehicleMod(Vehicle this, NetHandle vehicle, Int32 modType, Int32 mod) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleNeonColorNetHandleInt32Int32Int32">
            <summary>Legt die Shim von Vehicle.SetVehicleNeonColor(Vehicle this, NetHandle vehicle, Int32 r, Int32 g, Int32 b) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleNeonStateNetHandleBoolean">
            <summary>Legt die Shim von Vehicle.SetVehicleNeonState(Vehicle this, NetHandle vehicle, Boolean turnedOn) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleNumberPlateNetHandleString">
            <summary>Legt die Shim von Vehicle.SetVehicleNumberPlate(Vehicle this, NetHandle vehicle, String plate) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleNumberPlateStyleNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehicleNumberPlateStyle(Vehicle this, NetHandle vehicle, Int32 style) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehiclePearlescentColorNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehiclePearlescentColor(Vehicle this, NetHandle vehicle, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehiclePrimaryColorNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehiclePrimaryColor(Vehicle this, NetHandle vehicle, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehiclePrimaryPaintNetHandleInt32Int32">
            <summary>Legt die Shim von Vehicle.SetVehiclePrimaryPaint(Vehicle this, NetHandle vehicle, Int32 paintType, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleSecondaryColorNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehicleSecondaryColor(Vehicle this, NetHandle vehicle, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleSecondaryPaintNetHandleInt32Int32">
            <summary>Legt die Shim von Vehicle.SetVehicleSecondaryPaint(Vehicle this, NetHandle vehicle, Int32 paintType, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleSirenStateNetHandleBoolean">
            <summary>Legt die Shim von Vehicle.SetVehicleSirenState(Vehicle this, NetHandle vehicle, Boolean state) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleSpecialLightStatusNetHandleBoolean">
            <summary>Legt die Shim von Vehicle.SetVehicleSpecialLightStatus(Vehicle this, NetHandle vehicle, Boolean state) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleTrimColorNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehicleTrimColor(Vehicle this, NetHandle vehicle, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleTyreSmokeColorNetHandleColor">
            <summary>Legt die Shim von Vehicle.SetVehicleTyreSmokeColor(Vehicle this, NetHandle vehicle, Color color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleWheelColorNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehicleWheelColor(Vehicle this, NetHandle vehicle, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleWheelTypeNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehicleWheelType(Vehicle this, NetHandle vehicle, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SetVehicleWindowTintNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehicleWindowTint(Vehicle this, NetHandle vehicle, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.AllInstances.SpawnVehicleNetHandleVector3Single">
            <summary>Legt die Shim von Vehicle.SpawnVehicle(Vehicle this, NetHandle vehicle, Vector3 position, Single heading) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimVehicle.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimVehicle.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimVehicle.Bind(GTANetworkMethods.IVehicle)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.Constructor">
            <summary>Legt die Shim von Vehicle.Vehicle(Vehicle this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.CreateVehicleInt32Vector3SingleInt32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Vehicle.CreateVehicle(Vehicle this, Int32 model, Vector3 pos, Single rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.CreateVehicleInt32Vector3Vector3Int32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Vehicle.CreateVehicle(Vehicle this, Int32 model, Vector3 pos, Vector3 rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.CreateVehicleUInt32Vector3SingleInt32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Vehicle.CreateVehicle(Vehicle this, UInt32 model, Vector3 pos, Single rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.CreateVehicleVehicleHashVector3SingleColorColorStringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Vehicle.CreateVehicle(Vehicle this, VehicleHash model, Vector3 pos, Single rot, Color color1, Color color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.CreateVehicleVehicleHashVector3SingleInt32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Vehicle.CreateVehicle(Vehicle this, VehicleHash model, Vector3 pos, Single rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.CreateVehicleVehicleHashVector3Vector3Int32Int32StringByteBooleanBooleanUInt32">
            <summary>Legt die Shim von Vehicle.CreateVehicle(Vehicle this, VehicleHash model, Vector3 pos, Vector3 rot, Int32 color1, Int32 color2, String numberPlate, Byte alpha, Boolean locked, Boolean engine, UInt32 dimension) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.ExplodeVehicleVehicle">
            <summary>Legt die Shim von Vehicle.ExplodeVehicle(Vehicle this, Vehicle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleBodyHealthNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleBodyHealth(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleBulletproofTyresNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleBulletproofTyres(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleClassNameInt32">
            <summary>Legt die Shim von Vehicle.GetVehicleClassName(Vehicle this, Int32 classId) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleClassVehicleHash">
            <summary>Legt die Shim von Vehicle.GetVehicleClass(Vehicle this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleCustomPrimaryColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleCustomPrimaryColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleCustomSecondaryColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleCustomSecondaryColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleCustomTiresNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleCustomTires(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleDashboardColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleDashboardColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleDisplayNameVehicleHash">
            <summary>Legt die Shim von Vehicle.GetVehicleDisplayName(Vehicle this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleDriverNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleDriver(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleEngineHealthNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleEngineHealth(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleEnginePowerMultiplierNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleEnginePowerMultiplier(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleEngineStatusNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleEngineStatus(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleEngineTorqueMultiplierNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleEngineTorqueMultiplier(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleExtraNetHandleInt32">
            <summary>Legt die Shim von Vehicle.GetVehicleExtra(Vehicle this, NetHandle vehicle, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleHealthNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleHealth(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleLiveryNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleLivery(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleLockedNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleLocked(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleMaxAccelerationVehicleHash">
            <summary>Legt die Shim von Vehicle.GetVehicleMaxAcceleration(Vehicle this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleMaxBrakingVehicleHash">
            <summary>Legt die Shim von Vehicle.GetVehicleMaxBraking(Vehicle this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleMaxOccupantsVehicleHash">
            <summary>Legt die Shim von Vehicle.GetVehicleMaxOccupants(Vehicle this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleMaxPassengersVehicleHash">
            <summary>Legt die Shim von Vehicle.GetVehicleMaxPassengers(Vehicle this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleMaxSpeedVehicleHash">
            <summary>Legt die Shim von Vehicle.GetVehicleMaxSpeed(Vehicle this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleMaxTractionVehicleHash">
            <summary>Legt die Shim von Vehicle.GetVehicleMaxTraction(Vehicle this, VehicleHash model) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleModNetHandleInt32">
            <summary>Legt die Shim von Vehicle.GetVehicleMod(Vehicle this, NetHandle vehicle, Int32 slot) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleNeonColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleNeonColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleNeonStateNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleNeonState(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleNumberPlateNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleNumberPlate(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleNumberPlateStyleNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleNumberPlateStyle(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleOccupantsNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleOccupants(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleOccupantsNetHandleInt32">
            <summary>Legt die Shim von Vehicle.GetVehicleOccupants(Vehicle this, NetHandle vehicle, Int32 maxOccupants) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehiclePearlescentColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehiclePearlescentColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehiclePrimaryColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehiclePrimaryColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehiclePrimaryPaintNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehiclePrimaryPaint(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleSecondaryColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleSecondaryColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleSecondaryPaintNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleSecondaryPaint(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleSirenStateNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleSirenState(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleSpecialLightStatusNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleSpecialLightStatus(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleTrailerNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleTrailer(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleTraileredByNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleTraileredBy(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleTrimColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleTrimColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleTyreSmokeColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleTyreSmokeColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleWheelColorNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleWheelColor(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleWheelTypeNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleWheelType(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.GetVehicleWindowTintNetHandle">
            <summary>Legt die Shim von Vehicle.GetVehicleWindowTint(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.RemoveVehicleModNetHandleInt32">
            <summary>Legt die Shim von Vehicle.RemoveVehicleMod(Vehicle this, NetHandle vehicle, Int32 modType) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.RepairVehicleNetHandle">
            <summary>Legt die Shim von Vehicle.RepairVehicle(Vehicle this, NetHandle vehicle) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleBodyHealthNetHandleSingle">
            <summary>Legt die Shim von Vehicle.SetVehicleBodyHealth(Vehicle this, NetHandle vehicle, Single health) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleBulletproofTyresNetHandleBoolean">
            <summary>Legt die Shim von Vehicle.SetVehicleBulletproofTyres(Vehicle this, NetHandle vehicle, Boolean state) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleCustomPrimaryColorNetHandleInt32Int32Int32">
            <summary>Legt die Shim von Vehicle.SetVehicleCustomPrimaryColor(Vehicle this, NetHandle vehicle, Int32 red, Int32 green, Int32 blue) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleCustomSecondaryColorNetHandleInt32Int32Int32">
            <summary>Legt die Shim von Vehicle.SetVehicleCustomSecondaryColor(Vehicle this, NetHandle vehicle, Int32 red, Int32 green, Int32 blue) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleCustomTiresNetHandleBoolean">
            <summary>Legt die Shim von Vehicle.SetVehicleCustomTires(Vehicle this, NetHandle vehicle, Boolean enable) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleDashboardColorNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehicleDashboardColor(Vehicle this, NetHandle vehicle, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleEngineHealthNetHandleSingle">
            <summary>Legt die Shim von Vehicle.SetVehicleEngineHealth(Vehicle this, NetHandle vehicle, Single health) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleEnginePowerMultiplierNetHandleSingle">
            <summary>Legt die Shim von Vehicle.SetVehicleEnginePowerMultiplier(Vehicle this, NetHandle vehicle, Single mult) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleEngineStatusNetHandleBoolean">
            <summary>Legt die Shim von Vehicle.SetVehicleEngineStatus(Vehicle this, NetHandle vehicle, Boolean state) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleEngineTorqueMultiplierNetHandleSingle">
            <summary>Legt die Shim von Vehicle.SetVehicleEngineTorqueMultiplier(Vehicle this, NetHandle vehicle, Single mult) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleExtraNetHandleInt32Boolean">
            <summary>Legt die Shim von Vehicle.SetVehicleExtra(Vehicle this, NetHandle vehicle, Int32 slot, Boolean enabled) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleHealthNetHandleSingle">
            <summary>Legt die Shim von Vehicle.SetVehicleHealth(Vehicle this, NetHandle vehicle, Single health) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleLiveryNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehicleLivery(Vehicle this, NetHandle vehicle, Int32 livery) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleLockedNetHandleBoolean">
            <summary>Legt die Shim von Vehicle.SetVehicleLocked(Vehicle this, NetHandle vehicle, Boolean locked) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleModNetHandleInt32Int32">
            <summary>Legt die Shim von Vehicle.SetVehicleMod(Vehicle this, NetHandle vehicle, Int32 modType, Int32 mod) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleNeonColorNetHandleInt32Int32Int32">
            <summary>Legt die Shim von Vehicle.SetVehicleNeonColor(Vehicle this, NetHandle vehicle, Int32 r, Int32 g, Int32 b) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleNeonStateNetHandleBoolean">
            <summary>Legt die Shim von Vehicle.SetVehicleNeonState(Vehicle this, NetHandle vehicle, Boolean turnedOn) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleNumberPlateNetHandleString">
            <summary>Legt die Shim von Vehicle.SetVehicleNumberPlate(Vehicle this, NetHandle vehicle, String plate) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleNumberPlateStyleNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehicleNumberPlateStyle(Vehicle this, NetHandle vehicle, Int32 style) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehiclePearlescentColorNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehiclePearlescentColor(Vehicle this, NetHandle vehicle, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehiclePrimaryColorNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehiclePrimaryColor(Vehicle this, NetHandle vehicle, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehiclePrimaryPaintNetHandleInt32Int32">
            <summary>Legt die Shim von Vehicle.SetVehiclePrimaryPaint(Vehicle this, NetHandle vehicle, Int32 paintType, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleSecondaryColorNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehicleSecondaryColor(Vehicle this, NetHandle vehicle, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleSecondaryPaintNetHandleInt32Int32">
            <summary>Legt die Shim von Vehicle.SetVehicleSecondaryPaint(Vehicle this, NetHandle vehicle, Int32 paintType, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleSirenStateNetHandleBoolean">
            <summary>Legt die Shim von Vehicle.SetVehicleSirenState(Vehicle this, NetHandle vehicle, Boolean state) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleSpecialLightStatusNetHandleBoolean">
            <summary>Legt die Shim von Vehicle.SetVehicleSpecialLightStatus(Vehicle this, NetHandle vehicle, Boolean state) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleTrimColorNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehicleTrimColor(Vehicle this, NetHandle vehicle, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleTyreSmokeColorNetHandleColor">
            <summary>Legt die Shim von Vehicle.SetVehicleTyreSmokeColor(Vehicle this, NetHandle vehicle, Color color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleWheelColorNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehicleWheelColor(Vehicle this, NetHandle vehicle, Int32 color) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleWheelTypeNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehicleWheelType(Vehicle this, NetHandle vehicle, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SetVehicleWindowTintNetHandleInt32">
            <summary>Legt die Shim von Vehicle.SetVehicleWindowTint(Vehicle this, NetHandle vehicle, Int32 type) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimVehicle.SpawnVehicleNetHandleVector3Single">
            <summary>Legt die Shim von Vehicle.SpawnVehicle(Vehicle this, NetHandle vehicle, Vector3 position, Single heading) fest.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimWorld">
            <summary>Shim-Typ von GTANetworkMethods.World</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimWorld.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimWorld.#ctor(GTANetworkMethods.World)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:GTANetworkMethods.Fakes.ShimWorld.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.AllInstances.DeleteWorldPropInt32Vector3Single">
            <summary>Legt die Shim von World.DeleteWorldProp(World this, Int32 modelHash, Vector3 position, Single radius) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.AllInstances.DeleteWorldPropUInt32Vector3Single">
            <summary>Legt die Shim von World.DeleteWorldProp(World this, UInt32 modelHash, Vector3 position, Single radius) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.AllInstances.GetTime">
            <summary>Legt die Shim von World.GetTime(World this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.AllInstances.GetWeather">
            <summary>Legt die Shim von World.GetWeather(World this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.AllInstances.RemoveIplString">
            <summary>Legt die Shim von World.RemoveIpl(World this, String iplName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.AllInstances.RequestIplString">
            <summary>Legt die Shim von World.RequestIpl(World this, String iplName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.AllInstances.ResetIplList">
            <summary>Legt die Shim von World.ResetIplList(World this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.AllInstances.SetTimeInt32Int32Int32">
            <summary>Legt die Shim von World.SetTime(World this, Int32 hours, Int32 minutes, Int32 seconds) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.AllInstances.SetWeatherString">
            <summary>Legt die Shim von World.SetWeather(World this, String weather) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.AllInstances.SetWeatherWeather">
            <summary>Legt die Shim von World.SetWeather(World this, Weather weather) fest.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimWorld.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimWorld.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:GTANetworkMethods.Fakes.ShimWorld.Bind(GTANetworkMethods.IWorld)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.Constructor">
            <summary>Legt die Shim von World.World(World this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.DeleteWorldPropInt32Vector3Single">
            <summary>Legt die Shim von World.DeleteWorldProp(World this, Int32 modelHash, Vector3 position, Single radius) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.DeleteWorldPropUInt32Vector3Single">
            <summary>Legt die Shim von World.DeleteWorldProp(World this, UInt32 modelHash, Vector3 position, Single radius) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.GetTime">
            <summary>Legt die Shim von World.GetTime(World this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.GetWeather">
            <summary>Legt die Shim von World.GetWeather(World this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.RemoveIplString">
            <summary>Legt die Shim von World.RemoveIpl(World this, String iplName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.RequestIplString">
            <summary>Legt die Shim von World.RequestIpl(World this, String iplName) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.ResetIplList">
            <summary>Legt die Shim von World.ResetIplList(World this) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.SetTimeInt32Int32Int32">
            <summary>Legt die Shim von World.SetTime(World this, Int32 hours, Int32 minutes, Int32 seconds) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.SetWeatherString">
            <summary>Legt die Shim von World.SetWeather(World this, String weather) fest.</summary>
        </member>
        <member name="P:GTANetworkMethods.Fakes.ShimWorld.SetWeatherWeather">
            <summary>Legt die Shim von World.SetWeather(World this, Weather weather) fest.</summary>
        </member>
        <member name="T:RAGE.Fakes.ShimEntities">
            <summary>Shim-Typ von RAGE.Entities</summary>
        </member>
        <member name="M:RAGE.Fakes.ShimEntities.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:RAGE.Fakes.ShimEntities.#ctor(RAGE.Entities)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:RAGE.Fakes.ShimEntities.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:RAGE.Fakes.ShimEntities.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:RAGE.Fakes.ShimEntities.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntities.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntities.Constructor">
            <summary>Legt die Shim von Entities.Entities(Entities this) fest.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntities.StaticConstructor">
            <summary>Legt die Shim von Entities.Entities() fest.</summary>
        </member>
        <member name="T:RAGE.Fakes.ShimEntityPoolBase`1">
            <summary>Shim-Typ von RAGE.EntityPoolBase&lt;T&gt;</summary>
        </member>
        <member name="M:RAGE.Fakes.ShimEntityPoolBase`1.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:RAGE.Fakes.ShimEntityPoolBase`1.#ctor(RAGE.EntityPoolBase{`0})">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.AllGet">
            <summary>Legt die Shim von EntityPoolBase`1.get_All(EntityPoolBase`1 this) fest.</summary>
        </member>
        <member name="T:RAGE.Fakes.ShimEntityPoolBase`1.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.AllInstances.AllGet">
            <summary>Legt die Shim von EntityPoolBase`1.get_All(EntityPoolBase`1 this) fest.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.AllInstances.AsEnumerableGet">
            <summary>Legt die Shim von EntityPoolBase`1.get_AsEnumerable(EntityPoolBase`1 this) fest.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.AllInstances.CountGet">
            <summary>Legt die Shim von EntityPoolBase`1.get_Count(EntityPoolBase`1 this) fest.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.AllInstances.CreateEntityGet">
            <summary>Legt die Shim von EntityPoolBase`1.get_CreateEntity(EntityPoolBase`1 this) fest.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.AllInstances.CreateEntitySetEntityPoolBaseCreateEntityDelegateOfT0">
            <summary>Legt die Shim von EntityPoolBase`1.set_CreateEntity(EntityPoolBase`1 this, CreateEntityDelegate value) fest.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.AllInstances.GetAtUInt16">
            <summary>Legt die Shim von EntityPoolBase`1.GetAt(EntityPoolBase`1 this, UInt16 id) fest.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.AsEnumerableGet">
            <summary>Legt die Shim von EntityPoolBase`1.get_AsEnumerable(EntityPoolBase`1 this) fest.</summary>
        </member>
        <member name="M:RAGE.Fakes.ShimEntityPoolBase`1.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:RAGE.Fakes.ShimEntityPoolBase`1.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.CountGet">
            <summary>Legt die Shim von EntityPoolBase`1.get_Count(EntityPoolBase`1 this) fest.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.CreateEntityGet">
            <summary>Legt die Shim von EntityPoolBase`1.get_CreateEntity(EntityPoolBase`1 this) fest.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.CreateEntitySetEntityPoolBaseCreateEntityDelegateOfT0">
            <summary>Legt die Shim von EntityPoolBase`1.set_CreateEntity(EntityPoolBase`1 this, CreateEntityDelegate value) fest.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.GetAtUInt16">
            <summary>Legt die Shim von EntityPoolBase`1.GetAt(EntityPoolBase`1 this, UInt16 id) fest.</summary>
        </member>
        <member name="T:RAGE.Fakes.ShimEntityPoolBase`1.ShimCreateEntityDelegate">
            <summary>Shim-Typ von RAGE.EntityPoolBase&lt;T&gt;.CreateEntityDelegate</summary>
        </member>
        <member name="M:RAGE.Fakes.ShimEntityPoolBase`1.ShimCreateEntityDelegate.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:RAGE.Fakes.ShimEntityPoolBase`1.ShimCreateEntityDelegate.#ctor(RAGE.EntityPoolBase{`0}.CreateEntityDelegate)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:RAGE.Fakes.ShimEntityPoolBase`1.ShimCreateEntityDelegate.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.ShimCreateEntityDelegate.AllInstances.BeginInvokeNetHandleAsyncCallbackObject">
            <summary>Legt die Shim von CreateEntityDelegate.BeginInvoke(CreateEntityDelegate this, NetHandle nh, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.ShimCreateEntityDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Legt die Shim von CreateEntityDelegate.EndInvoke(CreateEntityDelegate this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.ShimCreateEntityDelegate.AllInstances.InvokeNetHandle">
            <summary>Legt die Shim von CreateEntityDelegate.Invoke(CreateEntityDelegate this, NetHandle nh) fest.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.ShimCreateEntityDelegate.BeginInvokeNetHandleAsyncCallbackObject">
            <summary>Legt die Shim von CreateEntityDelegate.BeginInvoke(CreateEntityDelegate this, NetHandle nh, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="M:RAGE.Fakes.ShimEntityPoolBase`1.ShimCreateEntityDelegate.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:RAGE.Fakes.ShimEntityPoolBase`1.ShimCreateEntityDelegate.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.ShimCreateEntityDelegate.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:RAGE.Fakes.ShimEntityPoolBase`1.ShimCreateEntityDelegate.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:RAGE.Fakes.ShimEntityPoolBase`1.ShimCreateEntityDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.ShimCreateEntityDelegate.ConstructorObjectIntPtr">
            <summary>Legt die Shim von CreateEntityDelegate.CreateEntityDelegate(CreateEntityDelegate this, Object object, IntPtr method) fest.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.ShimCreateEntityDelegate.EndInvokeIAsyncResult">
            <summary>Legt die Shim von CreateEntityDelegate.EndInvoke(CreateEntityDelegate this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:RAGE.Fakes.ShimEntityPoolBase`1.ShimCreateEntityDelegate.InvokeNetHandle">
            <summary>Legt die Shim von CreateEntityDelegate.Invoke(CreateEntityDelegate this, NetHandle nh) fest.</summary>
        </member>
    </members>
</doc>
